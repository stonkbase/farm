{"version":3,"sources":["webpack:///./node_modules/bnc-onboard/dist/esm/torus-911715ea.js"],"names":["asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","error","done","Promise","then","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined","torusIcon","torus","options","networkId","preferred","label","iconSrc","svg","buttonPosition","modalZIndex","apiKey","buildEnv","enableLogging","enabledVerifiers","loginConfig","showTorusButton","integrity","whiteLabel","loginMethod","name","wallet","_wallet","regeneratorRuntime","mark","_callee3","_yield$import","Torus","instance","provider","wrap","_context3","prev","next","sent","init","network","host","chainId","networkName","concat","abrupt","connect","_connect","_callee","result","_context","login","verifier","message","stop","disconnect","cleanUp","address","get","web3","eth","accounts","Number","version","balance","_ref","_callee2","_context2","getBalance","data","toString","_x","_x2","dashboard","showWallet","type","desktop","mobile"],"mappings":"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","file":"js/chunk-2d0b9491.e35a13fe.js","sourcesContent":["function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nimport 'regenerator-runtime/runtime';\nimport { n as networkName } from './onboard-15b2c1da.js';\nimport 'bignumber.js';\nimport 'bnc-sdk';\nimport 'bowser';\nvar torusIcon = \"<svg width=\\\"257\\\" height=\\\"277\\\" viewBox=\\\"0 0 257 277\\\" fill=\\\"none\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\">\\n<rect width=\\\"153.889\\\" height=\\\"82.0741\\\" fill=\\\"#0364FF\\\" />\\n<rect x=\\\"71.8135\\\" width=\\\"82.0741\\\" height=\\\"277\\\" fill=\\\"#0364FF\\\" />\\n<path d=\\\"M215.443 82.0741C238.107 82.0741 256.48 63.7012 256.48 41.037C256.48 18.3729 238.107 0 215.443 \\n0C192.779 0 174.406 18.3729 174.406 41.037C174.406 63.7012 192.779 82.0741 215.443 82.0741Z\\\" fill=\\\"#0364FF\\\" />\\n</svg>\";\n\nfunction torus(options) {\n  var networkId = options.networkId,\n      preferred = options.preferred,\n      label = options.label,\n      iconSrc = options.iconSrc,\n      svg = options.svg,\n      buttonPosition = options.buttonPosition,\n      modalZIndex = options.modalZIndex,\n      apiKey = options.apiKey,\n      buildEnv = options.buildEnv,\n      enableLogging = options.enableLogging,\n      enabledVerifiers = options.enabledVerifiers,\n      loginConfig = options.loginConfig,\n      showTorusButton = options.showTorusButton,\n      integrity = options.integrity,\n      whiteLabel = options.whiteLabel,\n      loginMethod = options.loginMethod;\n  return {\n    name: label || 'Torus',\n    svg: svg || torusIcon,\n    iconSrc: iconSrc,\n    wallet: function () {\n      var _wallet = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3() {\n        var _yield$import, Torus, instance, provider;\n\n        return regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _context3.next = 2;\n                return import('@toruslabs/torus-embed');\n\n              case 2:\n                _yield$import = _context3.sent;\n                Torus = _yield$import[\"default\"];\n                instance = new Torus({\n                  buttonPosition: buttonPosition,\n                  modalZIndex: modalZIndex,\n                  apiKey: apiKey\n                });\n                _context3.next = 7;\n                return instance.init({\n                  buildEnv: buildEnv,\n                  enableLogging: enableLogging,\n                  network: {\n                    host: networkName(networkId),\n                    chainId: networkId,\n                    networkName: \"\".concat(networkName(networkId), \" Network\") // default: Main Ethereum Network\n\n                  },\n                  showTorusButton: showTorusButton,\n                  enabledVerifiers: enabledVerifiers,\n                  loginConfig: loginConfig,\n                  integrity: integrity,\n                  whiteLabel: whiteLabel\n                });\n\n              case 7:\n                provider = instance.provider;\n                return _context3.abrupt(\"return\", {\n                  provider: provider,\n                  instance: instance,\n                  \"interface\": {\n                    name: 'Torus',\n                    connect: function () {\n                      var _connect = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n                        var result;\n                        return regeneratorRuntime.wrap(function _callee$(_context) {\n                          while (1) {\n                            switch (_context.prev = _context.next) {\n                              case 0:\n                                _context.next = 2;\n                                return instance.login({\n                                  verifier: loginMethod\n                                });\n\n                              case 2:\n                                result = _context.sent;\n                                return _context.abrupt(\"return\", {\n                                  message: result[0]\n                                });\n\n                              case 4:\n                              case \"end\":\n                                return _context.stop();\n                            }\n                          }\n                        }, _callee);\n                      }));\n\n                      function connect() {\n                        return _connect.apply(this, arguments);\n                      }\n\n                      return connect;\n                    }(),\n                    disconnect: function disconnect() {\n                      return instance.cleanUp();\n                    },\n                    address: {\n                      get: function get() {\n                        return Promise.resolve(instance.web3.eth.accounts[0]);\n                      }\n                    },\n                    network: {\n                      get: function get() {\n                        return Promise.resolve(Number(instance.web3.version.network));\n                      }\n                    },\n                    balance: {\n                      get: function get() {\n                        return new Promise( /*#__PURE__*/function () {\n                          var _ref = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(resolve, reject) {\n                            return regeneratorRuntime.wrap(function _callee2$(_context2) {\n                              while (1) {\n                                switch (_context2.prev = _context2.next) {\n                                  case 0:\n                                    instance.web3.eth.getBalance(instance.web3.eth.accounts[0], function (err, data) {\n                                      if (err) {\n                                        reject(\"Error while checking Balance: \".concat(err));\n                                      } else {\n                                        resolve(data.toString(10));\n                                      }\n                                    });\n\n                                  case 1:\n                                  case \"end\":\n                                    return _context2.stop();\n                                }\n                              }\n                            }, _callee2);\n                          }));\n\n                          return function (_x, _x2) {\n                            return _ref.apply(this, arguments);\n                          };\n                        }());\n                      }\n                    },\n                    dashboard: function dashboard() {\n                      return instance.showWallet('home');\n                    }\n                  }\n                });\n\n              case 9:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3);\n      }));\n\n      function wallet() {\n        return _wallet.apply(this, arguments);\n      }\n\n      return wallet;\n    }(),\n    type: 'sdk',\n    desktop: true,\n    mobile: true,\n    preferred: preferred\n  };\n}\n\nexport default torus;"],"sourceRoot":""}