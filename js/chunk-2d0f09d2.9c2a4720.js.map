{"version":3,"sources":["webpack:///./node_modules/bnc-onboard/dist/esm/trezor-05345fcc.js"],"names":["_slicedToArray","arr","i","_arrayWithHoles","_iterableToArrayLimit","_unsupportedIterableToArray","_nonIterableRest","TypeError","Symbol","iterator","Object","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","value","length","err","Array","isArray","_toConsumableArray","_arrayWithoutHoles","_iterableToArray","_nonIterableSpread","o","minLen","_arrayLikeToArray","n","prototype","toString","call","slice","constructor","name","from","test","iter","len","arr2","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","error","Promise","then","_asyncToGenerator","fn","self","this","args","arguments","apply","trezorIcon","trezor","options","rpcUrl","networkId","email","appUrl","preferred","label","iconSrc","svg","wallet","_wallet","regeneratorRuntime","mark","_callee4","helpers","BigNumber","networkName","resetWalletState","provider","wrap","_context4","prev","trezorProvider","sent","abrupt","connect","enable","disconnect","address","get","_get","_callee","_context","getPrimaryAddress","stop","network","_get2","_callee2","_context2","balance","_get3","_callee3","_context3","getBalance","_x","type","desktop","mobile","osExclusions","_x2","_trezorProvider","_callee13","TrezorConnectLibrary","EthereumTx","ethUtil","_yield$import","createProvider","_yield$import2","generateAddresses","isValidPath","TrezorConnect","DEVICE_EVENT","DEVICE","TREZOR_DEFAULT_PATH","dPath","addressToPath","enabled","customPath","account","setPath","_setPath","isCustomPath","getAddress","_getAddress","addresses","setPrimaryAccount","getPublicKey","_getPublicKey","getMoreAccounts","_getMoreAccounts","_getAccounts","_getAccounts2","getBalances","trezorSignTransaction","_signTransaction","_signTransaction2","_signMessage","_signMessage2","_context13","_callee12","message","_","path","_context12","size","entries","ethereumSignMessage","stripHexPrefix","data","hex","response","success","payload","toChecksumAddress","Error","signature","concat","_x9","_callee11","transactionData","transaction","trezorResult","_context11","values","Transaction","chain","v","r","s","serialize","_x8","nonce","gasPrice","gas","to","ethereumSignTransaction","gasLimit","chainId","sendAsync","jsonrpc","method","params","id","e","res","result","all","map","_ref3","_callee5","_context5","_x7","_callee10","getMore","addressInfo","_context10","t0","forEach","_ref4","set","_x6","_callee9","accounts","_context9","_callee8","_context8","coin","publicKey","chainCode","serializedPath","accountIndex","findIndex","_ref","_ref2","accountAddress","unshift","splice","Map","keys","_callee7","errorMsg","_context7","ethereumGetAddress","showOnTrezor","_x5","_callee6","custom","_context6","_x3","_x4","manifest","getAccounts","callback","signTransaction","processMessage","messageData","processPersonalMessage","signMessage","signPersonalMessage","on","event","DISCONNECT","disconnected","walletName","send"],"mappings":"kHAAA,SAASA,EAAeC,EAAKC,GAAK,OAAOC,EAAgBF,IAAQG,EAAsBH,EAAKC,IAAMG,EAA4BJ,EAAKC,IAAMI,IAEzI,SAASA,IAAqB,MAAM,IAAIC,UAAU,6IAElD,SAASH,EAAsBH,EAAKC,GAAK,GAAsB,qBAAXM,QAA4BA,OAAOC,YAAYC,OAAOT,GAAjE,CAAgF,IAAIU,EAAO,GAAQC,GAAK,EAAUC,GAAK,EAAWC,OAAKC,EAAW,IAAM,IAAK,IAAiCC,EAA7BC,EAAKhB,EAAIO,OAAOC,cAAmBG,GAAMI,EAAKC,EAAGC,QAAQC,MAAOP,GAAK,EAA6B,GAArBD,EAAKS,KAAKJ,EAAGK,OAAYnB,GAAKS,EAAKW,SAAWpB,EAAG,MAAW,MAAOqB,GAAOV,GAAK,EAAMC,EAAKS,EAAO,QAAU,IAAWX,GAAsB,MAAhBK,EAAG,WAAmBA,EAAG,YAAe,QAAU,GAAIJ,EAAI,MAAMC,GAAQ,OAAOH,GAEle,SAASR,EAAgBF,GAAO,GAAIuB,MAAMC,QAAQxB,GAAM,OAAOA,EAE/D,SAASyB,EAAmBzB,GAAO,OAAO0B,EAAmB1B,IAAQ2B,EAAiB3B,IAAQI,EAA4BJ,IAAQ4B,IAElI,SAASA,IAAuB,MAAM,IAAItB,UAAU,wIAEpD,SAASF,EAA4ByB,EAAGC,GAAU,GAAKD,EAAL,CAAgB,GAAiB,kBAANA,EAAgB,OAAOE,EAAkBF,EAAGC,GAAS,IAAIE,EAAIvB,OAAOwB,UAAUC,SAASC,KAAKN,GAAGO,MAAM,GAAI,GAAiE,MAAnD,WAANJ,GAAkBH,EAAEQ,cAAaL,EAAIH,EAAEQ,YAAYC,MAAgB,QAANN,GAAqB,QAANA,EAAoBT,MAAMgB,KAAKV,GAAc,cAANG,GAAqB,2CAA2CQ,KAAKR,GAAWD,EAAkBF,EAAGC,QAAzG,GAE7S,SAASH,EAAiBc,GAAQ,GAAsB,qBAAXlC,QAA0BA,OAAOC,YAAYC,OAAOgC,GAAO,OAAOlB,MAAMgB,KAAKE,GAE1H,SAASf,EAAmB1B,GAAO,GAAIuB,MAAMC,QAAQxB,GAAM,OAAO+B,EAAkB/B,GAEpF,SAAS+B,EAAkB/B,EAAK0C,IAAkB,MAAPA,GAAeA,EAAM1C,EAAIqB,UAAQqB,EAAM1C,EAAIqB,QAAQ,IAAK,IAAIpB,EAAI,EAAG0C,EAAO,IAAIpB,MAAMmB,GAAMzC,EAAIyC,EAAKzC,IAAO0C,EAAK1C,GAAKD,EAAIC,GAAM,OAAO0C,EAEhL,SAASC,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQC,EAAKC,GAAO,IAAM,IAAIC,EAAOP,EAAIK,GAAKC,GAAU/B,EAAQgC,EAAKhC,MAAS,MAAOiC,GAAwB,YAAfN,EAAOM,GAAsBD,EAAKlC,KAAQ4B,EAAQ1B,GAAiBkC,QAAQR,QAAQ1B,GAAOmC,KAAKP,EAAOC,GAE7P,SAASO,EAAkBC,GAAM,OAAO,WAAc,IAAIC,EAAOC,KAAMC,EAAOC,UAAW,OAAO,IAAIP,SAAQ,SAAUR,EAASC,GAAU,IAAIF,EAAMY,EAAGK,MAAMJ,EAAME,GAAO,SAASZ,EAAM5B,GAASwB,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,OAAQ7B,GAAU,SAAS6B,EAAO3B,GAAOsB,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,QAAS3B,GAAQ0B,OAAMlC,OAtBjX,OAwBA,IAAIiD,EAAa,2wBAEjB,SAASC,EAAOC,GACd,IAAIC,EAASD,EAAQC,OACjBC,EAAYF,EAAQE,UACpBC,EAAQH,EAAQG,MAChBC,EAASJ,EAAQI,OACjBC,EAAYL,EAAQK,UACpBC,EAAQN,EAAQM,MAChBC,EAAUP,EAAQO,QAClBC,EAAMR,EAAQQ,IAClB,MAAO,CACLnC,KAAMiC,GAAS,SACfE,IAAKA,GAAOV,EACZS,QAASA,EACTE,OAAQ,WACN,IAAIC,EAAUnB,EAAgCoB,mBAAmBC,MAAK,SAASC,EAASC,GACtF,IAAIC,EAAWC,EAAaC,EAAkBC,EAC9C,OAAOP,mBAAmBQ,MAAK,SAAmBC,GAChD,MAAO,EACL,OAAQA,EAAUC,KAAOD,EAAUpE,MACjC,KAAK,EAGH,OAFA+D,EAAYD,EAAQC,UAAWC,EAAcF,EAAQE,YAAaC,EAAmBH,EAAQG,iBAC7FG,EAAUpE,KAAO,EACVsE,EAAe,CACpBrB,OAAQA,EACRC,UAAWA,EACXC,MAAOA,EACPC,OAAQA,EACRW,UAAWA,EACXC,YAAaA,EACbC,iBAAkBA,IAGtB,KAAK,EAEH,OADAC,EAAWE,EAAUG,KACdH,EAAUI,OAAO,SAAU,CAChCN,SAAUA,EACV,UAAa,CACX7C,KAAM,SACNoD,QAASP,EAASQ,OAClBC,WAAYT,EAASS,WACrBC,QAAS,CACPC,IAAK,WACH,IAAIC,EAAOvC,EAAgCoB,mBAAmBC,MAAK,SAASmB,IAC1E,OAAOpB,mBAAmBQ,MAAK,SAAkBa,GAC/C,MAAO,EACL,OAAQA,EAASX,KAAOW,EAAShF,MAC/B,KAAK,EACH,OAAOgF,EAASR,OAAO,SAAUN,EAASe,qBAE5C,KAAK,EACL,IAAK,MACH,OAAOD,EAASE,UAGrBH,OAGL,SAASF,IACP,OAAOC,EAAKjC,MAAMH,KAAME,WAG1B,OAAOiC,EApBJ,IAuBPM,QAAS,CACPN,IAAK,WACH,IAAIO,EAAQ7C,EAAgCoB,mBAAmBC,MAAK,SAASyB,IAC3E,OAAO1B,mBAAmBQ,MAAK,SAAmBmB,GAChD,MAAO,EACL,OAAQA,EAAUjB,KAAOiB,EAAUtF,MACjC,KAAK,EACH,OAAOsF,EAAUd,OAAO,SAAUtB,GAEpC,KAAK,EACL,IAAK,MACH,OAAOoC,EAAUJ,UAGtBG,OAGL,SAASR,IACP,OAAOO,EAAMvC,MAAMH,KAAME,WAG3B,OAAOiC,EApBJ,IAuBPU,QAAS,CACPV,IAAK,WACH,IAAIW,EAAQjD,EAAgCoB,mBAAmBC,MAAK,SAAS6B,IAC3E,IAAIb,EACJ,OAAOjB,mBAAmBQ,MAAK,SAAmBuB,GAChD,MAAO,EACL,OAAQA,EAAUrB,KAAOqB,EAAU1F,MACjC,KAAK,EAEH,OADA4E,EAAUV,EAASe,oBACZS,EAAUlB,OAAO,SAAUI,GAAWV,EAASyB,WAAWf,IAEnE,KAAK,EACL,IAAK,MACH,OAAOc,EAAUR,UAGtBO,OAGL,SAASZ,IACP,OAAOW,EAAM3C,MAAMH,KAAME,WAG3B,OAAOiC,EAtBJ,OA4Bb,KAAK,EACL,IAAK,MACH,OAAOT,EAAUc,UAGtBrB,OAGL,SAASJ,EAAOmC,GACd,OAAOlC,EAAQb,MAAMH,KAAME,WAG7B,OAAOa,EApHD,GAsHRoC,KAAM,WACNC,SAAS,EACTC,QAAQ,EACRC,aAAc,CAAC,OACf3C,UAAWA,GAIf,SAASiB,EAAe2B,GACtB,OAAOC,EAAgBrD,MAAMH,KAAME,WAGrC,SAASsD,IA6lBP,OA5lBAA,EAAkB3D,EAAgCoB,mBAAmBC,MAAK,SAASuC,EAAUnD,GAC3F,IAAIoD,EAAsBC,EAAYC,EAASC,EAAeC,EAAgBC,EAAgBC,EAAmBC,EAAaC,EAAeC,EAAcC,EAAQC,EAAqB7D,EAAWC,EAAOC,EAAQH,EAAQc,EAAWC,EAAaC,EAAkB+C,EAAOC,EAAeC,EAASC,EAAYC,EAASlD,EAAUS,EAAY0C,EAASC,EAAUC,EAAc7C,EAAQ8C,EAAYC,EAAaC,EAAWC,EAAmBC,EAAcC,EAAe5C,EAAmB6C,EAAiBC,EAAkBC,EAAcC,EAAeC,EAAavC,EAAYwC,EAAuBC,EAAkBC,EAAmBC,EAAcC,EAEjoB,OAAO5E,mBAAmBQ,MAAK,SAAoBqE,GACjD,MAAO,EACL,OAAQA,EAAWnE,KAAOmE,EAAWxI,MACnC,KAAK,EAqeH,OApeAuI,EAAgB,WA4Cd,OA3CAA,EAAgBhG,EAAgCoB,mBAAmBC,MAAK,SAAS6E,EAAUC,GACzF,IAAIC,EAAG/D,EAASgE,EAEhB,OAAOjF,mBAAmBQ,MAAK,SAAoB0E,GACjD,MAAO,EACL,OAAQA,EAAWxE,KAAOwE,EAAW7I,MACnC,KAAK,EACH,GAA6B,IAAvBiH,EAAc6B,KAAa,CAC/BD,EAAW7I,KAAO,EAClB,MAIF,OADA6I,EAAW7I,KAAO,EACX0E,IAET,KAAK,EAEH,OADAiE,EAAI7J,EAAe0B,EAAmByG,EAAc8B,WAAW,GAAI,GAAInE,EAAU+D,EAAE,GAAIC,EAAOD,EAAE,GACzFE,EAAWrE,OAAO,SAAU,IAAInC,SAAQ,SAAUR,EAASC,GAChE8E,EAAcoC,oBAAoB,CAChCJ,KAAMA,EACNF,QAASpC,EAAQ2C,eAAeP,EAAQQ,MACxCC,KAAK,IACJ7G,MAAK,SAAU8G,GAChB,GAAIA,EAASC,QAAS,CAChBD,EAASE,QAAQ1E,UAAY0B,EAAQiD,kBAAkB3E,IACzD9C,EAAO,IAAI0H,MAAM,6CAGnB,IAAIC,EAAY,KAAKC,OAAON,EAASE,QAAQG,WAC7C5H,EAAQ4H,QAER3H,EAAO,IAAI0H,MAAMJ,EAASE,SAAWF,EAASE,QAAQlH,OAAS,gDAKvE,KAAK,EACL,IAAK,MACH,OAAOyG,EAAW3D,UAGvBuD,OAEEF,EAAc1F,MAAMH,KAAME,YAGnC0F,EAAe,SAAuBqB,GACpC,OAAOpB,EAAc1F,MAAMH,KAAME,YAGnCyF,EAAoB,WA+ClB,OA9CAA,EAAoB9F,EAAgCoB,mBAAmBC,MAAK,SAASgG,EAAUC,GAC7F,IAAIjB,EAAMkB,EAAaC,EAAcN,EACrC,OAAO9F,mBAAmBQ,MAAK,SAAoB6F,GACjD,MAAO,EACL,OAAQA,EAAW3F,KAAO2F,EAAWhK,MACnC,KAAK,EACH,GAA6B,IAAvBiH,EAAc6B,KAAa,CAC/BkB,EAAWhK,KAAO,EAClB,MAIF,OADAgK,EAAWhK,KAAO,EACX0E,IAET,KAAK,EAMH,OALAkE,EAAOpI,EAAmByG,EAAcgD,UAAU,GAClDH,EAAc,IAAIzD,EAAW6D,YAAYL,EAAiB,CACxDM,MAAOnG,EAAYd,KAErB8G,EAAWhK,KAAO,EACXmI,EAAsBS,EAAMiB,GAErC,KAAK,EAGH,GAFAE,EAAeC,EAAWzF,KAEtBwF,EAAaV,QAAS,CACxBW,EAAWhK,KAAO,GAClB,MAGF,MAAM,IAAIwJ,MAAMO,EAAaT,QAAQlH,OAEvC,KAAK,GAKH,OAJAqH,EAAYM,EAAaT,QACzBQ,EAAYM,EAAIX,EAAUW,EAC1BN,EAAYO,EAAIZ,EAAUY,EAC1BP,EAAYQ,EAAIb,EAAUa,EACnBN,EAAWxF,OAAO,SAAU,KAAKkF,OAAOI,EAAYS,YAAYtJ,SAAS,SAElF,KAAK,GACL,IAAK,MACH,OAAO+I,EAAW9E,UAGvB0E,OAEEvB,EAAkBxF,MAAMH,KAAME,YAGvCwF,EAAmB,SAA2BoC,GAC5C,OAAOnC,EAAkBxF,MAAMH,KAAME,YAGvCuF,EAAwB,SAA+BS,EAAMiB,GAC3D,IAAIY,EAAQZ,EAAgBY,MACxBC,EAAWb,EAAgBa,SAC3BC,EAAMd,EAAgBc,IACtBC,EAAKf,EAAgBe,GACrBzK,EAAQ0J,EAAgB1J,MACxB+I,EAAOW,EAAgBX,KAC3B,OAAOtC,EAAciE,wBAAwB,CAC3CjC,KAAMA,EACNkB,YAAa,CACXW,MAAOA,EACPC,SAAUA,EACVI,SAAUH,EACVC,GAAIA,EACJzK,MAAOA,GAAS,GAChB+I,KAAMA,GAAQ,GACd6B,QAAS7H,MAKfyC,EAAa,SAAqBf,GAChC,OAAO,IAAIvC,SAAQ,SAAUR,EAASC,GACpCoC,EAAS8G,UAAU,CACjBC,QAAS,MACTC,OAAQ,iBACRC,OAAQ,CAACvG,EAAS,UAClBwG,GAAI,KACH,SAAUC,EAAGC,GACdD,GAAKvJ,EAAOuJ,GACZ,IAAIE,EAASD,GAAOA,EAAIC,OAGtB1J,EADY,MAAV0J,EACM,IAAIxH,EAAUwH,GAAQtK,SAAS,IAE/B,aAMhBiH,EAAc,SAAsBR,GAClC,OAAOrF,QAAQmJ,IAAI9D,EAAU+D,KAAI,SAAU7G,GACzC,OAAO,IAAIvC,QAAsB,WAC/B,IAAIqJ,EAAQnJ,EAAgCoB,mBAAmBC,MAAK,SAAS+H,EAAS9J,GACpF,IAAI0D,EACJ,OAAO5B,mBAAmBQ,MAAK,SAAmByH,GAChD,MAAO,EACL,OAAQA,EAAUvH,KAAOuH,EAAU5L,MACjC,KAAK,EAEH,OADA4L,EAAU5L,KAAO,EACV2F,EAAWf,GAEpB,KAAK,EACHW,EAAUqG,EAAUrH,KACpB1C,EAAQ,CACN+C,QAASA,EACTW,QAASA,IAGb,KAAK,EACL,IAAK,MACH,OAAOqG,EAAU1G,UAGtByG,OAGL,OAAO,SAAUE,GACf,OAAOH,EAAM7I,MAAMH,KAAME,YA1BI,SAgCrCqF,EAAgB,WA8Dd,OA7DAA,EAAgB1F,EAAgCoB,mBAAmBC,MAAK,SAASkI,EAAUC,GACzF,IAAIC,EACJ,OAAOrI,mBAAmBQ,MAAK,SAAoB8H,GACjD,MAAO,EACL,OAAQA,EAAW5H,KAAO4H,EAAWjM,MACnC,KAAK,EACH,GAAIkH,EAAS,CACX+E,EAAWjM,KAAO,EAClB,MAGF,OAAOiM,EAAWzH,OAAO,SAAU,MAAC3E,IAEtC,KAAK,EACH,KAAMoH,EAAc6B,KAAO,IAAMiD,EAAU,CACzCE,EAAWjM,KAAO,EAClB,MAGF,OAAOiM,EAAWzH,OAAO,SAAUkD,KAErC,KAAK,EAKH,GAJc,KAAVV,IACFA,EAAQD,GAGNK,EAAS,CACX6E,EAAWjM,KAAO,GAClB,MAKF,OAFAiM,EAAW5H,KAAO,EAClB4H,EAAWjM,KAAO,EACX4H,IAET,KAAK,EACHR,EAAU6E,EAAW1H,KACrB0H,EAAWjM,KAAO,GAClB,MAEF,KAAK,GAGH,MAFAiM,EAAW5H,KAAO,GAClB4H,EAAWC,GAAKD,EAAW,SAAS,GAC9BA,EAAWC,GAEnB,KAAK,GAOH,OANAF,EAActF,EAAkBU,EAASH,EAAc6B,MACvDkD,EAAYG,SAAQ,SAAUC,GAC5B,IAAIpF,EAAQoF,EAAMpF,MACdpC,EAAUwH,EAAMxH,QACpBqC,EAAcoF,IAAIzH,EAASoC,MAEtBiF,EAAWzH,OAAO,SAAUkD,KAErC,KAAK,GACL,IAAK,MACH,OAAOuE,EAAW/G,UAGvB4G,EAAW,KAAM,CAAC,CAAC,EAAG,UAEpB7D,EAAcpF,MAAMH,KAAME,YAGnCoF,EAAe,SAAuBsE,GACpC,OAAOrE,EAAcpF,MAAMH,KAAME,YAGnCmF,EAAmB,WAqBjB,OApBAA,EAAmBxF,EAAgCoB,mBAAmBC,MAAK,SAAS2I,IAClF,IAAIC,EACJ,OAAO7I,mBAAmBQ,MAAK,SAAmBsI,GAChD,MAAO,EACL,OAAQA,EAAUpI,KAAOoI,EAAUzM,MACjC,KAAK,EAEH,OADAyM,EAAUzM,KAAO,EACVgI,GAAa,GAEtB,KAAK,EAEH,OADAwE,EAAWC,EAAUlI,KACdkI,EAAUjI,OAAO,SAAU0D,EAAYsE,IAEhD,KAAK,EACL,IAAK,MACH,OAAOC,EAAUvH,UAGtBqH,OAEExE,EAAiBlF,MAAMH,KAAME,YAGtCkF,EAAkB,WAChB,OAAOC,EAAiBlF,MAAMH,KAAME,YAGtCqC,EAAoB,WAClB,OAAOiC,EAAUQ,IAAY,QAAK7H,GAGpCgI,EAAgB,WAoDd,OAnDAA,EAAgBtF,EAAgCoB,mBAAmBC,MAAK,SAAS8I,IAC/E,IAAInB,EACJ,OAAO5H,mBAAmBQ,MAAK,SAAmBwI,GAChD,MAAO,EACL,OAAQA,EAAUtI,KAAOsI,EAAU3M,MACjC,KAAK,EACH,GAAIgH,EAAO,CACT2F,EAAU3M,KAAO,EACjB,MAGF,MAAM,IAAIwJ,MAAM,qDAElB,KAAK,EAGH,OAFAmD,EAAUtI,KAAO,EACjBsI,EAAU3M,KAAO,EACV4G,EAAcgB,aAAa,CAChCgB,KAAM5B,EACN4F,KAAM,QAGV,KAAK,EAGH,GAFArB,EAASoB,EAAUpI,KAEfgH,EAAOlC,QAAS,CAClBsD,EAAU3M,KAAO,EACjB,MAGF,MAAM,IAAIwJ,MAAM+B,EAAOjC,QAAQlH,OAEjC,KAAK,EAMH,OALAgF,EAAU,CACRyF,UAAWtB,EAAOjC,QAAQuD,UAC1BC,UAAWvB,EAAOjC,QAAQwD,UAC1BlE,KAAM2C,EAAOjC,QAAQyD,gBAEhBJ,EAAUnI,OAAO,SAAU4C,GAEpC,KAAK,GAGH,MAFAuF,EAAUtI,KAAO,GACjBsI,EAAUT,GAAKS,EAAU,SAAS,GAC5B,IAAInD,MAAM,sDAElB,KAAK,GACL,IAAK,MACH,OAAOmD,EAAUzH,UAGtBwH,EAAU,KAAM,CAAC,CAAC,EAAG,UAEnB7E,EAAchF,MAAMH,KAAME,YAGnCgF,EAAe,WACb,OAAOC,EAAchF,MAAMH,KAAME,YAGnC+E,EAAoB,SAA4B/C,GAE9C,IAAI4H,EAAWhM,EAAmByG,EAAc8B,WAE5CiE,EAAeR,EAASS,WAAU,SAAUC,GAC9C,IAAIC,EAAQrO,EAAeoO,EAAM,GAC7BE,EAAiBD,EAAM,GAE3B,OAAOC,IAAmBxI,KAG5B4H,EAASa,QAAQb,EAASc,OAAON,EAAc,GAAG,IAElD/F,EAAgB,IAAIsG,IAAIf,IAG1B9E,EAAY,WACV,OAAOpH,MAAMgB,KAAK2F,EAAcuG,SAGlC/F,EAAc,WAwCZ,OAvCAA,EAAclF,EAAgCoB,mBAAmBC,MAAK,SAAS6J,EAAS7E,GACtF,IAAI8E,EAAUnC,EACd,OAAO5H,mBAAmBQ,MAAK,SAAmBwJ,GAChD,MAAO,EACL,OAAQA,EAAUtJ,KAAOsJ,EAAU3N,MACjC,KAAK,EAIH,OAHA0N,EAAW,sCAAsChE,OAAOd,GACxD+E,EAAUtJ,KAAO,EACjBsJ,EAAU3N,KAAO,EACV4G,EAAcgH,mBAAmB,CACtChF,KAAMA,EACNiF,cAAc,IAGlB,KAAK,EAGH,GAFAtC,EAASoC,EAAUpJ,KAEfgH,EAAOlC,QAAS,CAClBsE,EAAU3N,KAAO,EACjB,MAGF,MAAM,IAAIwJ,MAAMkE,GAElB,KAAK,EACH,OAAOC,EAAUnJ,OAAO,SAAU+G,EAAOjC,QAAQ1E,SAEnD,KAAK,GAGH,MAFA+I,EAAUtJ,KAAO,GACjBsJ,EAAUzB,GAAKyB,EAAU,SAAS,GAC5B,IAAInE,MAAMkE,GAElB,KAAK,GACL,IAAK,MACH,OAAOC,EAAUzI,UAGtBuI,EAAU,KAAM,CAAC,CAAC,EAAG,UAEnBhG,EAAY5E,MAAMH,KAAME,YAGjC4E,EAAa,SAAsBsG,GACjC,OAAOrG,EAAY5E,MAAMH,KAAME,YAGjC8B,EAAS,WAEP,OADAwC,GAAU,EACHc,KAGTT,EAAe,WACb,OAAOJ,GAGTG,EAAW,WAqDT,OApDAA,EAAW/E,EAAgCoB,mBAAmBC,MAAK,SAASmK,EAASnF,EAAMoF,GACzF,IAAIpJ,EACJ,OAAOjB,mBAAmBQ,MAAK,SAAmB8J,GAChD,MAAO,EACL,OAAQA,EAAU5J,KAAO4J,EAAUjO,MACjC,KAAK,EACH,GAAI2G,EAAYiC,GAAO,CACrBqF,EAAUjO,KAAO,EACjB,MAGF,OAAOiO,EAAUzJ,OAAO,UAAU,GAEpC,KAAK,EAMH,GALIoE,IAAS5B,IAEXC,EAAgB,IAAIsG,MAGjBS,EAAQ,CACXC,EAAUjO,KAAO,GACjB,MAKF,OAFAiO,EAAU5J,KAAO,EACjB4J,EAAUjO,KAAO,EACVwH,EAAWoB,GAEpB,KAAK,EAKH,OAJAhE,EAAUqJ,EAAU1J,KACpB0C,EAAcoF,IAAIzH,EAASgE,GAC3B5B,EAAQ4B,EACRzB,GAAa,EACN8G,EAAUzJ,OAAO,UAAU,GAEpC,KAAK,GAGH,MAFAyJ,EAAU5J,KAAO,GACjB4J,EAAU/B,GAAK+B,EAAU,SAAS,GAC5B,IAAIzE,MAAM,qDAAqDE,OAAOd,IAE9E,KAAK,GAGH,OAFAzB,GAAa,EACbH,EAAQ4B,EACDqF,EAAUzJ,OAAO,UAAU,GAEpC,KAAK,GACL,IAAK,MACH,OAAOyJ,EAAU/I,UAGtB6I,EAAU,KAAM,CAAC,CAAC,EAAG,UAEnBzG,EAASzE,MAAMH,KAAME,YAG9ByE,EAAU,SAAmB6G,EAAKC,GAChC,OAAO7G,EAASzE,MAAMH,KAAME,YAG9B+B,EAAa,WACXqC,EAAQ,GACRC,EAAgB,IAAIsG,IACpBrG,GAAU,EACVhD,EAASgB,QAGXsD,EAAWxI,KAAO,GACX,oDAET,KAAK,GAGH,OAFAoG,EAAuBoC,EAAWjE,KAClCiE,EAAWxI,KAAO,GACX,2JAET,KAAK,GAGH,OAFAqG,EAAamC,EAAWjE,KACxBiE,EAAWxI,KAAO,GACX,2JAET,KAAK,GAGH,OAFAsG,EAAUkC,EAAWjE,KACrBiE,EAAWxI,KAAO,GACX,uJAET,KAAK,GAIH,OAHAuG,EAAgBiC,EAAWjE,KAC3BiC,EAAiBD,EAAc,WAC/BiC,EAAWxI,KAAO,GACX,uJAET,KAAK,GAiFH,OAhFAyG,EAAiB+B,EAAWjE,KAC5BmC,EAAoBD,EAAeC,kBACnCC,EAAcF,EAAeE,YAC7BC,EAAgBR,EAAqB,WAAYS,EAAeT,EAAqBS,aAAcC,EAASV,EAAqBU,OACjIC,EAAsB,iBACtB7D,EAAYF,EAAQE,UAAWC,EAAQH,EAAQG,MAAOC,EAASJ,EAAQI,OAAQH,EAASD,EAAQC,OAAQc,EAAYf,EAAQe,UAAWC,EAAchB,EAAQgB,YAAaC,EAAmBjB,EAAQiB,iBACrM+C,EAAQ,GACRC,EAAgB,IAAIsG,IACpBrG,GAAU,EACVC,GAAa,EACbP,EAAcwH,SAAS,CACrBjL,MAAOA,EACPC,OAAQA,IAEVc,EAAWsC,EAAe,CACxB6H,YAAa,SAAqBC,GAChCtG,IAAe1F,MAAK,SAAUgJ,GAC5B,OAAOgD,EAAS,KAAMhD,MACrB,UAAS,SAAUjL,GACpB,OAAOiO,EAASjO,EAAK,UAGzBkO,gBAAiB,SAAyB1E,EAAiByE,GACzDlG,EAAiByB,GAAiBvH,MAAK,SAAUgJ,GAC/C,OAAOgD,EAAS,KAAMhD,MACrB,UAAS,SAAUjL,GACpB,OAAOiO,EAASjO,EAAK,UAGzBmO,eAAgB,SAAwBC,EAAaH,GACnDhG,EAAamG,GAAanM,MAAK,SAAUgJ,GACvC,OAAOgD,EAAS,KAAMhD,MACrB,UAAS,SAAUjL,GACpB,OAAOiO,EAASjO,EAAK,UAGzBqO,uBAAwB,SAAgCD,EAAaH,GACnEhG,EAAamG,GAAanM,MAAK,SAAUgJ,GACvC,OAAOgD,EAAS,KAAMhD,MACrB,UAAS,SAAUjL,GACpB,OAAOiO,EAASjO,EAAK,UAGzBsO,YAAa,SAAqBF,EAAaH,GAC7ChG,EAAamG,GAAanM,MAAK,SAAUgJ,GACvC,OAAOgD,EAAS,KAAMhD,MACrB,UAAS,SAAUjL,GACpB,OAAOiO,EAASjO,EAAK,UAGzBuO,oBAAqB,SAA6BH,EAAaH,GAC7DhG,EAAamG,GAAanM,MAAK,SAAUgJ,GACvC,OAAOgD,EAAS,KAAMhD,MACrB,UAAS,SAAUjL,GACpB,OAAOiO,EAASjO,EAAK,UAGzB4C,OAAQA,IAEV2D,EAAciI,GAAGhI,GAAc,SAAUiI,GACnCA,EAAMjJ,OAASiB,EAAOiI,aACxB7K,EAASgB,OACTjB,EAAiB,CACf+K,cAAc,EACdC,WAAY,eAIlB/K,EAASmD,QAAUA,EACnBnD,EAAS8C,MAAQA,EACjB9C,EAASQ,OAASA,EAClBR,EAASyD,kBAAoBA,EAC7BzD,EAASe,kBAAoBA,EAC7Bf,EAASmK,YAAcrG,EACvB9D,EAAS4D,gBAAkBA,EAC3B5D,EAASyB,WAAaA,EACtBzB,EAASgE,YAAcA,EACvBhE,EAASgL,KAAOhL,EAAS8G,UACzB9G,EAASS,WAAaA,EACtBT,EAASqD,aAAeA,EACjBiB,EAAWhE,OAAO,SAAUN,GAErC,KAAK,GACL,IAAK,MACH,OAAOsE,EAAWtD,UAGvBiB,OAEED,EAAgBrD,MAAMH,KAAME,WAGtB","file":"js/chunk-2d0f09d2.9c2a4720.js","sourcesContent":["function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _iterableToArrayLimit(arr, i) { if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return; var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _iterableToArray(iter) { if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nvar trezorIcon = \"\\n\\t<svg width=\\\"40px\\\" height=\\\"40px\\\" viewBox=\\\"0 0 114 166\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n\\t\\t<g id=\\\"Styles\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n\\t\\t\\t<path d=\\\"M17,51.453125 L17,40 C17,17.90861 34.90861,-1.0658141e-14 57,-1.0658141e-14 C79.09139,-1.0658141e-14 97,17.90861 97,40 L97,51.453125 L113.736328,51.453125 L113.736328,139.193359 L57.5,166 L0,139.193359 L0,51.453125 L17,51.453125 Z M37,51.453125 L77,51.453125 L77,40 L76.9678398,40 C76.3750564,29.406335 67.6617997,21 57,21 C46.3382003,21 37.6249436,29.406335 37.0321602,40 L37,40 L37,51.453125 Z M23,72 L23,125 L56.8681641,140.966797 L91,125 L91,72 L23,72 Z\\\" id=\\\"Trezor-logo\\\" fill=\\\"currentColor\\\"></path>\\n\\t\\t</g>\\n\\t</svg>\\n\";\n\nfunction trezor(options) {\n  var rpcUrl = options.rpcUrl,\n      networkId = options.networkId,\n      email = options.email,\n      appUrl = options.appUrl,\n      preferred = options.preferred,\n      label = options.label,\n      iconSrc = options.iconSrc,\n      svg = options.svg;\n  return {\n    name: label || 'Trezor',\n    svg: svg || trezorIcon,\n    iconSrc: iconSrc,\n    wallet: function () {\n      var _wallet = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee4(helpers) {\n        var BigNumber, networkName, resetWalletState, provider;\n        return regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                BigNumber = helpers.BigNumber, networkName = helpers.networkName, resetWalletState = helpers.resetWalletState;\n                _context4.next = 3;\n                return trezorProvider({\n                  rpcUrl: rpcUrl,\n                  networkId: networkId,\n                  email: email,\n                  appUrl: appUrl,\n                  BigNumber: BigNumber,\n                  networkName: networkName,\n                  resetWalletState: resetWalletState\n                });\n\n              case 3:\n                provider = _context4.sent;\n                return _context4.abrupt(\"return\", {\n                  provider: provider,\n                  \"interface\": {\n                    name: 'Trezor',\n                    connect: provider.enable,\n                    disconnect: provider.disconnect,\n                    address: {\n                      get: function () {\n                        var _get = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n                          return regeneratorRuntime.wrap(function _callee$(_context) {\n                            while (1) {\n                              switch (_context.prev = _context.next) {\n                                case 0:\n                                  return _context.abrupt(\"return\", provider.getPrimaryAddress());\n\n                                case 1:\n                                case \"end\":\n                                  return _context.stop();\n                              }\n                            }\n                          }, _callee);\n                        }));\n\n                        function get() {\n                          return _get.apply(this, arguments);\n                        }\n\n                        return get;\n                      }()\n                    },\n                    network: {\n                      get: function () {\n                        var _get2 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2() {\n                          return regeneratorRuntime.wrap(function _callee2$(_context2) {\n                            while (1) {\n                              switch (_context2.prev = _context2.next) {\n                                case 0:\n                                  return _context2.abrupt(\"return\", networkId);\n\n                                case 1:\n                                case \"end\":\n                                  return _context2.stop();\n                              }\n                            }\n                          }, _callee2);\n                        }));\n\n                        function get() {\n                          return _get2.apply(this, arguments);\n                        }\n\n                        return get;\n                      }()\n                    },\n                    balance: {\n                      get: function () {\n                        var _get3 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3() {\n                          var address;\n                          return regeneratorRuntime.wrap(function _callee3$(_context3) {\n                            while (1) {\n                              switch (_context3.prev = _context3.next) {\n                                case 0:\n                                  address = provider.getPrimaryAddress();\n                                  return _context3.abrupt(\"return\", address && provider.getBalance(address));\n\n                                case 2:\n                                case \"end\":\n                                  return _context3.stop();\n                              }\n                            }\n                          }, _callee3);\n                        }));\n\n                        function get() {\n                          return _get3.apply(this, arguments);\n                        }\n\n                        return get;\n                      }()\n                    }\n                  }\n                });\n\n              case 5:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4);\n      }));\n\n      function wallet(_x) {\n        return _wallet.apply(this, arguments);\n      }\n\n      return wallet;\n    }(),\n    type: 'hardware',\n    desktop: true,\n    mobile: true,\n    osExclusions: ['iOS'],\n    preferred: preferred\n  };\n}\n\nfunction trezorProvider(_x2) {\n  return _trezorProvider.apply(this, arguments);\n}\n\nfunction _trezorProvider() {\n  _trezorProvider = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee13(options) {\n    var TrezorConnectLibrary, EthereumTx, ethUtil, _yield$import, createProvider, _yield$import2, generateAddresses, isValidPath, TrezorConnect, DEVICE_EVENT, DEVICE, TREZOR_DEFAULT_PATH, networkId, email, appUrl, rpcUrl, BigNumber, networkName, resetWalletState, dPath, addressToPath, enabled, customPath, account, provider, disconnect, setPath, _setPath, isCustomPath, enable, getAddress, _getAddress, addresses, setPrimaryAccount, getPublicKey, _getPublicKey, getPrimaryAddress, getMoreAccounts, _getMoreAccounts, _getAccounts, _getAccounts2, getBalances, getBalance, trezorSignTransaction, _signTransaction, _signTransaction2, _signMessage, _signMessage2;\n\n    return regeneratorRuntime.wrap(function _callee13$(_context13) {\n      while (1) {\n        switch (_context13.prev = _context13.next) {\n          case 0:\n            _signMessage2 = function _signMessage4() {\n              _signMessage2 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee12(message) {\n                var _, address, path;\n\n                return regeneratorRuntime.wrap(function _callee12$(_context12) {\n                  while (1) {\n                    switch (_context12.prev = _context12.next) {\n                      case 0:\n                        if (!(addressToPath.size === 0)) {\n                          _context12.next = 3;\n                          break;\n                        }\n\n                        _context12.next = 3;\n                        return enable();\n\n                      case 3:\n                        _ = _slicedToArray(_toConsumableArray(addressToPath.entries())[0], 2), address = _[0], path = _[1];\n                        return _context12.abrupt(\"return\", new Promise(function (resolve, reject) {\n                          TrezorConnect.ethereumSignMessage({\n                            path: path,\n                            message: ethUtil.stripHexPrefix(message.data),\n                            hex: true\n                          }).then(function (response) {\n                            if (response.success) {\n                              if (response.payload.address !== ethUtil.toChecksumAddress(address)) {\n                                reject(new Error('signature doesnt match the right address'));\n                              }\n\n                              var signature = \"0x\".concat(response.payload.signature);\n                              resolve(signature);\n                            } else {\n                              reject(new Error(response.payload && response.payload.error || 'There was an error signing a message'));\n                            }\n                          });\n                        }));\n\n                      case 5:\n                      case \"end\":\n                        return _context12.stop();\n                    }\n                  }\n                }, _callee12);\n              }));\n              return _signMessage2.apply(this, arguments);\n            };\n\n            _signMessage = function _signMessage3(_x9) {\n              return _signMessage2.apply(this, arguments);\n            };\n\n            _signTransaction2 = function _signTransaction4() {\n              _signTransaction2 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee11(transactionData) {\n                var path, transaction, trezorResult, signature;\n                return regeneratorRuntime.wrap(function _callee11$(_context11) {\n                  while (1) {\n                    switch (_context11.prev = _context11.next) {\n                      case 0:\n                        if (!(addressToPath.size === 0)) {\n                          _context11.next = 3;\n                          break;\n                        }\n\n                        _context11.next = 3;\n                        return enable();\n\n                      case 3:\n                        path = _toConsumableArray(addressToPath.values())[0];\n                        transaction = new EthereumTx.Transaction(transactionData, {\n                          chain: networkName(networkId)\n                        });\n                        _context11.next = 7;\n                        return trezorSignTransaction(path, transactionData);\n\n                      case 7:\n                        trezorResult = _context11.sent;\n\n                        if (trezorResult.success) {\n                          _context11.next = 10;\n                          break;\n                        }\n\n                        throw new Error(trezorResult.payload.error);\n\n                      case 10:\n                        signature = trezorResult.payload;\n                        transaction.v = signature.v;\n                        transaction.r = signature.r;\n                        transaction.s = signature.s;\n                        return _context11.abrupt(\"return\", \"0x\".concat(transaction.serialize().toString('hex')));\n\n                      case 15:\n                      case \"end\":\n                        return _context11.stop();\n                    }\n                  }\n                }, _callee11);\n              }));\n              return _signTransaction2.apply(this, arguments);\n            };\n\n            _signTransaction = function _signTransaction3(_x8) {\n              return _signTransaction2.apply(this, arguments);\n            };\n\n            trezorSignTransaction = function _trezorSignTransactio(path, transactionData) {\n              var nonce = transactionData.nonce,\n                  gasPrice = transactionData.gasPrice,\n                  gas = transactionData.gas,\n                  to = transactionData.to,\n                  value = transactionData.value,\n                  data = transactionData.data;\n              return TrezorConnect.ethereumSignTransaction({\n                path: path,\n                transaction: {\n                  nonce: nonce,\n                  gasPrice: gasPrice,\n                  gasLimit: gas,\n                  to: to,\n                  value: value || '',\n                  data: data || '',\n                  chainId: networkId\n                }\n              });\n            };\n\n            getBalance = function _getBalance(address) {\n              return new Promise(function (resolve, reject) {\n                provider.sendAsync({\n                  jsonrpc: '2.0',\n                  method: 'eth_getBalance',\n                  params: [address, 'latest'],\n                  id: 42\n                }, function (e, res) {\n                  e && reject(e);\n                  var result = res && res.result;\n\n                  if (result != null) {\n                    resolve(new BigNumber(result).toString(10));\n                  } else {\n                    resolve(null);\n                  }\n                });\n              });\n            };\n\n            getBalances = function _getBalances(addresses) {\n              return Promise.all(addresses.map(function (address) {\n                return new Promise( /*#__PURE__*/function () {\n                  var _ref3 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee5(resolve) {\n                    var balance;\n                    return regeneratorRuntime.wrap(function _callee5$(_context5) {\n                      while (1) {\n                        switch (_context5.prev = _context5.next) {\n                          case 0:\n                            _context5.next = 2;\n                            return getBalance(address);\n\n                          case 2:\n                            balance = _context5.sent;\n                            resolve({\n                              address: address,\n                              balance: balance\n                            });\n\n                          case 4:\n                          case \"end\":\n                            return _context5.stop();\n                        }\n                      }\n                    }, _callee5);\n                  }));\n\n                  return function (_x7) {\n                    return _ref3.apply(this, arguments);\n                  };\n                }());\n              }));\n            };\n\n            _getAccounts2 = function _getAccounts4() {\n              _getAccounts2 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee10(getMore) {\n                var addressInfo;\n                return regeneratorRuntime.wrap(function _callee10$(_context10) {\n                  while (1) {\n                    switch (_context10.prev = _context10.next) {\n                      case 0:\n                        if (enabled) {\n                          _context10.next = 2;\n                          break;\n                        }\n\n                        return _context10.abrupt(\"return\", [undefined]);\n\n                      case 2:\n                        if (!(addressToPath.size > 0 && !getMore)) {\n                          _context10.next = 4;\n                          break;\n                        }\n\n                        return _context10.abrupt(\"return\", addresses());\n\n                      case 4:\n                        if (dPath === '') {\n                          dPath = TREZOR_DEFAULT_PATH;\n                        }\n\n                        if (account) {\n                          _context10.next = 15;\n                          break;\n                        }\n\n                        _context10.prev = 6;\n                        _context10.next = 9;\n                        return getPublicKey();\n\n                      case 9:\n                        account = _context10.sent;\n                        _context10.next = 15;\n                        break;\n\n                      case 12:\n                        _context10.prev = 12;\n                        _context10.t0 = _context10[\"catch\"](6);\n                        throw _context10.t0;\n\n                      case 15:\n                        addressInfo = generateAddresses(account, addressToPath.size);\n                        addressInfo.forEach(function (_ref4) {\n                          var dPath = _ref4.dPath,\n                              address = _ref4.address;\n                          addressToPath.set(address, dPath);\n                        });\n                        return _context10.abrupt(\"return\", addresses());\n\n                      case 18:\n                      case \"end\":\n                        return _context10.stop();\n                    }\n                  }\n                }, _callee10, null, [[6, 12]]);\n              }));\n              return _getAccounts2.apply(this, arguments);\n            };\n\n            _getAccounts = function _getAccounts3(_x6) {\n              return _getAccounts2.apply(this, arguments);\n            };\n\n            _getMoreAccounts = function _getMoreAccounts3() {\n              _getMoreAccounts = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee9() {\n                var accounts;\n                return regeneratorRuntime.wrap(function _callee9$(_context9) {\n                  while (1) {\n                    switch (_context9.prev = _context9.next) {\n                      case 0:\n                        _context9.next = 2;\n                        return _getAccounts(true);\n\n                      case 2:\n                        accounts = _context9.sent;\n                        return _context9.abrupt(\"return\", getBalances(accounts));\n\n                      case 4:\n                      case \"end\":\n                        return _context9.stop();\n                    }\n                  }\n                }, _callee9);\n              }));\n              return _getMoreAccounts.apply(this, arguments);\n            };\n\n            getMoreAccounts = function _getMoreAccounts2() {\n              return _getMoreAccounts.apply(this, arguments);\n            };\n\n            getPrimaryAddress = function _getPrimaryAddress() {\n              return enabled ? addresses()[0] : undefined;\n            };\n\n            _getPublicKey = function _getPublicKey3() {\n              _getPublicKey = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee8() {\n                var result;\n                return regeneratorRuntime.wrap(function _callee8$(_context8) {\n                  while (1) {\n                    switch (_context8.prev = _context8.next) {\n                      case 0:\n                        if (dPath) {\n                          _context8.next = 2;\n                          break;\n                        }\n\n                        throw new Error('a derivation path is needed to get the public key');\n\n                      case 2:\n                        _context8.prev = 2;\n                        _context8.next = 5;\n                        return TrezorConnect.getPublicKey({\n                          path: dPath,\n                          coin: 'eth'\n                        });\n\n                      case 5:\n                        result = _context8.sent;\n\n                        if (result.success) {\n                          _context8.next = 8;\n                          break;\n                        }\n\n                        throw new Error(result.payload.error);\n\n                      case 8:\n                        account = {\n                          publicKey: result.payload.publicKey,\n                          chainCode: result.payload.chainCode,\n                          path: result.payload.serializedPath\n                        };\n                        return _context8.abrupt(\"return\", account);\n\n                      case 12:\n                        _context8.prev = 12;\n                        _context8.t0 = _context8[\"catch\"](2);\n                        throw new Error('There was an error accessing your Trezor accounts.');\n\n                      case 15:\n                      case \"end\":\n                        return _context8.stop();\n                    }\n                  }\n                }, _callee8, null, [[2, 12]]);\n              }));\n              return _getPublicKey.apply(this, arguments);\n            };\n\n            getPublicKey = function _getPublicKey2() {\n              return _getPublicKey.apply(this, arguments);\n            };\n\n            setPrimaryAccount = function _setPrimaryAccount(address) {\n              // make a copy and put in an array\n              var accounts = _toConsumableArray(addressToPath.entries());\n\n              var accountIndex = accounts.findIndex(function (_ref) {\n                var _ref2 = _slicedToArray(_ref, 1),\n                    accountAddress = _ref2[0];\n\n                return accountAddress === address;\n              }); // pull the item at the account index out of the array and place at the front\n\n              accounts.unshift(accounts.splice(accountIndex, 1)[0]); // reassign addressToPath to new ordered accounts\n\n              addressToPath = new Map(accounts);\n            };\n\n            addresses = function _addresses() {\n              return Array.from(addressToPath.keys());\n            };\n\n            _getAddress = function _getAddress3() {\n              _getAddress = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee7(path) {\n                var errorMsg, result;\n                return regeneratorRuntime.wrap(function _callee7$(_context7) {\n                  while (1) {\n                    switch (_context7.prev = _context7.next) {\n                      case 0:\n                        errorMsg = \"Unable to derive address from path \".concat(path);\n                        _context7.prev = 1;\n                        _context7.next = 4;\n                        return TrezorConnect.ethereumGetAddress({\n                          path: path,\n                          showOnTrezor: false\n                        });\n\n                      case 4:\n                        result = _context7.sent;\n\n                        if (result.success) {\n                          _context7.next = 7;\n                          break;\n                        }\n\n                        throw new Error(errorMsg);\n\n                      case 7:\n                        return _context7.abrupt(\"return\", result.payload.address);\n\n                      case 10:\n                        _context7.prev = 10;\n                        _context7.t0 = _context7[\"catch\"](1);\n                        throw new Error(errorMsg);\n\n                      case 13:\n                      case \"end\":\n                        return _context7.stop();\n                    }\n                  }\n                }, _callee7, null, [[1, 10]]);\n              }));\n              return _getAddress.apply(this, arguments);\n            };\n\n            getAddress = function _getAddress2(_x5) {\n              return _getAddress.apply(this, arguments);\n            };\n\n            enable = function _enable() {\n              enabled = true;\n              return _getAccounts();\n            };\n\n            isCustomPath = function _isCustomPath() {\n              return customPath;\n            };\n\n            _setPath = function _setPath3() {\n              _setPath = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee6(path, custom) {\n                var address;\n                return regeneratorRuntime.wrap(function _callee6$(_context6) {\n                  while (1) {\n                    switch (_context6.prev = _context6.next) {\n                      case 0:\n                        if (isValidPath(path)) {\n                          _context6.next = 2;\n                          break;\n                        }\n\n                        return _context6.abrupt(\"return\", false);\n\n                      case 2:\n                        if (path !== dPath) {\n                          // clear any exsting addresses if different path\n                          addressToPath = new Map();\n                        }\n\n                        if (!custom) {\n                          _context6.next = 17;\n                          break;\n                        }\n\n                        _context6.prev = 4;\n                        _context6.next = 7;\n                        return getAddress(path);\n\n                      case 7:\n                        address = _context6.sent;\n                        addressToPath.set(address, path);\n                        dPath = path;\n                        customPath = true;\n                        return _context6.abrupt(\"return\", true);\n\n                      case 14:\n                        _context6.prev = 14;\n                        _context6.t0 = _context6[\"catch\"](4);\n                        throw new Error(\"There was a problem deriving an address from path \".concat(path));\n\n                      case 17:\n                        customPath = false;\n                        dPath = path;\n                        return _context6.abrupt(\"return\", true);\n\n                      case 20:\n                      case \"end\":\n                        return _context6.stop();\n                    }\n                  }\n                }, _callee6, null, [[4, 14]]);\n              }));\n              return _setPath.apply(this, arguments);\n            };\n\n            setPath = function _setPath2(_x3, _x4) {\n              return _setPath.apply(this, arguments);\n            };\n\n            disconnect = function _disconnect() {\n              dPath = '';\n              addressToPath = new Map();\n              enabled = false;\n              provider.stop();\n            };\n\n            _context13.next = 25;\n            return import('trezor-connect');\n\n          case 25:\n            TrezorConnectLibrary = _context13.sent;\n            _context13.next = 28;\n            return import('ethereumjs-tx');\n\n          case 28:\n            EthereumTx = _context13.sent;\n            _context13.next = 31;\n            return import('ethereumjs-util');\n\n          case 31:\n            ethUtil = _context13.sent;\n            _context13.next = 34;\n            return import('./providerEngine-597c2212.js');\n\n          case 34:\n            _yield$import = _context13.sent;\n            createProvider = _yield$import[\"default\"];\n            _context13.next = 38;\n            return import('./hd-wallet-642b97e3.js');\n\n          case 38:\n            _yield$import2 = _context13.sent;\n            generateAddresses = _yield$import2.generateAddresses;\n            isValidPath = _yield$import2.isValidPath;\n            TrezorConnect = TrezorConnectLibrary[\"default\"], DEVICE_EVENT = TrezorConnectLibrary.DEVICE_EVENT, DEVICE = TrezorConnectLibrary.DEVICE;\n            TREZOR_DEFAULT_PATH = \"m/44'/60'/0'/0\";\n            networkId = options.networkId, email = options.email, appUrl = options.appUrl, rpcUrl = options.rpcUrl, BigNumber = options.BigNumber, networkName = options.networkName, resetWalletState = options.resetWalletState;\n            dPath = '';\n            addressToPath = new Map();\n            enabled = false;\n            customPath = false;\n            TrezorConnect.manifest({\n              email: email,\n              appUrl: appUrl\n            });\n            provider = createProvider({\n              getAccounts: function getAccounts(callback) {\n                _getAccounts().then(function (res) {\n                  return callback(null, res);\n                })[\"catch\"](function (err) {\n                  return callback(err, null);\n                });\n              },\n              signTransaction: function signTransaction(transactionData, callback) {\n                _signTransaction(transactionData).then(function (res) {\n                  return callback(null, res);\n                })[\"catch\"](function (err) {\n                  return callback(err, null);\n                });\n              },\n              processMessage: function processMessage(messageData, callback) {\n                _signMessage(messageData).then(function (res) {\n                  return callback(null, res);\n                })[\"catch\"](function (err) {\n                  return callback(err, null);\n                });\n              },\n              processPersonalMessage: function processPersonalMessage(messageData, callback) {\n                _signMessage(messageData).then(function (res) {\n                  return callback(null, res);\n                })[\"catch\"](function (err) {\n                  return callback(err, null);\n                });\n              },\n              signMessage: function signMessage(messageData, callback) {\n                _signMessage(messageData).then(function (res) {\n                  return callback(null, res);\n                })[\"catch\"](function (err) {\n                  return callback(err, null);\n                });\n              },\n              signPersonalMessage: function signPersonalMessage(messageData, callback) {\n                _signMessage(messageData).then(function (res) {\n                  return callback(null, res);\n                })[\"catch\"](function (err) {\n                  return callback(err, null);\n                });\n              },\n              rpcUrl: rpcUrl\n            });\n            TrezorConnect.on(DEVICE_EVENT, function (event) {\n              if (event.type === DEVICE.DISCONNECT) {\n                provider.stop();\n                resetWalletState({\n                  disconnected: true,\n                  walletName: 'Trezor'\n                });\n              }\n            });\n            provider.setPath = setPath;\n            provider.dPath = dPath;\n            provider.enable = enable;\n            provider.setPrimaryAccount = setPrimaryAccount;\n            provider.getPrimaryAddress = getPrimaryAddress;\n            provider.getAccounts = _getAccounts;\n            provider.getMoreAccounts = getMoreAccounts;\n            provider.getBalance = getBalance;\n            provider.getBalances = getBalances;\n            provider.send = provider.sendAsync;\n            provider.disconnect = disconnect;\n            provider.isCustomPath = isCustomPath;\n            return _context13.abrupt(\"return\", provider);\n\n          case 64:\n          case \"end\":\n            return _context13.stop();\n        }\n      }\n    }, _callee13);\n  }));\n  return _trezorProvider.apply(this, arguments);\n}\n\nexport default trezor;"],"sourceRoot":""}