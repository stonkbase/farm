{"version":3,"sources":["webpack:///./node_modules/u2f-api/lib/google-u2f-api.js","webpack:///./node_modules/u2f-api/lib/u2f-api.js","webpack:///./node_modules/@ledgerhq/errors/dist/index.js","webpack:///./node_modules/@ledgerhq/logs/lib-es/index.js","webpack:///./node_modules/@ledgerhq/hw-transport-u2f/lib-es/TransportU2F.js","webpack:///./node_modules/u2f-api/index.js","webpack:///./node_modules/@ledgerhq/hw-transport/lib-es/Transport.js","webpack:///./node_modules/events/events.js"],"names":["u2f","module","exports","EXTENSION_ID","MessageTypes","ErrorCodes","Request","Response","Error","SignRequest","SignResponse","RegisterRequest","RegisterResponse","disconnect","port_","getMessagePort","callback","chrome","runtime","msg","type","U2F_SIGN_REQUEST","signRequests","sendMessage","lastError","getIframePort_","getChromeRuntimePort_","port","connect","setTimeout","WrappedChromeRuntimePort_","this","prototype","postMessage","message","addEventListener","eventName","handler","name","toLowerCase","onMessage","addListener","console","error","iframeOrigin","iframe","document","createElement","src","setAttribute","body","appendChild","hasCalledBack","channel","MessageChannel","ready","data","port1","removeEventListener","start","contentWindow","port2","EXTENSION_TIMEOUT_SEC","waitingForPort_","reqCounter_","callbackMap_","getPortSingleton_","length","err","shift","push","responseHandler_","response","reqId","cb","isSupported","sign","opt_timeoutSeconds","req","timeoutSeconds","requestId","register","registerRequests","U2F_REGISTER_REQUEST","API","chromeApi","isBrowser","navigator","userAgent","isSafari","match","isEDGE","_backend","getBackend","Promise","resolve","reject","notSupported","native","hasNativeSupport","window","location","protocol","ok","bind","ensureSupport","ErrorNames","makeError","code","errorCode","metaData","deferPromise","promise","ret","then","cancel","backend","_ensureSupport","timeout","Array","isArray","cbNative","cbChrome","appId","challenge","makeDefault","func","global","args","slice","call","arguments","apply","CANCELLED","OK","OTHER_ERROR","BAD_REQUEST","CONFIGURATION_UNSUPPORTED","DEVICE_INELIGIBLE","TIMEOUT","errorClasses","deserializers","addCustomErrorDeserializer","deserializer","createCustomErrorClass","C","fields","Object","assign","stack","EthAppPleaseEnableContractData","TransportRaceCondition","TransportError","id","e","StatusCodes","PIN_REMAINING_ATTEMPTS","INCORRECT_LENGTH","MISSING_CRITICAL_PARAMETER","COMMAND_INCOMPATIBLE_FILE_STRUCTURE","SECURITY_STATUS_NOT_SATISFIED","CONDITIONS_OF_USE_NOT_SATISFIED","INCORRECT_DATA","NOT_ENOUGH_MEMORY_SPACE","REFERENCED_DATA_NOT_FOUND","FILE_ALREADY_EXISTS","INCORRECT_P1_P2","INS_NOT_SUPPORTED","CLA_NOT_SUPPORTED","TECHNICAL_PROBLEM","MEMORY_PROBLEM","NO_EF_SELECTED","INVALID_OFFSET","FILE_NOT_FOUND","INCONSISTENT_FILE","ALGORITHM_NOT_SUPPORTED","INVALID_KCV","CODE_NOT_INITIALIZED","ACCESS_CONDITION_NOT_FULFILLED","CONTRADICTION_SECRET_CODE_STATUS","CONTRADICTION_INVALIDATION","CODE_BLOCKED","MAX_VALUE_REACHED","GP_AUTH_FAILED","LICENSING","HALTED","getAltStatusMessage","TransportStatusError","statusCode","statusText","keys","find","k","smsg","statusCodeStr","toString","subscribers","log","obj","String","date","Date","dispatch","listen","i","indexOf","pop","__ledgerLogsListen","wrapU2FTransportError","originalError","wrapApdu","apdu","key","result","Buffer","alloc","webSafe64","base64","replace","normal64","substring","attemptExchange","timeoutMillis","scrambleKey","unwrap","keyHandle","from","signRequest","version","origin","signatureData","transportInstances","emitDisconnect","forEach","t","emit","isTimeoutU2FError","u2fError","TransportU2F","_","_openTimeout","super","exchangeTimeout","isU2FError","list","supported","observer","unsubscribed","next","descriptor","complete","unsubscribe","Transport","unresponsiveTimeout","deviceModel","_events","send","async","cla","ins","p1","p2","statusList","exchange","concat","sw","readUInt16BE","some","s","exchangeBusyPromise","exchangeAtomicImpl","resolveBusy","busyPromise","r","unresponsiveReached","res","f","clearTimeout","_appAPIlock","_apdu","_key","on","removeListener","event","warn","openTimeout","listenTimeout","found","sub","listenTimeoutId","open","ErrorMessage_NoDeviceFound","ErrorMessage_ListenTimeout","self","methods","methodName","decorateAppAPIMethod","ctx","setScrambleKey","ReflectOwnKeys","R","Reflect","ReflectApply","target","receiver","Function","ProcessEmitWarning","warning","ownKeys","getOwnPropertySymbols","getOwnPropertyNames","NumberIsNaN","Number","isNaN","value","EventEmitter","init","once","undefined","_eventsCount","_maxListeners","defaultMaxListeners","checkListener","listener","TypeError","_getMaxListeners","that","_addListener","prepend","m","events","existing","create","newListener","unshift","warned","w","emitter","count","onceWrapper","fired","wrapFn","_onceWrap","state","wrapped","_listeners","evlistener","unwrapListeners","arrayClone","listenerCount","arr","n","copy","spliceOne","index","eventListener","errorListener","defineProperty","enumerable","get","set","arg","RangeError","getPrototypeOf","setMaxListeners","getMaxListeners","doError","er","context","len","listeners","prependListener","prependOnceListener","position","originalListener","off","removeAllListeners","rawListeners","eventNames"],"mappings":"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","file":"js/chunk-74d87d9c.7747bff2.js","sourcesContent":["// Copyright 2014 Google Inc. All rights reserved\n//\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file or at\n// https://developers.google.com/open-source/licenses/bsd\n\n/**\n * @fileoverview The U2F api.\n */\n\n'use strict';\n\n/** Namespace for the U2F api.\n * @type {Object}\n */\nvar u2f = u2f || {};\n\nmodule.exports = u2f; // Adaptation for u2f-api package\n\n/**\n * The U2F extension id\n * @type {string}\n * @const\n */\nu2f.EXTENSION_ID = 'kmendfapggjehodndflmmgagdbamhnfd';\n\n/**\n * Message types for messsages to/from the extension\n * @const\n * @enum {string}\n */\nu2f.MessageTypes = {\n  'U2F_REGISTER_REQUEST': 'u2f_register_request',\n  'U2F_SIGN_REQUEST': 'u2f_sign_request',\n  'U2F_REGISTER_RESPONSE': 'u2f_register_response',\n  'U2F_SIGN_RESPONSE': 'u2f_sign_response'\n};\n\n/**\n * Response status codes\n * @const\n * @enum {number}\n */\nu2f.ErrorCodes = {\n  'OK': 0,\n  'OTHER_ERROR': 1,\n  'BAD_REQUEST': 2,\n  'CONFIGURATION_UNSUPPORTED': 3,\n  'DEVICE_INELIGIBLE': 4,\n  'TIMEOUT': 5\n};\n\n/**\n * A message type for registration requests\n * @typedef {{\n *   type: u2f.MessageTypes,\n *   signRequests: Array.<u2f.SignRequest>,\n *   registerRequests: ?Array.<u2f.RegisterRequest>,\n *   timeoutSeconds: ?number,\n *   requestId: ?number\n * }}\n */\nu2f.Request;\n\n/**\n * A message for registration responses\n * @typedef {{\n *   type: u2f.MessageTypes,\n *   responseData: (u2f.Error | u2f.RegisterResponse | u2f.SignResponse),\n *   requestId: ?number\n * }}\n */\nu2f.Response;\n\n/**\n * An error object for responses\n * @typedef {{\n *   errorCode: u2f.ErrorCodes,\n *   errorMessage: ?string\n * }}\n */\nu2f.Error;\n\n/**\n * Data object for a single sign request.\n * @typedef {{\n *   version: string,\n *   challenge: string,\n *   keyHandle: string,\n *   appId: string\n * }}\n */\nu2f.SignRequest;\n\n/**\n * Data object for a sign response.\n * @typedef {{\n *   keyHandle: string,\n *   signatureData: string,\n *   clientData: string\n * }}\n */\nu2f.SignResponse;\n\n/**\n * Data object for a registration request.\n * @typedef {{\n *   version: string,\n *   challenge: string,\n *   appId: string\n * }}\n */\nu2f.RegisterRequest;\n\n/**\n * Data object for a registration response.\n * @typedef {{\n *   registrationData: string,\n *   clientData: string\n * }}\n */\nu2f.RegisterResponse;\n\n\n// Low level MessagePort API support\n\n/**\n * Call MessagePort disconnect\n */\nu2f.disconnect = function() {\n  if (u2f.port_ && u2f.port_.port_) {\n    u2f.port_.port_.disconnect();\n    u2f.port_ = null;\n  }\n};\n\n/**\n * Sets up a MessagePort to the U2F extension using the\n * available mechanisms.\n * @param {function((MessagePort|u2f.WrappedChromeRuntimePort_))} callback\n */\nu2f.getMessagePort = function(callback) {\n  if (typeof chrome != 'undefined' && chrome.runtime) {\n    // The actual message here does not matter, but we need to get a reply\n    // for the callback to run. Thus, send an empty signature request\n    // in order to get a failure response.\n    var msg = {\n      type: u2f.MessageTypes.U2F_SIGN_REQUEST,\n      signRequests: []\n    };\n    chrome.runtime.sendMessage(u2f.EXTENSION_ID, msg, function() {\n      if (!chrome.runtime.lastError) {\n        // We are on a whitelisted origin and can talk directly\n        // with the extension.\n        u2f.getChromeRuntimePort_(callback);\n      } else {\n        // chrome.runtime was available, but we couldn't message\n        // the extension directly, use iframe\n        u2f.getIframePort_(callback);\n      }\n    });\n  } else {\n    // chrome.runtime was not available at all, which is normal\n    // when this origin doesn't have access to any extensions.\n    u2f.getIframePort_(callback);\n  }\n};\n\n/**\n * Connects directly to the extension via chrome.runtime.connect\n * @param {function(u2f.WrappedChromeRuntimePort_)} callback\n * @private\n */\nu2f.getChromeRuntimePort_ = function(callback) {\n  var port = chrome.runtime.connect(u2f.EXTENSION_ID,\n    {'includeTlsChannelId': true});\n  setTimeout(function() {\n    callback(null, new u2f.WrappedChromeRuntimePort_(port));\n  }, 0);\n};\n\n/**\n * A wrapper for chrome.runtime.Port that is compatible with MessagePort.\n * @param {Port} port\n * @constructor\n * @private\n */\nu2f.WrappedChromeRuntimePort_ = function(port) {\n  this.port_ = port;\n};\n\n/**\n * Posts a message on the underlying channel.\n * @param {Object} message\n */\nu2f.WrappedChromeRuntimePort_.prototype.postMessage = function(message) {\n  this.port_.postMessage(message);\n};\n\n/**\n * Emulates the HTML 5 addEventListener interface. Works only for the\n * onmessage event, which is hooked up to the chrome.runtime.Port.onMessage.\n * @param {string} eventName\n * @param {function({data: Object})} handler\n */\nu2f.WrappedChromeRuntimePort_.prototype.addEventListener =\n    function(eventName, handler) {\n  var name = eventName.toLowerCase();\n  if (name == 'message' || name == 'onmessage') {\n    this.port_.onMessage.addListener(function(message) {\n      // Emulate a minimal MessageEvent object\n      handler({'data': message});\n    });\n  } else {\n    console.error('WrappedChromeRuntimePort only supports onMessage');\n  }\n};\n\n/**\n * Sets up an embedded trampoline iframe, sourced from the extension.\n * @param {function(MessagePort)} callback\n * @private\n */\nu2f.getIframePort_ = function(callback) {\n  // Create the iframe\n  var iframeOrigin = 'chrome-extension://' + u2f.EXTENSION_ID;\n  var iframe = document.createElement('iframe');\n  iframe.src = iframeOrigin + '/u2f-comms.html';\n  iframe.setAttribute('style', 'display:none');\n  document.body.appendChild(iframe);\n\n  var hasCalledBack = false;\n\n  var channel = new MessageChannel();\n  var ready = function(message) {\n    if (message.data == 'ready') {\n      channel.port1.removeEventListener('message', ready);\n      if (!hasCalledBack)\n      {\n        hasCalledBack = true;\n        callback(null, channel.port1);\n      }\n    } else {\n      console.error('First event on iframe port was not \"ready\"');\n    }\n  };\n  channel.port1.addEventListener('message', ready);\n  channel.port1.start();\n\n  iframe.addEventListener('load', function() {\n    // Deliver the port to the iframe and initialize\n    iframe.contentWindow.postMessage('init', iframeOrigin, [channel.port2]);\n  });\n\n  // Give this 200ms to initialize, after that, we treat this method as failed\n  setTimeout(function() {\n    if (!hasCalledBack)\n    {\n      hasCalledBack = true;\n      callback(new Error(\"IFrame extension not supported\"));\n    }\n  }, 200);\n};\n\n\n// High-level JS API\n\n/**\n * Default extension response timeout in seconds.\n * @const\n */\nu2f.EXTENSION_TIMEOUT_SEC = 30;\n\n/**\n * A singleton instance for a MessagePort to the extension.\n * @type {MessagePort|u2f.WrappedChromeRuntimePort_}\n * @private\n */\nu2f.port_ = null;\n\n/**\n * Callbacks waiting for a port\n * @type {Array.<function((MessagePort|u2f.WrappedChromeRuntimePort_))>}\n * @private\n */\nu2f.waitingForPort_ = [];\n\n/**\n * A counter for requestIds.\n * @type {number}\n * @private\n */\nu2f.reqCounter_ = 0;\n\n/**\n * A map from requestIds to client callbacks\n * @type {Object.<number,(function((u2f.Error|u2f.RegisterResponse))\n *                       |function((u2f.Error|u2f.SignResponse)))>}\n * @private\n */\nu2f.callbackMap_ = {};\n\n/**\n * Creates or retrieves the MessagePort singleton to use.\n * @param {function((MessagePort|u2f.WrappedChromeRuntimePort_))} callback\n * @private\n */\nu2f.getPortSingleton_ = function(callback) {\n  if (u2f.port_) {\n    callback(null, u2f.port_);\n  } else {\n    if (u2f.waitingForPort_.length == 0) {\n      u2f.getMessagePort(function(err, port) {\n        if (!err) {\n          u2f.port_ = port;\n          u2f.port_.addEventListener('message',\n            /** @type {function(Event)} */ (u2f.responseHandler_));\n        }\n\n        // Careful, here be async callbacks. Maybe.\n        while (u2f.waitingForPort_.length)\n          u2f.waitingForPort_.shift()(err, port);\n      });\n    }\n    u2f.waitingForPort_.push(callback);\n  }\n};\n\n/**\n * Handles response messages from the extension.\n * @param {MessageEvent.<u2f.Response>} message\n * @private\n */\nu2f.responseHandler_ = function(message) {\n  var response = message.data;\n  var reqId = response['requestId'];\n  if (!reqId || !u2f.callbackMap_[reqId]) {\n    console.error('Unknown or missing requestId in response.');\n    return;\n  }\n  var cb = u2f.callbackMap_[reqId];\n  delete u2f.callbackMap_[reqId];\n  cb(null, response['responseData']);\n};\n\n/**\n * Calls the callback with true or false as first and only argument\n * @param {Function} callback\n */\nu2f.isSupported = function(callback) {\n  u2f.getPortSingleton_(function(err, port) {\n    callback(!err);\n  });\n}\n\n/**\n * Dispatches an array of sign requests to available U2F tokens.\n * @param {Array.<u2f.SignRequest>} signRequests\n * @param {function((u2f.Error|u2f.SignResponse))} callback\n * @param {number=} opt_timeoutSeconds\n */\nu2f.sign = function(signRequests, callback, opt_timeoutSeconds) {\n  u2f.getPortSingleton_(function(err, port) {\n    if (err)\n      return callback(err);\n\n    var reqId = ++u2f.reqCounter_;\n    u2f.callbackMap_[reqId] = callback;\n    var req = {\n      type: u2f.MessageTypes.U2F_SIGN_REQUEST,\n      signRequests: signRequests,\n      timeoutSeconds: (typeof opt_timeoutSeconds !== 'undefined' ?\n        opt_timeoutSeconds : u2f.EXTENSION_TIMEOUT_SEC),\n      requestId: reqId\n    };\n    port.postMessage(req);\n  });\n};\n\n/**\n * Dispatches register requests to available U2F tokens. An array of sign\n * requests identifies already registered tokens.\n * @param {Array.<u2f.RegisterRequest>} registerRequests\n * @param {Array.<u2f.SignRequest>} signRequests\n * @param {function((u2f.Error|u2f.RegisterResponse))} callback\n * @param {number=} opt_timeoutSeconds\n */\nu2f.register = function(registerRequests, signRequests,\n    callback, opt_timeoutSeconds) {\n  u2f.getPortSingleton_(function(err, port) {\n    if (err)\n      return callback(err);\n\n    var reqId = ++u2f.reqCounter_;\n    u2f.callbackMap_[reqId] = callback;\n    var req = {\n      type: u2f.MessageTypes.U2F_REGISTER_REQUEST,\n      signRequests: signRequests,\n      registerRequests: registerRequests,\n      timeoutSeconds: (typeof opt_timeoutSeconds !== 'undefined' ?\n        opt_timeoutSeconds : u2f.EXTENSION_TIMEOUT_SEC),\n      requestId: reqId\n    };\n    port.postMessage(req);\n  });\n};\n","'use strict';\n\nmodule.exports = API;\n\nvar chromeApi = require( './google-u2f-api' );\n\n// Feature detection (yes really)\nvar isBrowser = ( typeof navigator !== 'undefined' ) && !!navigator.userAgent;\nvar isSafari = isBrowser && navigator.userAgent.match( /Safari\\// )\n\t&& !navigator.userAgent.match( /Chrome\\// );\nvar isEDGE = isBrowser && navigator.userAgent.match( /Edge\\/1[2345]/ );\n\nvar _backend = null;\nfunction getBackend( Promise )\n{\n\tif ( !_backend )\n\t\t_backend = new Promise( function( resolve, reject )\n\t\t{\n\t\t\tfunction notSupported( )\n\t\t\t{\n\t\t\t\t// Note; {native: true} means *not* using Google's hack\n\t\t\t\tresolve( { u2f: null, native: true } );\n\t\t\t}\n\n\t\t\tif ( !isBrowser )\n\t\t\t\treturn notSupported( );\n\n\t\t\tif ( isSafari )\n\t\t\t\t// Safari doesn't support U2F, and the Safari-FIDO-U2F\n\t\t\t\t// extension lacks full support (Multi-facet apps), so we\n\t\t\t\t// block it until proper support.\n\t\t\t\treturn notSupported( );\n\n\t\t\tvar hasNativeSupport =\n\t\t\t\t( typeof window.u2f !== 'undefined' ) &&\n\t\t\t\t( typeof window.u2f.sign === 'function' );\n\n\t\t\tif ( hasNativeSupport )\n\t\t\t\tresolve( { u2f: window.u2f, native: true } );\n\n\t\t\tif ( isEDGE )\n\t\t\t\t// We don't want to check for Google's extension hack on EDGE\n\t\t\t\t// as it'll cause trouble (popups, etc)\n\t\t\t\treturn notSupported( );\n\n\t\t\tif ( location.protocol === 'http:' )\n\t\t\t\t// U2F isn't supported over http, only https\n\t\t\t\treturn notSupported( );\n\n\t\t\tif ( typeof MessageChannel === 'undefined' )\n\t\t\t\t// Unsupported browser, the chrome hack would throw\n\t\t\t\treturn notSupported( );\n\n\t\t\t// Test for google extension support\n\t\t\tchromeApi.isSupported( function( ok )\n\t\t\t{\n\t\t\t\tif ( ok )\n\t\t\t\t\tresolve( { u2f: chromeApi, native: false } );\n\t\t\t\telse\n\t\t\t\t\tnotSupported( );\n\t\t\t} );\n\t\t} );\n\n\treturn _backend;\n}\n\nfunction API( Promise )\n{\n\treturn {\n\t\tisSupported   : isSupported.bind( Promise ),\n\t\tensureSupport : ensureSupport.bind( Promise ),\n\t\tregister      : register.bind( Promise ),\n\t\tsign          : sign.bind( Promise ),\n\t\tErrorCodes    : API.ErrorCodes,\n\t\tErrorNames    : API.ErrorNames\n\t};\n}\n\nAPI.ErrorCodes = {\n\tCANCELLED: -1,\n\tOK: 0,\n\tOTHER_ERROR: 1,\n\tBAD_REQUEST: 2,\n\tCONFIGURATION_UNSUPPORTED: 3,\n\tDEVICE_INELIGIBLE: 4,\n\tTIMEOUT: 5\n};\nAPI.ErrorNames = {\n\t\"-1\": \"CANCELLED\",\n\t\"0\": \"OK\",\n\t\"1\": \"OTHER_ERROR\",\n\t\"2\": \"BAD_REQUEST\",\n\t\"3\": \"CONFIGURATION_UNSUPPORTED\",\n\t\"4\": \"DEVICE_INELIGIBLE\",\n\t\"5\": \"TIMEOUT\"\n};\n\nfunction makeError( msg, err )\n{\n\tvar code = err != null ? err.errorCode : 1; // Default to OTHER_ERROR\n\tvar type = API.ErrorNames[ '' + code ];\n\tvar error = new Error( msg );\n\terror.metaData = {\n\t\ttype: type,\n\t\tcode: code\n\t}\n\treturn error;\n}\n\nfunction deferPromise( Promise, promise )\n{\n\tvar ret = { };\n\tret.promise = new Promise( function( resolve, reject ) {\n\t\tret.resolve = resolve;\n\t\tret.reject = reject;\n\t\tpromise.then( resolve, reject );\n\t} );\n\t/**\n\t * Reject request promise and disconnect port if 'disconnect' flag is true\n\t * @param {string} msg\n\t * @param {boolean} disconnect\n\t */\n\tret.promise.cancel = function( msg, disconnect )\n\t{\n\t\tgetBackend( Promise )\n\t\t.then( function( backend )\n\t\t{\n\t\t\tif ( disconnect && !backend.native )\n\t\t\t\tbackend.u2f.disconnect( );\n\n\t\t\tret.reject( makeError( msg, { errorCode: -1 } ) );\n\t\t} );\n\t};\n\treturn ret;\n}\n\nfunction defer( Promise, fun )\n{\n\treturn deferPromise( Promise, new Promise( function( resolve, reject )\n\t{\n\t\ttry\n\t\t{\n\t\t\tfun && fun( resolve, reject );\n\t\t}\n\t\tcatch ( err )\n\t\t{\n\t\t\treject( err );\n\t\t}\n\t} ) );\n}\n\nfunction isSupported( )\n{\n\tvar Promise = this;\n\n\treturn getBackend( Promise )\n\t.then( function( backend )\n\t{\n\t\treturn !!backend.u2f;\n\t} );\n}\n\nfunction _ensureSupport( backend )\n{\n\tif ( !backend.u2f )\n\t{\n\t\tif ( location.protocol === 'http:' )\n\t\t\tthrow new Error( \"U2F isn't supported over http, only https\" );\n\t\tthrow new Error( \"U2F not supported\" );\n\t}\n}\n\nfunction ensureSupport( )\n{\n\tvar Promise = this;\n\n\treturn getBackend( Promise )\n\t.then( _ensureSupport );\n}\n\nfunction register( registerRequests, signRequests /* = null */, timeout )\n{\n\tvar Promise = this;\n\n\tif ( !Array.isArray( registerRequests ) )\n\t\tregisterRequests = [ registerRequests ];\n\n\tif ( typeof signRequests === 'number' && typeof timeout === 'undefined' )\n\t{\n\t\ttimeout = signRequests;\n\t\tsignRequests = null;\n\t}\n\n\tif ( !signRequests )\n\t\tsignRequests = [ ];\n\n\treturn deferPromise( Promise, getBackend( Promise )\n\t.then( function( backend )\n\t{\n\t\t_ensureSupport( backend );\n\n\t\tvar native = backend.native;\n\t\tvar u2f = backend.u2f;\n\n\t\treturn new Promise( function( resolve, reject )\n\t\t{\n\t\t\tfunction cbNative( response )\n\t\t\t{\n\t\t\t\tif ( response.errorCode )\n\t\t\t\t\treject( makeError( \"Registration failed\", response ) );\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tdelete response.errorCode;\n\t\t\t\t\tresolve( response );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfunction cbChrome( err, response )\n\t\t\t{\n\t\t\t\tif ( err )\n\t\t\t\t\treject( err );\n\t\t\t\telse if ( response.errorCode )\n\t\t\t\t\treject( makeError( \"Registration failed\", response ) );\n\t\t\t\telse\n\t\t\t\t\tresolve( response );\n\t\t\t}\n\n\t\t\tif ( native )\n\t\t\t{\n\t\t\t\tvar appId = registerRequests[ 0 ].appId;\n\n\t\t\t\tu2f.register(\n\t\t\t\t\tappId, registerRequests, signRequests, cbNative, timeout );\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tu2f.register(\n\t\t\t\t\tregisterRequests, signRequests, cbChrome, timeout );\n\t\t\t}\n\t\t} );\n\t} ) ).promise;\n}\n\nfunction sign( signRequests, timeout )\n{\n\tvar Promise = this;\n\n\tif ( !Array.isArray( signRequests ) )\n\t\tsignRequests = [ signRequests ];\n\n\treturn deferPromise( Promise, getBackend( Promise )\n\t.then( function( backend )\n\t{\n\t\t_ensureSupport( backend );\n\n\t\tvar native = backend.native;\n\t\tvar u2f = backend.u2f;\n\n\t\treturn new Promise( function( resolve, reject )\n\t\t{\n\t\t\tfunction cbNative( response )\n\t\t\t{\n\t\t\t\tif ( response.errorCode )\n\t\t\t\t\treject( makeError( \"Sign failed\", response ) );\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tdelete response.errorCode;\n\t\t\t\t\tresolve( response );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfunction cbChrome( err, response )\n\t\t\t{\n\t\t\t\tif ( err )\n\t\t\t\t\treject( err );\n\t\t\t\telse if ( response.errorCode )\n\t\t\t\t\treject( makeError( \"Sign failed\", response ) );\n\t\t\t\telse\n\t\t\t\t\tresolve( response );\n\t\t\t}\n\n\t\t\tif ( native )\n\t\t\t{\n\t\t\t\tvar appId = signRequests[ 0 ].appId;\n\t\t\t\tvar challenge = signRequests[ 0 ].challenge;\n\n\t\t\t\tu2f.sign( appId, challenge, signRequests, cbNative, timeout );\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tu2f.sign( signRequests, cbChrome, timeout );\n\t\t\t}\n\t\t} );\n\t} ) ).promise;\n}\n\nfunction makeDefault( func )\n{\n\tAPI[ func ] = function( )\n\t{\n\t\tif ( !global.Promise )\n\t\t\t// This is very unlikely to ever happen, since browsers\n\t\t\t// supporting U2F will most likely support Promises.\n\t\t\tthrow new Error( \"The platform doesn't natively support promises\" );\n\n\t\tvar args = [ ].slice.call( arguments );\n\t\treturn API( global.Promise )[ func ].apply( null, args );\n\t};\n}\n\n// Provide default functions using the built-in Promise if available.\nmakeDefault( 'isSupported' );\nmakeDefault( 'ensureSupport' );\nmakeDefault( 'register' );\nmakeDefault( 'sign' );\n","/* eslint-disable no-continue */\r\n/* eslint-disable no-param-reassign */\r\n/* eslint-disable no-prototype-builtins */\r\nvar errorClasses = {};\r\nvar deserializers = {};\r\nvar addCustomErrorDeserializer = function (name, deserializer) {\r\n    deserializers[name] = deserializer;\r\n};\r\nvar createCustomErrorClass = function (name) {\r\n    var C = function CustomError(message, fields) {\r\n        Object.assign(this, fields);\r\n        this.name = name;\r\n        this.message = message || name;\r\n        this.stack = new Error().stack;\r\n    };\r\n    C.prototype = new Error();\r\n    errorClasses[name] = C;\r\n    return C;\r\n};\r\n// inspired from https://github.com/programble/errio/blob/master/index.js\r\nvar deserializeError = function (object) {\r\n    if (typeof object === \"object\" && object) {\r\n        try {\r\n            // $FlowFixMe FIXME HACK\r\n            var msg = JSON.parse(object.message);\r\n            if (msg.message && msg.name) {\r\n                object = msg;\r\n            }\r\n        }\r\n        catch (e) {\r\n            // nothing\r\n        }\r\n        var error = void 0;\r\n        if (typeof object.name === \"string\") {\r\n            var name_1 = object.name;\r\n            var des = deserializers[name_1];\r\n            if (des) {\r\n                error = des(object);\r\n            }\r\n            else {\r\n                var constructor = name_1 === \"Error\" ? Error : errorClasses[name_1];\r\n                if (!constructor) {\r\n                    console.warn(\"deserializing an unknown class '\" + name_1 + \"'\");\r\n                    constructor = createCustomErrorClass(name_1);\r\n                }\r\n                error = Object.create(constructor.prototype);\r\n                try {\r\n                    for (var prop in object) {\r\n                        if (object.hasOwnProperty(prop)) {\r\n                            error[prop] = object[prop];\r\n                        }\r\n                    }\r\n                }\r\n                catch (e) {\r\n                    // sometimes setting a property can fail (e.g. .name)\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            error = new Error(object.message);\r\n        }\r\n        if (!error.stack && Error.captureStackTrace) {\r\n            Error.captureStackTrace(error, deserializeError);\r\n        }\r\n        return error;\r\n    }\r\n    return new Error(String(object));\r\n};\r\n// inspired from https://github.com/sindresorhus/serialize-error/blob/master/index.js\r\nvar serializeError = function (value) {\r\n    if (!value)\r\n        return value;\r\n    if (typeof value === \"object\") {\r\n        return destroyCircular(value, []);\r\n    }\r\n    if (typeof value === \"function\") {\r\n        return \"[Function: \" + (value.name || \"anonymous\") + \"]\";\r\n    }\r\n    return value;\r\n};\r\n// https://www.npmjs.com/package/destroy-circular\r\nfunction destroyCircular(from, seen) {\r\n    var to = {};\r\n    seen.push(from);\r\n    for (var _i = 0, _a = Object.keys(from); _i < _a.length; _i++) {\r\n        var key = _a[_i];\r\n        var value = from[key];\r\n        if (typeof value === \"function\") {\r\n            continue;\r\n        }\r\n        if (!value || typeof value !== \"object\") {\r\n            to[key] = value;\r\n            continue;\r\n        }\r\n        if (seen.indexOf(from[key]) === -1) {\r\n            to[key] = destroyCircular(from[key], seen.slice(0));\r\n            continue;\r\n        }\r\n        to[key] = \"[Circular]\";\r\n    }\r\n    if (typeof from.name === \"string\") {\r\n        to.name = from.name;\r\n    }\r\n    if (typeof from.message === \"string\") {\r\n        to.message = from.message;\r\n    }\r\n    if (typeof from.stack === \"string\") {\r\n        to.stack = from.stack;\r\n    }\r\n    return to;\r\n}\n\nvar AccountNameRequiredError = createCustomErrorClass(\"AccountNameRequired\");\r\nvar AccountNotSupported = createCustomErrorClass(\"AccountNotSupported\");\r\nvar AmountRequired = createCustomErrorClass(\"AmountRequired\");\r\nvar BluetoothRequired = createCustomErrorClass(\"BluetoothRequired\");\r\nvar BtcUnmatchedApp = createCustomErrorClass(\"BtcUnmatchedApp\");\r\nvar CantOpenDevice = createCustomErrorClass(\"CantOpenDevice\");\r\nvar CashAddrNotSupported = createCustomErrorClass(\"CashAddrNotSupported\");\r\nvar CurrencyNotSupported = createCustomErrorClass(\"CurrencyNotSupported\");\r\nvar DeviceAppVerifyNotSupported = createCustomErrorClass(\"DeviceAppVerifyNotSupported\");\r\nvar DeviceGenuineSocketEarlyClose = createCustomErrorClass(\"DeviceGenuineSocketEarlyClose\");\r\nvar DeviceNotGenuineError = createCustomErrorClass(\"DeviceNotGenuine\");\r\nvar DeviceOnDashboardExpected = createCustomErrorClass(\"DeviceOnDashboardExpected\");\r\nvar DeviceOnDashboardUnexpected = createCustomErrorClass(\"DeviceOnDashboardUnexpected\");\r\nvar DeviceInOSUExpected = createCustomErrorClass(\"DeviceInOSUExpected\");\r\nvar DeviceHalted = createCustomErrorClass(\"DeviceHalted\");\r\nvar DeviceNameInvalid = createCustomErrorClass(\"DeviceNameInvalid\");\r\nvar DeviceSocketFail = createCustomErrorClass(\"DeviceSocketFail\");\r\nvar DeviceSocketNoBulkStatus = createCustomErrorClass(\"DeviceSocketNoBulkStatus\");\r\nvar DisconnectedDevice = createCustomErrorClass(\"DisconnectedDevice\");\r\nvar DisconnectedDeviceDuringOperation = createCustomErrorClass(\"DisconnectedDeviceDuringOperation\");\r\nvar EnpointConfigError = createCustomErrorClass(\"EnpointConfig\");\r\nvar EthAppPleaseEnableContractData = createCustomErrorClass(\"EthAppPleaseEnableContractData\");\r\nvar FeeEstimationFailed = createCustomErrorClass(\"FeeEstimationFailed\");\r\nvar FirmwareNotRecognized = createCustomErrorClass(\"FirmwareNotRecognized\");\r\nvar HardResetFail = createCustomErrorClass(\"HardResetFail\");\r\nvar InvalidXRPTag = createCustomErrorClass(\"InvalidXRPTag\");\r\nvar InvalidAddress = createCustomErrorClass(\"InvalidAddress\");\r\nvar InvalidAddressBecauseDestinationIsAlsoSource = createCustomErrorClass(\"InvalidAddressBecauseDestinationIsAlsoSource\");\r\nvar LatestMCUInstalledError = createCustomErrorClass(\"LatestMCUInstalledError\");\r\nvar UnknownMCU = createCustomErrorClass(\"UnknownMCU\");\r\nvar LedgerAPIError = createCustomErrorClass(\"LedgerAPIError\");\r\nvar LedgerAPIErrorWithMessage = createCustomErrorClass(\"LedgerAPIErrorWithMessage\");\r\nvar LedgerAPINotAvailable = createCustomErrorClass(\"LedgerAPINotAvailable\");\r\nvar ManagerAppAlreadyInstalledError = createCustomErrorClass(\"ManagerAppAlreadyInstalled\");\r\nvar ManagerAppRelyOnBTCError = createCustomErrorClass(\"ManagerAppRelyOnBTC\");\r\nvar ManagerAppDepInstallRequired = createCustomErrorClass(\"ManagerAppDepInstallRequired\");\r\nvar ManagerAppDepUninstallRequired = createCustomErrorClass(\"ManagerAppDepUninstallRequired\");\r\nvar ManagerDeviceLockedError = createCustomErrorClass(\"ManagerDeviceLocked\");\r\nvar ManagerFirmwareNotEnoughSpaceError = createCustomErrorClass(\"ManagerFirmwareNotEnoughSpace\");\r\nvar ManagerNotEnoughSpaceError = createCustomErrorClass(\"ManagerNotEnoughSpace\");\r\nvar ManagerUninstallBTCDep = createCustomErrorClass(\"ManagerUninstallBTCDep\");\r\nvar NetworkDown = createCustomErrorClass(\"NetworkDown\");\r\nvar NoAddressesFound = createCustomErrorClass(\"NoAddressesFound\");\r\nvar NotEnoughBalance = createCustomErrorClass(\"NotEnoughBalance\");\r\nvar NotEnoughBalanceToDelegate = createCustomErrorClass(\"NotEnoughBalanceToDelegate\");\r\nvar NotEnoughBalanceInParentAccount = createCustomErrorClass(\"NotEnoughBalanceInParentAccount\");\r\nvar NotEnoughSpendableBalance = createCustomErrorClass(\"NotEnoughSpendableBalance\");\r\nvar NotEnoughBalanceBecauseDestinationNotCreated = createCustomErrorClass(\"NotEnoughBalanceBecauseDestinationNotCreated\");\r\nvar NoAccessToCamera = createCustomErrorClass(\"NoAccessToCamera\");\r\nvar NotEnoughGas = createCustomErrorClass(\"NotEnoughGas\");\r\nvar NotSupportedLegacyAddress = createCustomErrorClass(\"NotSupportedLegacyAddress\");\r\nvar GasLessThanEstimate = createCustomErrorClass(\"GasLessThanEstimate\");\r\nvar PasswordsDontMatchError = createCustomErrorClass(\"PasswordsDontMatch\");\r\nvar PasswordIncorrectError = createCustomErrorClass(\"PasswordIncorrect\");\r\nvar RecommendSubAccountsToEmpty = createCustomErrorClass(\"RecommendSubAccountsToEmpty\");\r\nvar RecommendUndelegation = createCustomErrorClass(\"RecommendUndelegation\");\r\nvar TimeoutTagged = createCustomErrorClass(\"TimeoutTagged\");\r\nvar UnexpectedBootloader = createCustomErrorClass(\"UnexpectedBootloader\");\r\nvar MCUNotGenuineToDashboard = createCustomErrorClass(\"MCUNotGenuineToDashboard\");\r\nvar RecipientRequired = createCustomErrorClass(\"RecipientRequired\");\r\nvar UnavailableTezosOriginatedAccountReceive = createCustomErrorClass(\"UnavailableTezosOriginatedAccountReceive\");\r\nvar UnavailableTezosOriginatedAccountSend = createCustomErrorClass(\"UnavailableTezosOriginatedAccountSend\");\r\nvar UpdateFetchFileFail = createCustomErrorClass(\"UpdateFetchFileFail\");\r\nvar UpdateIncorrectHash = createCustomErrorClass(\"UpdateIncorrectHash\");\r\nvar UpdateIncorrectSig = createCustomErrorClass(\"UpdateIncorrectSig\");\r\nvar UpdateYourApp = createCustomErrorClass(\"UpdateYourApp\");\r\nvar UserRefusedDeviceNameChange = createCustomErrorClass(\"UserRefusedDeviceNameChange\");\r\nvar UserRefusedAddress = createCustomErrorClass(\"UserRefusedAddress\");\r\nvar UserRefusedFirmwareUpdate = createCustomErrorClass(\"UserRefusedFirmwareUpdate\");\r\nvar UserRefusedAllowManager = createCustomErrorClass(\"UserRefusedAllowManager\");\r\nvar UserRefusedOnDevice = createCustomErrorClass(\"UserRefusedOnDevice\"); // TODO rename because it's just for transaction refusal\r\nvar TransportOpenUserCancelled = createCustomErrorClass(\"TransportOpenUserCancelled\");\r\nvar TransportInterfaceNotAvailable = createCustomErrorClass(\"TransportInterfaceNotAvailable\");\r\nvar TransportRaceCondition = createCustomErrorClass(\"TransportRaceCondition\");\r\nvar TransportWebUSBGestureRequired = createCustomErrorClass(\"TransportWebUSBGestureRequired\");\r\nvar DeviceShouldStayInApp = createCustomErrorClass(\"DeviceShouldStayInApp\");\r\nvar WebsocketConnectionError = createCustomErrorClass(\"WebsocketConnectionError\");\r\nvar WebsocketConnectionFailed = createCustomErrorClass(\"WebsocketConnectionFailed\");\r\nvar WrongDeviceForAccount = createCustomErrorClass(\"WrongDeviceForAccount\");\r\nvar WrongAppForCurrency = createCustomErrorClass(\"WrongAppForCurrency\");\r\nvar ETHAddressNonEIP = createCustomErrorClass(\"ETHAddressNonEIP\");\r\nvar CantScanQRCode = createCustomErrorClass(\"CantScanQRCode\");\r\nvar FeeNotLoaded = createCustomErrorClass(\"FeeNotLoaded\");\r\nvar FeeRequired = createCustomErrorClass(\"FeeRequired\");\r\nvar FeeTooHigh = createCustomErrorClass(\"FeeTooHigh\");\r\nvar SyncError = createCustomErrorClass(\"SyncError\");\r\nvar PairingFailed = createCustomErrorClass(\"PairingFailed\");\r\nvar GenuineCheckFailed = createCustomErrorClass(\"GenuineCheckFailed\");\r\nvar LedgerAPI4xx = createCustomErrorClass(\"LedgerAPI4xx\");\r\nvar LedgerAPI5xx = createCustomErrorClass(\"LedgerAPI5xx\");\r\nvar FirmwareOrAppUpdateRequired = createCustomErrorClass(\"FirmwareOrAppUpdateRequired\");\r\n// db stuff, no need to translate\r\nvar NoDBPathGiven = createCustomErrorClass(\"NoDBPathGiven\");\r\nvar DBWrongPassword = createCustomErrorClass(\"DBWrongPassword\");\r\nvar DBNotReset = createCustomErrorClass(\"DBNotReset\");\r\n/**\r\n * TransportError is used for any generic transport errors.\r\n * e.g. Error thrown when data received by exchanges are incorrect or if exchanged failed to communicate with the device for various reason.\r\n */\r\nfunction TransportError(message, id) {\r\n    this.name = \"TransportError\";\r\n    this.message = message;\r\n    this.stack = new Error().stack;\r\n    this.id = id;\r\n}\r\nTransportError.prototype = new Error();\r\naddCustomErrorDeserializer(\"TransportError\", function (e) { return new TransportError(e.message, e.id); });\r\nvar StatusCodes = {\r\n    PIN_REMAINING_ATTEMPTS: 0x63c0,\r\n    INCORRECT_LENGTH: 0x6700,\r\n    MISSING_CRITICAL_PARAMETER: 0x6800,\r\n    COMMAND_INCOMPATIBLE_FILE_STRUCTURE: 0x6981,\r\n    SECURITY_STATUS_NOT_SATISFIED: 0x6982,\r\n    CONDITIONS_OF_USE_NOT_SATISFIED: 0x6985,\r\n    INCORRECT_DATA: 0x6a80,\r\n    NOT_ENOUGH_MEMORY_SPACE: 0x6a84,\r\n    REFERENCED_DATA_NOT_FOUND: 0x6a88,\r\n    FILE_ALREADY_EXISTS: 0x6a89,\r\n    INCORRECT_P1_P2: 0x6b00,\r\n    INS_NOT_SUPPORTED: 0x6d00,\r\n    CLA_NOT_SUPPORTED: 0x6e00,\r\n    TECHNICAL_PROBLEM: 0x6f00,\r\n    OK: 0x9000,\r\n    MEMORY_PROBLEM: 0x9240,\r\n    NO_EF_SELECTED: 0x9400,\r\n    INVALID_OFFSET: 0x9402,\r\n    FILE_NOT_FOUND: 0x9404,\r\n    INCONSISTENT_FILE: 0x9408,\r\n    ALGORITHM_NOT_SUPPORTED: 0x9484,\r\n    INVALID_KCV: 0x9485,\r\n    CODE_NOT_INITIALIZED: 0x9802,\r\n    ACCESS_CONDITION_NOT_FULFILLED: 0x9804,\r\n    CONTRADICTION_SECRET_CODE_STATUS: 0x9808,\r\n    CONTRADICTION_INVALIDATION: 0x9810,\r\n    CODE_BLOCKED: 0x9840,\r\n    MAX_VALUE_REACHED: 0x9850,\r\n    GP_AUTH_FAILED: 0x6300,\r\n    LICENSING: 0x6f42,\r\n    HALTED: 0x6faa,\r\n};\r\nfunction getAltStatusMessage(code) {\r\n    switch (code) {\r\n        // improve text of most common errors\r\n        case 0x6700:\r\n            return \"Incorrect length\";\r\n        case 0x6800:\r\n            return \"Missing critical parameter\";\r\n        case 0x6982:\r\n            return \"Security not satisfied (dongle locked or have invalid access rights)\";\r\n        case 0x6985:\r\n            return \"Condition of use not satisfied (denied by the user?)\";\r\n        case 0x6a80:\r\n            return \"Invalid data received\";\r\n        case 0x6b00:\r\n            return \"Invalid parameter received\";\r\n    }\r\n    if (0x6f00 <= code && code <= 0x6fff) {\r\n        return \"Internal error, please report\";\r\n    }\r\n}\r\n/**\r\n * Error thrown when a device returned a non success status.\r\n * the error.statusCode is one of the `StatusCodes` exported by this library.\r\n */\r\nfunction TransportStatusError(statusCode) {\r\n    this.name = \"TransportStatusError\";\r\n    var statusText = Object.keys(StatusCodes).find(function (k) { return StatusCodes[k] === statusCode; }) ||\r\n        \"UNKNOWN_ERROR\";\r\n    var smsg = getAltStatusMessage(statusCode) || statusText;\r\n    var statusCodeStr = statusCode.toString(16);\r\n    this.message = \"Ledger device: \" + smsg + \" (0x\" + statusCodeStr + \")\";\r\n    this.stack = new Error().stack;\r\n    this.statusCode = statusCode;\r\n    this.statusText = statusText;\r\n}\r\nTransportStatusError.prototype = new Error();\r\naddCustomErrorDeserializer(\"TransportStatusError\", function (e) { return new TransportStatusError(e.statusCode); });\n\nexport { AccountNameRequiredError, AccountNotSupported, AmountRequired, BluetoothRequired, BtcUnmatchedApp, CantOpenDevice, CantScanQRCode, CashAddrNotSupported, CurrencyNotSupported, DBNotReset, DBWrongPassword, DeviceAppVerifyNotSupported, DeviceGenuineSocketEarlyClose, DeviceHalted, DeviceInOSUExpected, DeviceNameInvalid, DeviceNotGenuineError, DeviceOnDashboardExpected, DeviceOnDashboardUnexpected, DeviceShouldStayInApp, DeviceSocketFail, DeviceSocketNoBulkStatus, DisconnectedDevice, DisconnectedDeviceDuringOperation, ETHAddressNonEIP, EnpointConfigError, EthAppPleaseEnableContractData, FeeEstimationFailed, FeeNotLoaded, FeeRequired, FeeTooHigh, FirmwareNotRecognized, FirmwareOrAppUpdateRequired, GasLessThanEstimate, GenuineCheckFailed, HardResetFail, InvalidAddress, InvalidAddressBecauseDestinationIsAlsoSource, InvalidXRPTag, LatestMCUInstalledError, LedgerAPI4xx, LedgerAPI5xx, LedgerAPIError, LedgerAPIErrorWithMessage, LedgerAPINotAvailable, MCUNotGenuineToDashboard, ManagerAppAlreadyInstalledError, ManagerAppDepInstallRequired, ManagerAppDepUninstallRequired, ManagerAppRelyOnBTCError, ManagerDeviceLockedError, ManagerFirmwareNotEnoughSpaceError, ManagerNotEnoughSpaceError, ManagerUninstallBTCDep, NetworkDown, NoAccessToCamera, NoAddressesFound, NoDBPathGiven, NotEnoughBalance, NotEnoughBalanceBecauseDestinationNotCreated, NotEnoughBalanceInParentAccount, NotEnoughBalanceToDelegate, NotEnoughGas, NotEnoughSpendableBalance, NotSupportedLegacyAddress, PairingFailed, PasswordIncorrectError, PasswordsDontMatchError, RecipientRequired, RecommendSubAccountsToEmpty, RecommendUndelegation, StatusCodes, SyncError, TimeoutTagged, TransportError, TransportInterfaceNotAvailable, TransportOpenUserCancelled, TransportRaceCondition, TransportStatusError, TransportWebUSBGestureRequired, UnavailableTezosOriginatedAccountReceive, UnavailableTezosOriginatedAccountSend, UnexpectedBootloader, UnknownMCU, UpdateFetchFileFail, UpdateIncorrectHash, UpdateIncorrectSig, UpdateYourApp, UserRefusedAddress, UserRefusedAllowManager, UserRefusedDeviceNameChange, UserRefusedFirmwareUpdate, UserRefusedOnDevice, WebsocketConnectionError, WebsocketConnectionFailed, WrongAppForCurrency, WrongDeviceForAccount, addCustomErrorDeserializer, createCustomErrorClass, deserializeError, getAltStatusMessage, serializeError };\n","/**\n * A Log object\n */\nlet id = 0;\nconst subscribers = [];\n/**\n * log something\n * @param type a namespaced identifier of the log (it is not a level like \"debug\", \"error\" but more like \"apdu-in\", \"apdu-out\", etc...)\n * @param message a clear message of the log associated to the type\n */\n\nexport const log = (type, message, data) => {\n  const obj = {\n    type,\n    id: String(++id),\n    date: new Date()\n  };\n  if (message) obj.message = message;\n  if (data) obj.data = data;\n  dispatch(obj);\n};\n/**\n * listen to logs.\n * @param cb that is called for each future log() with the Log object\n * @return a function that can be called to unsubscribe the listener\n */\n\nexport const listen = cb => {\n  subscribers.push(cb);\n  return () => {\n    const i = subscribers.indexOf(cb);\n\n    if (i !== -1) {\n      // equivalent of subscribers.splice(i, 1) // https://twitter.com/Rich_Harris/status/1125850391155965952\n      subscribers[i] = subscribers[subscribers.length - 1];\n      subscribers.pop();\n    }\n  };\n};\n\nfunction dispatch(log) {\n  for (let i = 0; i < subscribers.length; i++) {\n    try {\n      subscribers[i](log);\n    } catch (e) {\n      console.error(e);\n    }\n  }\n} // for debug purpose\n\n\nif (typeof window !== \"undefined\") {\n  window.__ledgerLogsListen = listen;\n}\n//# sourceMappingURL=index.js.map","import { sign, isSupported } from \"u2f-api\";\nimport Transport from \"@ledgerhq/hw-transport\";\nimport { log } from \"@ledgerhq/logs\";\nimport { TransportError } from \"@ledgerhq/errors\";\n\nfunction wrapU2FTransportError(originalError, message, id) {\n  const err = new TransportError(message, id); // $FlowFixMe\n\n  err.originalError = originalError;\n  return err;\n}\n\nfunction wrapApdu(apdu, key) {\n  const result = Buffer.alloc(apdu.length);\n\n  for (let i = 0; i < apdu.length; i++) {\n    result[i] = apdu[i] ^ key[i % key.length];\n  }\n\n  return result;\n} // Convert from normal to web-safe, strip trailing \"=\"s\n\n\nconst webSafe64 = base64 => base64.replace(/\\+/g, \"-\").replace(/\\//g, \"_\").replace(/=+$/, \"\"); // Convert from web-safe to normal, add trailing \"=\"s\n\n\nconst normal64 = base64 => base64.replace(/-/g, \"+\").replace(/_/g, \"/\") + \"==\".substring(0, 3 * base64.length % 4);\n\nfunction attemptExchange(apdu, timeoutMillis, scrambleKey, unwrap) {\n  const keyHandle = wrapApdu(apdu, scrambleKey);\n  const challenge = Buffer.from(\"0000000000000000000000000000000000000000000000000000000000000000\", \"hex\");\n  const signRequest = {\n    version: \"U2F_V2\",\n    keyHandle: webSafe64(keyHandle.toString(\"base64\")),\n    challenge: webSafe64(challenge.toString(\"base64\")),\n    appId: location.origin\n  };\n  log(\"apdu\", \"=> \" + apdu.toString(\"hex\"));\n  return sign(signRequest, timeoutMillis / 1000).then(response => {\n    const {\n      signatureData\n    } = response;\n\n    if (typeof signatureData === \"string\") {\n      const data = Buffer.from(normal64(signatureData), \"base64\");\n      let result;\n\n      if (!unwrap) {\n        result = data;\n      } else {\n        result = data.slice(5);\n      }\n\n      log(\"apdu\", \"<= \" + result.toString(\"hex\"));\n      return result;\n    } else {\n      throw response;\n    }\n  });\n}\n\nlet transportInstances = [];\n\nfunction emitDisconnect() {\n  transportInstances.forEach(t => t.emit(\"disconnect\"));\n  transportInstances = [];\n}\n\nfunction isTimeoutU2FError(u2fError) {\n  return u2fError.metaData.code === 5;\n}\n/**\n * U2F web Transport implementation\n * @example\n * import TransportU2F from \"@ledgerhq/hw-transport-u2f\";\n * ...\n * TransportU2F.create().then(transport => ...)\n */\n\n\nexport default class TransportU2F extends Transport {\n  /*\n   */\n\n  /*\n   */\n\n  /**\n   * static function to create a new Transport from a connected Ledger device discoverable via U2F (browser support)\n   */\n  static async open(_, _openTimeout = 5000) {\n    return new TransportU2F();\n  }\n\n  constructor() {\n    super();\n    this.scrambleKey = void 0;\n    this.unwrap = true;\n    transportInstances.push(this);\n  }\n  /**\n   * Exchange with the device using APDU protocol.\n   * @param apdu\n   * @returns a promise of apdu response\n   */\n\n\n  async exchange(apdu) {\n    try {\n      return await attemptExchange(apdu, this.exchangeTimeout, this.scrambleKey, this.unwrap);\n    } catch (e) {\n      const isU2FError = typeof e.metaData === \"object\";\n\n      if (isU2FError) {\n        if (isTimeoutU2FError(e)) {\n          emitDisconnect();\n        } // the wrapping make error more usable and \"printable\" to the end user.\n\n\n        throw wrapU2FTransportError(e, \"Failed to sign with Ledger device: U2F \" + e.metaData.type, \"U2F_\" + e.metaData.code);\n      } else {\n        throw e;\n      }\n    }\n  }\n  /**\n   */\n\n\n  setScrambleKey(scrambleKey) {\n    this.scrambleKey = Buffer.from(scrambleKey, \"ascii\");\n  }\n  /**\n   */\n\n\n  setUnwrap(unwrap) {\n    this.unwrap = unwrap;\n  }\n\n  close() {\n    // u2f have no way to clean things up\n    return Promise.resolve();\n  }\n\n}\nTransportU2F.isSupported = isSupported;\n\nTransportU2F.list = () => // this transport is not discoverable but we are going to guess if it is here with isSupported()\nisSupported().then(supported => supported ? [null] : []);\n\nTransportU2F.listen = observer => {\n  let unsubscribed = false;\n  isSupported().then(supported => {\n    if (unsubscribed) return;\n\n    if (supported) {\n      observer.next({\n        type: \"add\",\n        descriptor: null\n      });\n      observer.complete();\n    } else {\n      observer.error(new TransportError(\"U2F browser support is needed for Ledger. \" + \"Please use Chrome, Opera or Firefox with a U2F extension. \" + \"Also make sure you're on an HTTPS connection\", \"U2FNotSupported\"));\n    }\n  });\n  return {\n    unsubscribe: () => {\n      unsubscribed = true;\n    }\n  };\n};\n//# sourceMappingURL=TransportU2F.js.map","'use strict';\nmodule.exports = require( './lib/u2f-api' );","import EventEmitter from \"events\";\nimport { TransportRaceCondition, TransportError, StatusCodes, getAltStatusMessage, TransportStatusError } from \"@ledgerhq/errors\";\nexport { TransportError, TransportStatusError, StatusCodes, getAltStatusMessage };\n/**\n */\n\n/**\n * Transport defines the generic interface to share between node/u2f impl\n * A **Descriptor** is a parametric type that is up to be determined for the implementation.\n * it can be for instance an ID, an file path, a URL,...\n */\nexport default class Transport {\n  constructor() {\n    this.exchangeTimeout = 30000;\n    this.unresponsiveTimeout = 15000;\n    this.deviceModel = null;\n    this._events = new EventEmitter();\n\n    this.send = async (cla, ins, p1, p2, data = Buffer.alloc(0), statusList = [StatusCodes.OK]) => {\n      if (data.length >= 256) {\n        throw new TransportError(\"data.length exceed 256 bytes limit. Got: \" + data.length, \"DataLengthTooBig\");\n      }\n\n      const response = await this.exchange(Buffer.concat([Buffer.from([cla, ins, p1, p2]), Buffer.from([data.length]), data]));\n      const sw = response.readUInt16BE(response.length - 2);\n\n      if (!statusList.some(s => s === sw)) {\n        throw new TransportStatusError(sw);\n      }\n\n      return response;\n    };\n\n    this.exchangeBusyPromise = void 0;\n\n    this.exchangeAtomicImpl = async f => {\n      if (this.exchangeBusyPromise) {\n        throw new TransportRaceCondition(\"An action was already pending on the Ledger device. Please deny or reconnect.\");\n      }\n\n      let resolveBusy;\n      const busyPromise = new Promise(r => {\n        resolveBusy = r;\n      });\n      this.exchangeBusyPromise = busyPromise;\n      let unresponsiveReached = false;\n      const timeout = setTimeout(() => {\n        unresponsiveReached = true;\n        this.emit(\"unresponsive\");\n      }, this.unresponsiveTimeout);\n\n      try {\n        const res = await f();\n\n        if (unresponsiveReached) {\n          this.emit(\"responsive\");\n        }\n\n        return res;\n      } finally {\n        clearTimeout(timeout);\n        if (resolveBusy) resolveBusy();\n        this.exchangeBusyPromise = null;\n      }\n    };\n\n    this._appAPIlock = null;\n  }\n\n  /**\n   * low level api to communicate with the device\n   * This method is for implementations to implement but should not be directly called.\n   * Instead, the recommanded way is to use send() method\n   * @param apdu the data to send\n   * @return a Promise of response data\n   */\n  exchange(_apdu) {\n    throw new Error(\"exchange not implemented\");\n  }\n  /**\n   * set the \"scramble key\" for the next exchanges with the device.\n   * Each App can have a different scramble key and they internally will set it at instanciation.\n   * @param key the scramble key\n   */\n\n\n  setScrambleKey(_key) {}\n  /**\n   * close the exchange with the device.\n   * @return a Promise that ends when the transport is closed.\n   */\n\n\n  close() {\n    return Promise.resolve();\n  }\n\n  /**\n   * Listen to an event on an instance of transport.\n   * Transport implementation can have specific events. Here is the common events:\n   * * `\"disconnect\"` : triggered if Transport is disconnected\n   */\n  on(eventName, cb) {\n    this._events.on(eventName, cb);\n  }\n  /**\n   * Stop listening to an event on an instance of transport.\n   */\n\n\n  off(eventName, cb) {\n    this._events.removeListener(eventName, cb);\n  }\n\n  emit(event, ...args) {\n    this._events.emit(event, ...args);\n  }\n  /**\n   * Enable or not logs of the binary exchange\n   */\n\n\n  setDebugMode() {\n    console.warn(\"setDebugMode is deprecated. use @ledgerhq/logs instead. No logs are emitted in this anymore.\");\n  }\n  /**\n   * Set a timeout (in milliseconds) for the exchange call. Only some transport might implement it. (e.g. U2F)\n   */\n\n\n  setExchangeTimeout(exchangeTimeout) {\n    this.exchangeTimeout = exchangeTimeout;\n  }\n  /**\n   * Define the delay before emitting \"unresponsive\" on an exchange that does not respond\n   */\n\n\n  setExchangeUnresponsiveTimeout(unresponsiveTimeout) {\n    this.unresponsiveTimeout = unresponsiveTimeout;\n  }\n  /**\n   * wrapper on top of exchange to simplify work of the implementation.\n   * @param cla\n   * @param ins\n   * @param p1\n   * @param p2\n   * @param data\n   * @param statusList is a list of accepted status code (shorts). [0x9000] by default\n   * @return a Promise of response buffer\n   */\n\n\n  /**\n   * create() allows to open the first descriptor available or\n   * throw if there is none or if timeout is reached.\n   * This is a light helper, alternative to using listen() and open() (that you may need for any more advanced usecase)\n   * @example\n  TransportFoo.create().then(transport => ...)\n   */\n  static create(openTimeout = 3000, listenTimeout) {\n    return new Promise((resolve, reject) => {\n      let found = false;\n      const sub = this.listen({\n        next: e => {\n          found = true;\n          if (sub) sub.unsubscribe();\n          if (listenTimeoutId) clearTimeout(listenTimeoutId);\n          this.open(e.descriptor, openTimeout).then(resolve, reject);\n        },\n        error: e => {\n          if (listenTimeoutId) clearTimeout(listenTimeoutId);\n          reject(e);\n        },\n        complete: () => {\n          if (listenTimeoutId) clearTimeout(listenTimeoutId);\n\n          if (!found) {\n            reject(new TransportError(this.ErrorMessage_NoDeviceFound, \"NoDeviceFound\"));\n          }\n        }\n      });\n      const listenTimeoutId = listenTimeout ? setTimeout(() => {\n        sub.unsubscribe();\n        reject(new TransportError(this.ErrorMessage_ListenTimeout, \"ListenTimeout\"));\n      }, listenTimeout) : null;\n    });\n  }\n\n  decorateAppAPIMethods(self, methods, scrambleKey) {\n    for (let methodName of methods) {\n      self[methodName] = this.decorateAppAPIMethod(methodName, self[methodName], self, scrambleKey);\n    }\n  }\n\n  decorateAppAPIMethod(methodName, f, ctx, scrambleKey) {\n    return async (...args) => {\n      const {\n        _appAPIlock\n      } = this;\n\n      if (_appAPIlock) {\n        return Promise.reject(new TransportError(\"Ledger Device is busy (lock \" + _appAPIlock + \")\", \"TransportLocked\"));\n      }\n\n      try {\n        this._appAPIlock = methodName;\n        this.setScrambleKey(scrambleKey);\n        return await f.apply(ctx, args);\n      } finally {\n        this._appAPIlock = null;\n      }\n    };\n  }\n\n}\nTransport.isSupported = void 0;\nTransport.list = void 0;\nTransport.listen = void 0;\nTransport.open = void 0;\nTransport.ErrorMessage_ListenTimeout = \"No Ledger device found (timeout)\";\nTransport.ErrorMessage_NoDeviceFound = \"No Ledger device found\";\n//# sourceMappingURL=Transport.js.map","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nvar R = typeof Reflect === 'object' ? Reflect : null\nvar ReflectApply = R && typeof R.apply === 'function'\n  ? R.apply\n  : function ReflectApply(target, receiver, args) {\n    return Function.prototype.apply.call(target, receiver, args);\n  }\n\nvar ReflectOwnKeys\nif (R && typeof R.ownKeys === 'function') {\n  ReflectOwnKeys = R.ownKeys\n} else if (Object.getOwnPropertySymbols) {\n  ReflectOwnKeys = function ReflectOwnKeys(target) {\n    return Object.getOwnPropertyNames(target)\n      .concat(Object.getOwnPropertySymbols(target));\n  };\n} else {\n  ReflectOwnKeys = function ReflectOwnKeys(target) {\n    return Object.getOwnPropertyNames(target);\n  };\n}\n\nfunction ProcessEmitWarning(warning) {\n  if (console && console.warn) console.warn(warning);\n}\n\nvar NumberIsNaN = Number.isNaN || function NumberIsNaN(value) {\n  return value !== value;\n}\n\nfunction EventEmitter() {\n  EventEmitter.init.call(this);\n}\nmodule.exports = EventEmitter;\nmodule.exports.once = once;\n\n// Backwards-compat with node 0.10.x\nEventEmitter.EventEmitter = EventEmitter;\n\nEventEmitter.prototype._events = undefined;\nEventEmitter.prototype._eventsCount = 0;\nEventEmitter.prototype._maxListeners = undefined;\n\n// By default EventEmitters will print a warning if more than 10 listeners are\n// added to it. This is a useful default which helps finding memory leaks.\nvar defaultMaxListeners = 10;\n\nfunction checkListener(listener) {\n  if (typeof listener !== 'function') {\n    throw new TypeError('The \"listener\" argument must be of type Function. Received type ' + typeof listener);\n  }\n}\n\nObject.defineProperty(EventEmitter, 'defaultMaxListeners', {\n  enumerable: true,\n  get: function() {\n    return defaultMaxListeners;\n  },\n  set: function(arg) {\n    if (typeof arg !== 'number' || arg < 0 || NumberIsNaN(arg)) {\n      throw new RangeError('The value of \"defaultMaxListeners\" is out of range. It must be a non-negative number. Received ' + arg + '.');\n    }\n    defaultMaxListeners = arg;\n  }\n});\n\nEventEmitter.init = function() {\n\n  if (this._events === undefined ||\n      this._events === Object.getPrototypeOf(this)._events) {\n    this._events = Object.create(null);\n    this._eventsCount = 0;\n  }\n\n  this._maxListeners = this._maxListeners || undefined;\n};\n\n// Obviously not all Emitters should be limited to 10. This function allows\n// that to be increased. Set to zero for unlimited.\nEventEmitter.prototype.setMaxListeners = function setMaxListeners(n) {\n  if (typeof n !== 'number' || n < 0 || NumberIsNaN(n)) {\n    throw new RangeError('The value of \"n\" is out of range. It must be a non-negative number. Received ' + n + '.');\n  }\n  this._maxListeners = n;\n  return this;\n};\n\nfunction _getMaxListeners(that) {\n  if (that._maxListeners === undefined)\n    return EventEmitter.defaultMaxListeners;\n  return that._maxListeners;\n}\n\nEventEmitter.prototype.getMaxListeners = function getMaxListeners() {\n  return _getMaxListeners(this);\n};\n\nEventEmitter.prototype.emit = function emit(type) {\n  var args = [];\n  for (var i = 1; i < arguments.length; i++) args.push(arguments[i]);\n  var doError = (type === 'error');\n\n  var events = this._events;\n  if (events !== undefined)\n    doError = (doError && events.error === undefined);\n  else if (!doError)\n    return false;\n\n  // If there is no 'error' event listener then throw.\n  if (doError) {\n    var er;\n    if (args.length > 0)\n      er = args[0];\n    if (er instanceof Error) {\n      // Note: The comments on the `throw` lines are intentional, they show\n      // up in Node's output if this results in an unhandled exception.\n      throw er; // Unhandled 'error' event\n    }\n    // At least give some kind of context to the user\n    var err = new Error('Unhandled error.' + (er ? ' (' + er.message + ')' : ''));\n    err.context = er;\n    throw err; // Unhandled 'error' event\n  }\n\n  var handler = events[type];\n\n  if (handler === undefined)\n    return false;\n\n  if (typeof handler === 'function') {\n    ReflectApply(handler, this, args);\n  } else {\n    var len = handler.length;\n    var listeners = arrayClone(handler, len);\n    for (var i = 0; i < len; ++i)\n      ReflectApply(listeners[i], this, args);\n  }\n\n  return true;\n};\n\nfunction _addListener(target, type, listener, prepend) {\n  var m;\n  var events;\n  var existing;\n\n  checkListener(listener);\n\n  events = target._events;\n  if (events === undefined) {\n    events = target._events = Object.create(null);\n    target._eventsCount = 0;\n  } else {\n    // To avoid recursion in the case that type === \"newListener\"! Before\n    // adding it to the listeners, first emit \"newListener\".\n    if (events.newListener !== undefined) {\n      target.emit('newListener', type,\n                  listener.listener ? listener.listener : listener);\n\n      // Re-assign `events` because a newListener handler could have caused the\n      // this._events to be assigned to a new object\n      events = target._events;\n    }\n    existing = events[type];\n  }\n\n  if (existing === undefined) {\n    // Optimize the case of one listener. Don't need the extra array object.\n    existing = events[type] = listener;\n    ++target._eventsCount;\n  } else {\n    if (typeof existing === 'function') {\n      // Adding the second element, need to change to array.\n      existing = events[type] =\n        prepend ? [listener, existing] : [existing, listener];\n      // If we've already got an array, just append.\n    } else if (prepend) {\n      existing.unshift(listener);\n    } else {\n      existing.push(listener);\n    }\n\n    // Check for listener leak\n    m = _getMaxListeners(target);\n    if (m > 0 && existing.length > m && !existing.warned) {\n      existing.warned = true;\n      // No error code for this since it is a Warning\n      // eslint-disable-next-line no-restricted-syntax\n      var w = new Error('Possible EventEmitter memory leak detected. ' +\n                          existing.length + ' ' + String(type) + ' listeners ' +\n                          'added. Use emitter.setMaxListeners() to ' +\n                          'increase limit');\n      w.name = 'MaxListenersExceededWarning';\n      w.emitter = target;\n      w.type = type;\n      w.count = existing.length;\n      ProcessEmitWarning(w);\n    }\n  }\n\n  return target;\n}\n\nEventEmitter.prototype.addListener = function addListener(type, listener) {\n  return _addListener(this, type, listener, false);\n};\n\nEventEmitter.prototype.on = EventEmitter.prototype.addListener;\n\nEventEmitter.prototype.prependListener =\n    function prependListener(type, listener) {\n      return _addListener(this, type, listener, true);\n    };\n\nfunction onceWrapper() {\n  if (!this.fired) {\n    this.target.removeListener(this.type, this.wrapFn);\n    this.fired = true;\n    if (arguments.length === 0)\n      return this.listener.call(this.target);\n    return this.listener.apply(this.target, arguments);\n  }\n}\n\nfunction _onceWrap(target, type, listener) {\n  var state = { fired: false, wrapFn: undefined, target: target, type: type, listener: listener };\n  var wrapped = onceWrapper.bind(state);\n  wrapped.listener = listener;\n  state.wrapFn = wrapped;\n  return wrapped;\n}\n\nEventEmitter.prototype.once = function once(type, listener) {\n  checkListener(listener);\n  this.on(type, _onceWrap(this, type, listener));\n  return this;\n};\n\nEventEmitter.prototype.prependOnceListener =\n    function prependOnceListener(type, listener) {\n      checkListener(listener);\n      this.prependListener(type, _onceWrap(this, type, listener));\n      return this;\n    };\n\n// Emits a 'removeListener' event if and only if the listener was removed.\nEventEmitter.prototype.removeListener =\n    function removeListener(type, listener) {\n      var list, events, position, i, originalListener;\n\n      checkListener(listener);\n\n      events = this._events;\n      if (events === undefined)\n        return this;\n\n      list = events[type];\n      if (list === undefined)\n        return this;\n\n      if (list === listener || list.listener === listener) {\n        if (--this._eventsCount === 0)\n          this._events = Object.create(null);\n        else {\n          delete events[type];\n          if (events.removeListener)\n            this.emit('removeListener', type, list.listener || listener);\n        }\n      } else if (typeof list !== 'function') {\n        position = -1;\n\n        for (i = list.length - 1; i >= 0; i--) {\n          if (list[i] === listener || list[i].listener === listener) {\n            originalListener = list[i].listener;\n            position = i;\n            break;\n          }\n        }\n\n        if (position < 0)\n          return this;\n\n        if (position === 0)\n          list.shift();\n        else {\n          spliceOne(list, position);\n        }\n\n        if (list.length === 1)\n          events[type] = list[0];\n\n        if (events.removeListener !== undefined)\n          this.emit('removeListener', type, originalListener || listener);\n      }\n\n      return this;\n    };\n\nEventEmitter.prototype.off = EventEmitter.prototype.removeListener;\n\nEventEmitter.prototype.removeAllListeners =\n    function removeAllListeners(type) {\n      var listeners, events, i;\n\n      events = this._events;\n      if (events === undefined)\n        return this;\n\n      // not listening for removeListener, no need to emit\n      if (events.removeListener === undefined) {\n        if (arguments.length === 0) {\n          this._events = Object.create(null);\n          this._eventsCount = 0;\n        } else if (events[type] !== undefined) {\n          if (--this._eventsCount === 0)\n            this._events = Object.create(null);\n          else\n            delete events[type];\n        }\n        return this;\n      }\n\n      // emit removeListener for all listeners on all events\n      if (arguments.length === 0) {\n        var keys = Object.keys(events);\n        var key;\n        for (i = 0; i < keys.length; ++i) {\n          key = keys[i];\n          if (key === 'removeListener') continue;\n          this.removeAllListeners(key);\n        }\n        this.removeAllListeners('removeListener');\n        this._events = Object.create(null);\n        this._eventsCount = 0;\n        return this;\n      }\n\n      listeners = events[type];\n\n      if (typeof listeners === 'function') {\n        this.removeListener(type, listeners);\n      } else if (listeners !== undefined) {\n        // LIFO order\n        for (i = listeners.length - 1; i >= 0; i--) {\n          this.removeListener(type, listeners[i]);\n        }\n      }\n\n      return this;\n    };\n\nfunction _listeners(target, type, unwrap) {\n  var events = target._events;\n\n  if (events === undefined)\n    return [];\n\n  var evlistener = events[type];\n  if (evlistener === undefined)\n    return [];\n\n  if (typeof evlistener === 'function')\n    return unwrap ? [evlistener.listener || evlistener] : [evlistener];\n\n  return unwrap ?\n    unwrapListeners(evlistener) : arrayClone(evlistener, evlistener.length);\n}\n\nEventEmitter.prototype.listeners = function listeners(type) {\n  return _listeners(this, type, true);\n};\n\nEventEmitter.prototype.rawListeners = function rawListeners(type) {\n  return _listeners(this, type, false);\n};\n\nEventEmitter.listenerCount = function(emitter, type) {\n  if (typeof emitter.listenerCount === 'function') {\n    return emitter.listenerCount(type);\n  } else {\n    return listenerCount.call(emitter, type);\n  }\n};\n\nEventEmitter.prototype.listenerCount = listenerCount;\nfunction listenerCount(type) {\n  var events = this._events;\n\n  if (events !== undefined) {\n    var evlistener = events[type];\n\n    if (typeof evlistener === 'function') {\n      return 1;\n    } else if (evlistener !== undefined) {\n      return evlistener.length;\n    }\n  }\n\n  return 0;\n}\n\nEventEmitter.prototype.eventNames = function eventNames() {\n  return this._eventsCount > 0 ? ReflectOwnKeys(this._events) : [];\n};\n\nfunction arrayClone(arr, n) {\n  var copy = new Array(n);\n  for (var i = 0; i < n; ++i)\n    copy[i] = arr[i];\n  return copy;\n}\n\nfunction spliceOne(list, index) {\n  for (; index + 1 < list.length; index++)\n    list[index] = list[index + 1];\n  list.pop();\n}\n\nfunction unwrapListeners(arr) {\n  var ret = new Array(arr.length);\n  for (var i = 0; i < ret.length; ++i) {\n    ret[i] = arr[i].listener || arr[i];\n  }\n  return ret;\n}\n\nfunction once(emitter, name) {\n  return new Promise(function (resolve, reject) {\n    function eventListener() {\n      if (errorListener !== undefined) {\n        emitter.removeListener('error', errorListener);\n      }\n      resolve([].slice.call(arguments));\n    };\n    var errorListener;\n\n    // Adding an error listener is not optional because\n    // if an error is thrown on an event emitter we cannot\n    // guarantee that the actual event we are waiting will\n    // be fired. The result could be a silent way to create\n    // memory or file descriptor leaks, which is something\n    // we should avoid.\n    if (name !== 'error') {\n      errorListener = function errorListener(err) {\n        emitter.removeListener(name, eventListener);\n        reject(err);\n      };\n\n      emitter.once('error', errorListener);\n    }\n\n    emitter.once(name, eventListener);\n  });\n}\n"],"sourceRoot":""}