{"version":3,"sources":["webpack:///./node_modules/rlp/dist/index.js","webpack:///./node_modules/rlp/node_modules/bn.js/lib/bn.js"],"names":["Object","defineProperty","exports","value","getLength","decode","encode","BN","input","Array","isArray","output","i","length","push","buf","Buffer","concat","encodeLength","inputBuf","toBuffer","safeParseInt","v","base","slice","Error","parseInt","len","offset","from","hexLength","intToHex","lLength","firstByte","stream","inputBuffer","decoded","_decode","remainder","data","llength","toString","innerRemainder","d","totalLength","isHexPrefixed","str","stripHexPrefix","integer","hex","padToEven","a","intToBuffer","isBuffer","undefined","Uint8Array","isBN","toArray","assert","val","msg","inherits","ctor","superCtor","super_","TempCtor","prototype","constructor","number","endian","this","negative","words","red","_init","module","wordSize","e","parseHex","start","end","r","Math","min","c","charCodeAt","parseBase","mul","num","max","left","right","cmp","_initNumber","_initArray","replace","_parseHex","_parseBase","strip","ceil","j","w","off","limbLen","limbPow","total","mod","word","imuln","_iaddn","pow","copy","dest","clone","_expand","size","_normSign","inspect","zeros","groupSizes","groupBases","toBitArray","bitLength","bit","wbit","smallMulTo","self","out","b","lo","carry","k","ncarry","rword","maxJ","padding","groupSize","groupBase","isZero","modn","idivn","toNumber","ret","toJSON","toArrayLike","ArrayType","byteLength","reqLength","littleEndian","res","q","andln","iushrn","clz32","_countBits","t","_zeroBits","hi","zeroBits","toTwos","width","abs","inotn","iaddn","fromTwos","testn","notn","ineg","isNeg","neg","iuor","ior","or","uor","iuand","iand","and","uand","iuxor","ixor","xor","uxor","bytesNeeded","bitsLeft","setn","iadd","isub","add","sub","comb10MulTo","mid","o","a0","al0","ah0","a1","al1","ah1","a2","al2","ah2","a3","al3","ah3","a4","al4","ah4","a5","al5","ah5","a6","al6","ah6","a7","al7","ah7","a8","al8","ah8","a9","al9","ah9","b0","bl0","bh0","b1","bl1","bh1","b2","bl2","bh2","b3","bl3","bh3","b4","bl4","bh4","b5","bl5","bh5","b6","bl6","bh6","b7","bl7","bh7","b8","bl8","bh8","b9","bl9","bh9","imul","w0","w1","w2","w3","w4","w5","w6","w7","w8","w9","w10","w11","w12","w13","w14","w15","w16","w17","w18","bigMulTo","hncarry","jumboMulTo","fftm","FFTM","mulp","x","y","mulTo","makeRBT","N","l","revBin","rb","permute","rbt","rws","iws","rtws","itws","transform","s","rtwdf","cos","PI","itwdf","sin","p","rtwdf_","itwdf_","re","ie","ro","io","rx","guessLen13b","n","m","odd","conjugate","normalize13b","ws","round","convert13b","stub","ph","_","rwst","iwst","nrws","nrwst","niwst","rmws","mulf","muln","sqr","isqr","iushln","bits","carryMask","newCarry","ishln","hint","extended","h","mask","maskedWords","ishrn","shln","ushln","shrn","ushrn","imaskn","maskn","isubn","addn","subn","iabs","_ishlnsubmul","shift","_wordDiv","mode","bhi","bhiBits","diff","qj","div","divmod","positive","divn","umod","divRound","dm","half","r2","acc","egcd","A","B","C","D","g","isEven","yp","xp","im","isOdd","jm","gcd","_invmp","x1","x2","delta","cmpn","invm","bincn","ucmp","gtn","gt","gten","gte","ltn","lt","lten","lte","eqn","eq","Red","toRed","ctx","convertTo","_forceRed","fromRed","convertFrom","forceRed","redAdd","redIAdd","redSub","redISub","redShl","shl","redMul","_verify2","redIMul","redSqr","_verify1","redISqr","redSqrt","sqrt","redInvm","redNeg","redPow","primes","k256","p224","p192","p25519","MPrime","name","tmp","_tmp","K256","call","P224","P192","P25519","prime","_prime","Mont","imod","rinv","minv","ireduce","rlen","split","imulK","_strip","outLen","prev","next","mod3","one","nOne","lpow","z","inv","windowSize","wnd","current","currentLen","mont","u"],"mappings":"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","file":"js/chunk-7c1b94ee.30e097ae.js","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getLength = exports.decode = exports.encode = void 0;\nvar BN = require(\"bn.js\");\n/**\n * RLP Encoding based on: https://github.com/ethereum/wiki/wiki/%5BEnglish%5D-RLP\n * This function takes in a data, convert it to buffer if not, and a length for recursion\n * @param input - will be converted to buffer\n * @returns returns buffer of encoded data\n **/\nfunction encode(input) {\n    if (Array.isArray(input)) {\n        var output = [];\n        for (var i = 0; i < input.length; i++) {\n            output.push(encode(input[i]));\n        }\n        var buf = Buffer.concat(output);\n        return Buffer.concat([encodeLength(buf.length, 192), buf]);\n    }\n    else {\n        var inputBuf = toBuffer(input);\n        return inputBuf.length === 1 && inputBuf[0] < 128\n            ? inputBuf\n            : Buffer.concat([encodeLength(inputBuf.length, 128), inputBuf]);\n    }\n}\nexports.encode = encode;\n/**\n * Parse integers. Check if there is no leading zeros\n * @param v The value to parse\n * @param base The base to parse the integer into\n */\nfunction safeParseInt(v, base) {\n    if (v.slice(0, 2) === '00') {\n        throw new Error('invalid RLP: extra zeros');\n    }\n    return parseInt(v, base);\n}\nfunction encodeLength(len, offset) {\n    if (len < 56) {\n        return Buffer.from([len + offset]);\n    }\n    else {\n        var hexLength = intToHex(len);\n        var lLength = hexLength.length / 2;\n        var firstByte = intToHex(offset + 55 + lLength);\n        return Buffer.from(firstByte + hexLength, 'hex');\n    }\n}\nfunction decode(input, stream) {\n    if (stream === void 0) { stream = false; }\n    if (!input || input.length === 0) {\n        return Buffer.from([]);\n    }\n    var inputBuffer = toBuffer(input);\n    var decoded = _decode(inputBuffer);\n    if (stream) {\n        return decoded;\n    }\n    if (decoded.remainder.length !== 0) {\n        throw new Error('invalid remainder');\n    }\n    return decoded.data;\n}\nexports.decode = decode;\n/**\n * Get the length of the RLP input\n * @param input\n * @returns The length of the input or an empty Buffer if no input\n */\nfunction getLength(input) {\n    if (!input || input.length === 0) {\n        return Buffer.from([]);\n    }\n    var inputBuffer = toBuffer(input);\n    var firstByte = inputBuffer[0];\n    if (firstByte <= 0x7f) {\n        return inputBuffer.length;\n    }\n    else if (firstByte <= 0xb7) {\n        return firstByte - 0x7f;\n    }\n    else if (firstByte <= 0xbf) {\n        return firstByte - 0xb6;\n    }\n    else if (firstByte <= 0xf7) {\n        // a list between  0-55 bytes long\n        return firstByte - 0xbf;\n    }\n    else {\n        // a list  over 55 bytes long\n        var llength = firstByte - 0xf6;\n        var length = safeParseInt(inputBuffer.slice(1, llength).toString('hex'), 16);\n        return llength + length;\n    }\n}\nexports.getLength = getLength;\n/** Decode an input with RLP */\nfunction _decode(input) {\n    var length, llength, data, innerRemainder, d;\n    var decoded = [];\n    var firstByte = input[0];\n    if (firstByte <= 0x7f) {\n        // a single byte whose value is in the [0x00, 0x7f] range, that byte is its own RLP encoding.\n        return {\n            data: input.slice(0, 1),\n            remainder: input.slice(1),\n        };\n    }\n    else if (firstByte <= 0xb7) {\n        // string is 0-55 bytes long. A single byte with value 0x80 plus the length of the string followed by the string\n        // The range of the first byte is [0x80, 0xb7]\n        length = firstByte - 0x7f;\n        // set 0x80 null to 0\n        if (firstByte === 0x80) {\n            data = Buffer.from([]);\n        }\n        else {\n            data = input.slice(1, length);\n        }\n        if (length === 2 && data[0] < 0x80) {\n            throw new Error('invalid rlp encoding: byte must be less 0x80');\n        }\n        return {\n            data: data,\n            remainder: input.slice(length),\n        };\n    }\n    else if (firstByte <= 0xbf) {\n        // string is greater than 55 bytes long. A single byte with the value (0xb7 plus the length of the length),\n        // followed by the length, followed by the string\n        llength = firstByte - 0xb6;\n        if (input.length - 1 < llength) {\n            throw new Error('invalid RLP: not enough bytes for string length');\n        }\n        length = safeParseInt(input.slice(1, llength).toString('hex'), 16);\n        if (length <= 55) {\n            throw new Error('invalid RLP: expected string length to be greater than 55');\n        }\n        data = input.slice(llength, length + llength);\n        if (data.length < length) {\n            throw new Error('invalid RLP: not enough bytes for string');\n        }\n        return {\n            data: data,\n            remainder: input.slice(length + llength),\n        };\n    }\n    else if (firstByte <= 0xf7) {\n        // a list between  0-55 bytes long\n        length = firstByte - 0xbf;\n        innerRemainder = input.slice(1, length);\n        while (innerRemainder.length) {\n            d = _decode(innerRemainder);\n            decoded.push(d.data);\n            innerRemainder = d.remainder;\n        }\n        return {\n            data: decoded,\n            remainder: input.slice(length),\n        };\n    }\n    else {\n        // a list  over 55 bytes long\n        llength = firstByte - 0xf6;\n        length = safeParseInt(input.slice(1, llength).toString('hex'), 16);\n        var totalLength = llength + length;\n        if (totalLength > input.length) {\n            throw new Error('invalid rlp: total length is larger than the data');\n        }\n        innerRemainder = input.slice(llength, totalLength);\n        if (innerRemainder.length === 0) {\n            throw new Error('invalid rlp, List has a invalid length');\n        }\n        while (innerRemainder.length) {\n            d = _decode(innerRemainder);\n            decoded.push(d.data);\n            innerRemainder = d.remainder;\n        }\n        return {\n            data: decoded,\n            remainder: input.slice(totalLength),\n        };\n    }\n}\n/** Check if a string is prefixed by 0x */\nfunction isHexPrefixed(str) {\n    return str.slice(0, 2) === '0x';\n}\n/** Removes 0x from a given String */\nfunction stripHexPrefix(str) {\n    if (typeof str !== 'string') {\n        return str;\n    }\n    return isHexPrefixed(str) ? str.slice(2) : str;\n}\n/** Transform an integer into its hexadecimal value */\nfunction intToHex(integer) {\n    if (integer < 0) {\n        throw new Error('Invalid integer as argument, must be unsigned!');\n    }\n    var hex = integer.toString(16);\n    return hex.length % 2 ? \"0\" + hex : hex;\n}\n/** Pad a string to be even */\nfunction padToEven(a) {\n    return a.length % 2 ? \"0\" + a : a;\n}\n/** Transform an integer into a Buffer */\nfunction intToBuffer(integer) {\n    var hex = intToHex(integer);\n    return Buffer.from(hex, 'hex');\n}\n/** Transform anything into a Buffer */\nfunction toBuffer(v) {\n    if (!Buffer.isBuffer(v)) {\n        if (typeof v === 'string') {\n            if (isHexPrefixed(v)) {\n                return Buffer.from(padToEven(stripHexPrefix(v)), 'hex');\n            }\n            else {\n                return Buffer.from(v);\n            }\n        }\n        else if (typeof v === 'number' || typeof v === 'bigint') {\n            if (!v) {\n                return Buffer.from([]);\n            }\n            else {\n                return intToBuffer(v);\n            }\n        }\n        else if (v === null || v === undefined) {\n            return Buffer.from([]);\n        }\n        else if (v instanceof Uint8Array) {\n            return Buffer.from(v);\n        }\n        else if (BN.isBN(v)) {\n            // converts a BN to a Buffer\n            return Buffer.from(v.toArray());\n        }\n        else {\n            throw new Error('invalid type');\n        }\n    }\n    return v;\n}\n//# sourceMappingURL=index.js.map","(function (module, exports) {\n  'use strict';\n\n  // Utils\n  function assert (val, msg) {\n    if (!val) throw new Error(msg || 'Assertion failed');\n  }\n\n  // Could use `inherits` module, but don't want to move from single file\n  // architecture yet.\n  function inherits (ctor, superCtor) {\n    ctor.super_ = superCtor;\n    var TempCtor = function () {};\n    TempCtor.prototype = superCtor.prototype;\n    ctor.prototype = new TempCtor();\n    ctor.prototype.constructor = ctor;\n  }\n\n  // BN\n\n  function BN (number, base, endian) {\n    if (BN.isBN(number)) {\n      return number;\n    }\n\n    this.negative = 0;\n    this.words = null;\n    this.length = 0;\n\n    // Reduction context\n    this.red = null;\n\n    if (number !== null) {\n      if (base === 'le' || base === 'be') {\n        endian = base;\n        base = 10;\n      }\n\n      this._init(number || 0, base || 10, endian || 'be');\n    }\n  }\n  if (typeof module === 'object') {\n    module.exports = BN;\n  } else {\n    exports.BN = BN;\n  }\n\n  BN.BN = BN;\n  BN.wordSize = 26;\n\n  var Buffer;\n  try {\n    Buffer = require('buffer').Buffer;\n  } catch (e) {\n  }\n\n  BN.isBN = function isBN (num) {\n    if (num instanceof BN) {\n      return true;\n    }\n\n    return num !== null && typeof num === 'object' &&\n      num.constructor.wordSize === BN.wordSize && Array.isArray(num.words);\n  };\n\n  BN.max = function max (left, right) {\n    if (left.cmp(right) > 0) return left;\n    return right;\n  };\n\n  BN.min = function min (left, right) {\n    if (left.cmp(right) < 0) return left;\n    return right;\n  };\n\n  BN.prototype._init = function init (number, base, endian) {\n    if (typeof number === 'number') {\n      return this._initNumber(number, base, endian);\n    }\n\n    if (typeof number === 'object') {\n      return this._initArray(number, base, endian);\n    }\n\n    if (base === 'hex') {\n      base = 16;\n    }\n    assert(base === (base | 0) && base >= 2 && base <= 36);\n\n    number = number.toString().replace(/\\s+/g, '');\n    var start = 0;\n    if (number[0] === '-') {\n      start++;\n    }\n\n    if (base === 16) {\n      this._parseHex(number, start);\n    } else {\n      this._parseBase(number, base, start);\n    }\n\n    if (number[0] === '-') {\n      this.negative = 1;\n    }\n\n    this.strip();\n\n    if (endian !== 'le') return;\n\n    this._initArray(this.toArray(), base, endian);\n  };\n\n  BN.prototype._initNumber = function _initNumber (number, base, endian) {\n    if (number < 0) {\n      this.negative = 1;\n      number = -number;\n    }\n    if (number < 0x4000000) {\n      this.words = [ number & 0x3ffffff ];\n      this.length = 1;\n    } else if (number < 0x10000000000000) {\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff\n      ];\n      this.length = 2;\n    } else {\n      assert(number < 0x20000000000000); // 2 ^ 53 (unsafe)\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff,\n        1\n      ];\n      this.length = 3;\n    }\n\n    if (endian !== 'le') return;\n\n    // Reverse the bytes\n    this._initArray(this.toArray(), base, endian);\n  };\n\n  BN.prototype._initArray = function _initArray (number, base, endian) {\n    // Perhaps a Uint8Array\n    assert(typeof number.length === 'number');\n    if (number.length <= 0) {\n      this.words = [ 0 ];\n      this.length = 1;\n      return this;\n    }\n\n    this.length = Math.ceil(number.length / 3);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    var j, w;\n    var off = 0;\n    if (endian === 'be') {\n      for (i = number.length - 1, j = 0; i >= 0; i -= 3) {\n        w = number[i] | (number[i - 1] << 8) | (number[i - 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    } else if (endian === 'le') {\n      for (i = 0, j = 0; i < number.length; i += 3) {\n        w = number[i] | (number[i + 1] << 8) | (number[i + 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    }\n    return this.strip();\n  };\n\n  function parseHex (str, start, end) {\n    var r = 0;\n    var len = Math.min(str.length, end);\n    for (var i = start; i < len; i++) {\n      var c = str.charCodeAt(i) - 48;\n\n      r <<= 4;\n\n      // 'a' - 'f'\n      if (c >= 49 && c <= 54) {\n        r |= c - 49 + 0xa;\n\n      // 'A' - 'F'\n      } else if (c >= 17 && c <= 22) {\n        r |= c - 17 + 0xa;\n\n      // '0' - '9'\n      } else {\n        r |= c & 0xf;\n      }\n    }\n    return r;\n  }\n\n  BN.prototype._parseHex = function _parseHex (number, start) {\n    // Create possibly bigger array to ensure that it fits the number\n    this.length = Math.ceil((number.length - start) / 6);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    var j, w;\n    // Scan 24-bit chunks and add them to the number\n    var off = 0;\n    for (i = number.length - 6, j = 0; i >= start; i -= 6) {\n      w = parseHex(number, i, i + 6);\n      this.words[j] |= (w << off) & 0x3ffffff;\n      // NOTE: `0x3fffff` is intentional here, 26bits max shift + 24bit hex limb\n      this.words[j + 1] |= w >>> (26 - off) & 0x3fffff;\n      off += 24;\n      if (off >= 26) {\n        off -= 26;\n        j++;\n      }\n    }\n    if (i + 6 !== start) {\n      w = parseHex(number, start, i + 6);\n      this.words[j] |= (w << off) & 0x3ffffff;\n      this.words[j + 1] |= w >>> (26 - off) & 0x3fffff;\n    }\n    this.strip();\n  };\n\n  function parseBase (str, start, end, mul) {\n    var r = 0;\n    var len = Math.min(str.length, end);\n    for (var i = start; i < len; i++) {\n      var c = str.charCodeAt(i) - 48;\n\n      r *= mul;\n\n      // 'a'\n      if (c >= 49) {\n        r += c - 49 + 0xa;\n\n      // 'A'\n      } else if (c >= 17) {\n        r += c - 17 + 0xa;\n\n      // '0' - '9'\n      } else {\n        r += c;\n      }\n    }\n    return r;\n  }\n\n  BN.prototype._parseBase = function _parseBase (number, base, start) {\n    // Initialize as zero\n    this.words = [ 0 ];\n    this.length = 1;\n\n    // Find length of limb in base\n    for (var limbLen = 0, limbPow = 1; limbPow <= 0x3ffffff; limbPow *= base) {\n      limbLen++;\n    }\n    limbLen--;\n    limbPow = (limbPow / base) | 0;\n\n    var total = number.length - start;\n    var mod = total % limbLen;\n    var end = Math.min(total, total - mod) + start;\n\n    var word = 0;\n    for (var i = start; i < end; i += limbLen) {\n      word = parseBase(number, i, i + limbLen, base);\n\n      this.imuln(limbPow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    if (mod !== 0) {\n      var pow = 1;\n      word = parseBase(number, i, number.length, base);\n\n      for (i = 0; i < mod; i++) {\n        pow *= base;\n      }\n\n      this.imuln(pow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n  };\n\n  BN.prototype.copy = function copy (dest) {\n    dest.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      dest.words[i] = this.words[i];\n    }\n    dest.length = this.length;\n    dest.negative = this.negative;\n    dest.red = this.red;\n  };\n\n  BN.prototype.clone = function clone () {\n    var r = new BN(null);\n    this.copy(r);\n    return r;\n  };\n\n  BN.prototype._expand = function _expand (size) {\n    while (this.length < size) {\n      this.words[this.length++] = 0;\n    }\n    return this;\n  };\n\n  // Remove leading `0` from `this`\n  BN.prototype.strip = function strip () {\n    while (this.length > 1 && this.words[this.length - 1] === 0) {\n      this.length--;\n    }\n    return this._normSign();\n  };\n\n  BN.prototype._normSign = function _normSign () {\n    // -0 = 0\n    if (this.length === 1 && this.words[0] === 0) {\n      this.negative = 0;\n    }\n    return this;\n  };\n\n  BN.prototype.inspect = function inspect () {\n    return (this.red ? '<BN-R: ' : '<BN: ') + this.toString(16) + '>';\n  };\n\n  /*\n\n  var zeros = [];\n  var groupSizes = [];\n  var groupBases = [];\n\n  var s = '';\n  var i = -1;\n  while (++i < BN.wordSize) {\n    zeros[i] = s;\n    s += '0';\n  }\n  groupSizes[0] = 0;\n  groupSizes[1] = 0;\n  groupBases[0] = 0;\n  groupBases[1] = 0;\n  var base = 2 - 1;\n  while (++base < 36 + 1) {\n    var groupSize = 0;\n    var groupBase = 1;\n    while (groupBase < (1 << BN.wordSize) / base) {\n      groupBase *= base;\n      groupSize += 1;\n    }\n    groupSizes[base] = groupSize;\n    groupBases[base] = groupBase;\n  }\n\n  */\n\n  var zeros = [\n    '',\n    '0',\n    '00',\n    '000',\n    '0000',\n    '00000',\n    '000000',\n    '0000000',\n    '00000000',\n    '000000000',\n    '0000000000',\n    '00000000000',\n    '000000000000',\n    '0000000000000',\n    '00000000000000',\n    '000000000000000',\n    '0000000000000000',\n    '00000000000000000',\n    '000000000000000000',\n    '0000000000000000000',\n    '00000000000000000000',\n    '000000000000000000000',\n    '0000000000000000000000',\n    '00000000000000000000000',\n    '000000000000000000000000',\n    '0000000000000000000000000'\n  ];\n\n  var groupSizes = [\n    0, 0,\n    25, 16, 12, 11, 10, 9, 8,\n    8, 7, 7, 7, 7, 6, 6,\n    6, 6, 6, 6, 6, 5, 5,\n    5, 5, 5, 5, 5, 5, 5,\n    5, 5, 5, 5, 5, 5, 5\n  ];\n\n  var groupBases = [\n    0, 0,\n    33554432, 43046721, 16777216, 48828125, 60466176, 40353607, 16777216,\n    43046721, 10000000, 19487171, 35831808, 62748517, 7529536, 11390625,\n    16777216, 24137569, 34012224, 47045881, 64000000, 4084101, 5153632,\n    6436343, 7962624, 9765625, 11881376, 14348907, 17210368, 20511149,\n    24300000, 28629151, 33554432, 39135393, 45435424, 52521875, 60466176\n  ];\n\n  BN.prototype.toString = function toString (base, padding) {\n    base = base || 10;\n    padding = padding | 0 || 1;\n\n    var out;\n    if (base === 16 || base === 'hex') {\n      out = '';\n      var off = 0;\n      var carry = 0;\n      for (var i = 0; i < this.length; i++) {\n        var w = this.words[i];\n        var word = (((w << off) | carry) & 0xffffff).toString(16);\n        carry = (w >>> (24 - off)) & 0xffffff;\n        if (carry !== 0 || i !== this.length - 1) {\n          out = zeros[6 - word.length] + word + out;\n        } else {\n          out = word + out;\n        }\n        off += 2;\n        if (off >= 26) {\n          off -= 26;\n          i--;\n        }\n      }\n      if (carry !== 0) {\n        out = carry.toString(16) + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    if (base === (base | 0) && base >= 2 && base <= 36) {\n      // var groupSize = Math.floor(BN.wordSize * Math.LN2 / Math.log(base));\n      var groupSize = groupSizes[base];\n      // var groupBase = Math.pow(base, groupSize);\n      var groupBase = groupBases[base];\n      out = '';\n      var c = this.clone();\n      c.negative = 0;\n      while (!c.isZero()) {\n        var r = c.modn(groupBase).toString(base);\n        c = c.idivn(groupBase);\n\n        if (!c.isZero()) {\n          out = zeros[groupSize - r.length] + r + out;\n        } else {\n          out = r + out;\n        }\n      }\n      if (this.isZero()) {\n        out = '0' + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    assert(false, 'Base should be between 2 and 36');\n  };\n\n  BN.prototype.toNumber = function toNumber () {\n    var ret = this.words[0];\n    if (this.length === 2) {\n      ret += this.words[1] * 0x4000000;\n    } else if (this.length === 3 && this.words[2] === 0x01) {\n      // NOTE: at this stage it is known that the top bit is set\n      ret += 0x10000000000000 + (this.words[1] * 0x4000000);\n    } else if (this.length > 2) {\n      assert(false, 'Number can only safely store up to 53 bits');\n    }\n    return (this.negative !== 0) ? -ret : ret;\n  };\n\n  BN.prototype.toJSON = function toJSON () {\n    return this.toString(16);\n  };\n\n  BN.prototype.toBuffer = function toBuffer (endian, length) {\n    assert(typeof Buffer !== 'undefined');\n    return this.toArrayLike(Buffer, endian, length);\n  };\n\n  BN.prototype.toArray = function toArray (endian, length) {\n    return this.toArrayLike(Array, endian, length);\n  };\n\n  BN.prototype.toArrayLike = function toArrayLike (ArrayType, endian, length) {\n    var byteLength = this.byteLength();\n    var reqLength = length || Math.max(1, byteLength);\n    assert(byteLength <= reqLength, 'byte array longer than desired length');\n    assert(reqLength > 0, 'Requested array length <= 0');\n\n    this.strip();\n    var littleEndian = endian === 'le';\n    var res = new ArrayType(reqLength);\n\n    var b, i;\n    var q = this.clone();\n    if (!littleEndian) {\n      // Assume big-endian\n      for (i = 0; i < reqLength - byteLength; i++) {\n        res[i] = 0;\n      }\n\n      for (i = 0; !q.isZero(); i++) {\n        b = q.andln(0xff);\n        q.iushrn(8);\n\n        res[reqLength - i - 1] = b;\n      }\n    } else {\n      for (i = 0; !q.isZero(); i++) {\n        b = q.andln(0xff);\n        q.iushrn(8);\n\n        res[i] = b;\n      }\n\n      for (; i < reqLength; i++) {\n        res[i] = 0;\n      }\n    }\n\n    return res;\n  };\n\n  if (Math.clz32) {\n    BN.prototype._countBits = function _countBits (w) {\n      return 32 - Math.clz32(w);\n    };\n  } else {\n    BN.prototype._countBits = function _countBits (w) {\n      var t = w;\n      var r = 0;\n      if (t >= 0x1000) {\n        r += 13;\n        t >>>= 13;\n      }\n      if (t >= 0x40) {\n        r += 7;\n        t >>>= 7;\n      }\n      if (t >= 0x8) {\n        r += 4;\n        t >>>= 4;\n      }\n      if (t >= 0x02) {\n        r += 2;\n        t >>>= 2;\n      }\n      return r + t;\n    };\n  }\n\n  BN.prototype._zeroBits = function _zeroBits (w) {\n    // Short-cut\n    if (w === 0) return 26;\n\n    var t = w;\n    var r = 0;\n    if ((t & 0x1fff) === 0) {\n      r += 13;\n      t >>>= 13;\n    }\n    if ((t & 0x7f) === 0) {\n      r += 7;\n      t >>>= 7;\n    }\n    if ((t & 0xf) === 0) {\n      r += 4;\n      t >>>= 4;\n    }\n    if ((t & 0x3) === 0) {\n      r += 2;\n      t >>>= 2;\n    }\n    if ((t & 0x1) === 0) {\n      r++;\n    }\n    return r;\n  };\n\n  // Return number of used bits in a BN\n  BN.prototype.bitLength = function bitLength () {\n    var w = this.words[this.length - 1];\n    var hi = this._countBits(w);\n    return (this.length - 1) * 26 + hi;\n  };\n\n  function toBitArray (num) {\n    var w = new Array(num.bitLength());\n\n    for (var bit = 0; bit < w.length; bit++) {\n      var off = (bit / 26) | 0;\n      var wbit = bit % 26;\n\n      w[bit] = (num.words[off] & (1 << wbit)) >>> wbit;\n    }\n\n    return w;\n  }\n\n  // Number of trailing zero bits\n  BN.prototype.zeroBits = function zeroBits () {\n    if (this.isZero()) return 0;\n\n    var r = 0;\n    for (var i = 0; i < this.length; i++) {\n      var b = this._zeroBits(this.words[i]);\n      r += b;\n      if (b !== 26) break;\n    }\n    return r;\n  };\n\n  BN.prototype.byteLength = function byteLength () {\n    return Math.ceil(this.bitLength() / 8);\n  };\n\n  BN.prototype.toTwos = function toTwos (width) {\n    if (this.negative !== 0) {\n      return this.abs().inotn(width).iaddn(1);\n    }\n    return this.clone();\n  };\n\n  BN.prototype.fromTwos = function fromTwos (width) {\n    if (this.testn(width - 1)) {\n      return this.notn(width).iaddn(1).ineg();\n    }\n    return this.clone();\n  };\n\n  BN.prototype.isNeg = function isNeg () {\n    return this.negative !== 0;\n  };\n\n  // Return negative clone of `this`\n  BN.prototype.neg = function neg () {\n    return this.clone().ineg();\n  };\n\n  BN.prototype.ineg = function ineg () {\n    if (!this.isZero()) {\n      this.negative ^= 1;\n    }\n\n    return this;\n  };\n\n  // Or `num` with `this` in-place\n  BN.prototype.iuor = function iuor (num) {\n    while (this.length < num.length) {\n      this.words[this.length++] = 0;\n    }\n\n    for (var i = 0; i < num.length; i++) {\n      this.words[i] = this.words[i] | num.words[i];\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.ior = function ior (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuor(num);\n  };\n\n  // Or `num` with `this`\n  BN.prototype.or = function or (num) {\n    if (this.length > num.length) return this.clone().ior(num);\n    return num.clone().ior(this);\n  };\n\n  BN.prototype.uor = function uor (num) {\n    if (this.length > num.length) return this.clone().iuor(num);\n    return num.clone().iuor(this);\n  };\n\n  // And `num` with `this` in-place\n  BN.prototype.iuand = function iuand (num) {\n    // b = min-length(num, this)\n    var b;\n    if (this.length > num.length) {\n      b = num;\n    } else {\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = this.words[i] & num.words[i];\n    }\n\n    this.length = b.length;\n\n    return this.strip();\n  };\n\n  BN.prototype.iand = function iand (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuand(num);\n  };\n\n  // And `num` with `this`\n  BN.prototype.and = function and (num) {\n    if (this.length > num.length) return this.clone().iand(num);\n    return num.clone().iand(this);\n  };\n\n  BN.prototype.uand = function uand (num) {\n    if (this.length > num.length) return this.clone().iuand(num);\n    return num.clone().iuand(this);\n  };\n\n  // Xor `num` with `this` in-place\n  BN.prototype.iuxor = function iuxor (num) {\n    // a.length > b.length\n    var a;\n    var b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = a.words[i] ^ b.words[i];\n    }\n\n    if (this !== a) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = a.length;\n\n    return this.strip();\n  };\n\n  BN.prototype.ixor = function ixor (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuxor(num);\n  };\n\n  // Xor `num` with `this`\n  BN.prototype.xor = function xor (num) {\n    if (this.length > num.length) return this.clone().ixor(num);\n    return num.clone().ixor(this);\n  };\n\n  BN.prototype.uxor = function uxor (num) {\n    if (this.length > num.length) return this.clone().iuxor(num);\n    return num.clone().iuxor(this);\n  };\n\n  // Not ``this`` with ``width`` bitwidth\n  BN.prototype.inotn = function inotn (width) {\n    assert(typeof width === 'number' && width >= 0);\n\n    var bytesNeeded = Math.ceil(width / 26) | 0;\n    var bitsLeft = width % 26;\n\n    // Extend the buffer with leading zeroes\n    this._expand(bytesNeeded);\n\n    if (bitsLeft > 0) {\n      bytesNeeded--;\n    }\n\n    // Handle complete words\n    for (var i = 0; i < bytesNeeded; i++) {\n      this.words[i] = ~this.words[i] & 0x3ffffff;\n    }\n\n    // Handle the residue\n    if (bitsLeft > 0) {\n      this.words[i] = ~this.words[i] & (0x3ffffff >> (26 - bitsLeft));\n    }\n\n    // And remove leading zeroes\n    return this.strip();\n  };\n\n  BN.prototype.notn = function notn (width) {\n    return this.clone().inotn(width);\n  };\n\n  // Set `bit` of `this`\n  BN.prototype.setn = function setn (bit, val) {\n    assert(typeof bit === 'number' && bit >= 0);\n\n    var off = (bit / 26) | 0;\n    var wbit = bit % 26;\n\n    this._expand(off + 1);\n\n    if (val) {\n      this.words[off] = this.words[off] | (1 << wbit);\n    } else {\n      this.words[off] = this.words[off] & ~(1 << wbit);\n    }\n\n    return this.strip();\n  };\n\n  // Add `num` to `this` in-place\n  BN.prototype.iadd = function iadd (num) {\n    var r;\n\n    // negative + positive\n    if (this.negative !== 0 && num.negative === 0) {\n      this.negative = 0;\n      r = this.isub(num);\n      this.negative ^= 1;\n      return this._normSign();\n\n    // positive + negative\n    } else if (this.negative === 0 && num.negative !== 0) {\n      num.negative = 0;\n      r = this.isub(num);\n      num.negative = 1;\n      return r._normSign();\n    }\n\n    // a.length > b.length\n    var a, b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) + (b.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n\n    this.length = a.length;\n    if (carry !== 0) {\n      this.words[this.length] = carry;\n      this.length++;\n    // Copy the rest of the words\n    } else if (a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    return this;\n  };\n\n  // Add `num` to `this`\n  BN.prototype.add = function add (num) {\n    var res;\n    if (num.negative !== 0 && this.negative === 0) {\n      num.negative = 0;\n      res = this.sub(num);\n      num.negative ^= 1;\n      return res;\n    } else if (num.negative === 0 && this.negative !== 0) {\n      this.negative = 0;\n      res = num.sub(this);\n      this.negative = 1;\n      return res;\n    }\n\n    if (this.length > num.length) return this.clone().iadd(num);\n\n    return num.clone().iadd(this);\n  };\n\n  // Subtract `num` from `this` in-place\n  BN.prototype.isub = function isub (num) {\n    // this - (-num) = this + num\n    if (num.negative !== 0) {\n      num.negative = 0;\n      var r = this.iadd(num);\n      num.negative = 1;\n      return r._normSign();\n\n    // -this - num = -(this + num)\n    } else if (this.negative !== 0) {\n      this.negative = 0;\n      this.iadd(num);\n      this.negative = 1;\n      return this._normSign();\n    }\n\n    // At this point both numbers are positive\n    var cmp = this.cmp(num);\n\n    // Optimization - zeroify\n    if (cmp === 0) {\n      this.negative = 0;\n      this.length = 1;\n      this.words[0] = 0;\n      return this;\n    }\n\n    // a > b\n    var a, b;\n    if (cmp > 0) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) - (b.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n\n    // Copy rest of the words\n    if (carry === 0 && i < a.length && a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = Math.max(this.length, i);\n\n    if (a !== this) {\n      this.negative = 1;\n    }\n\n    return this.strip();\n  };\n\n  // Subtract `num` from `this`\n  BN.prototype.sub = function sub (num) {\n    return this.clone().isub(num);\n  };\n\n  function smallMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    var len = (self.length + num.length) | 0;\n    out.length = len;\n    len = (len - 1) | 0;\n\n    // Peel one iteration (compiler can't do it, because of code complexity)\n    var a = self.words[0] | 0;\n    var b = num.words[0] | 0;\n    var r = a * b;\n\n    var lo = r & 0x3ffffff;\n    var carry = (r / 0x4000000) | 0;\n    out.words[0] = lo;\n\n    for (var k = 1; k < len; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = carry >>> 26;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = (k - j) | 0;\n        a = self.words[i] | 0;\n        b = num.words[j] | 0;\n        r = a * b + rword;\n        ncarry += (r / 0x4000000) | 0;\n        rword = r & 0x3ffffff;\n      }\n      out.words[k] = rword | 0;\n      carry = ncarry | 0;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry | 0;\n    } else {\n      out.length--;\n    }\n\n    return out.strip();\n  }\n\n  // TODO(indutny): it may be reasonable to omit it for users who don't need\n  // to work with 256-bit numbers, otherwise it gives 20% improvement for 256-bit\n  // multiplication (like elliptic secp256k1).\n  var comb10MulTo = function comb10MulTo (self, num, out) {\n    var a = self.words;\n    var b = num.words;\n    var o = out.words;\n    var c = 0;\n    var lo;\n    var mid;\n    var hi;\n    var a0 = a[0] | 0;\n    var al0 = a0 & 0x1fff;\n    var ah0 = a0 >>> 13;\n    var a1 = a[1] | 0;\n    var al1 = a1 & 0x1fff;\n    var ah1 = a1 >>> 13;\n    var a2 = a[2] | 0;\n    var al2 = a2 & 0x1fff;\n    var ah2 = a2 >>> 13;\n    var a3 = a[3] | 0;\n    var al3 = a3 & 0x1fff;\n    var ah3 = a3 >>> 13;\n    var a4 = a[4] | 0;\n    var al4 = a4 & 0x1fff;\n    var ah4 = a4 >>> 13;\n    var a5 = a[5] | 0;\n    var al5 = a5 & 0x1fff;\n    var ah5 = a5 >>> 13;\n    var a6 = a[6] | 0;\n    var al6 = a6 & 0x1fff;\n    var ah6 = a6 >>> 13;\n    var a7 = a[7] | 0;\n    var al7 = a7 & 0x1fff;\n    var ah7 = a7 >>> 13;\n    var a8 = a[8] | 0;\n    var al8 = a8 & 0x1fff;\n    var ah8 = a8 >>> 13;\n    var a9 = a[9] | 0;\n    var al9 = a9 & 0x1fff;\n    var ah9 = a9 >>> 13;\n    var b0 = b[0] | 0;\n    var bl0 = b0 & 0x1fff;\n    var bh0 = b0 >>> 13;\n    var b1 = b[1] | 0;\n    var bl1 = b1 & 0x1fff;\n    var bh1 = b1 >>> 13;\n    var b2 = b[2] | 0;\n    var bl2 = b2 & 0x1fff;\n    var bh2 = b2 >>> 13;\n    var b3 = b[3] | 0;\n    var bl3 = b3 & 0x1fff;\n    var bh3 = b3 >>> 13;\n    var b4 = b[4] | 0;\n    var bl4 = b4 & 0x1fff;\n    var bh4 = b4 >>> 13;\n    var b5 = b[5] | 0;\n    var bl5 = b5 & 0x1fff;\n    var bh5 = b5 >>> 13;\n    var b6 = b[6] | 0;\n    var bl6 = b6 & 0x1fff;\n    var bh6 = b6 >>> 13;\n    var b7 = b[7] | 0;\n    var bl7 = b7 & 0x1fff;\n    var bh7 = b7 >>> 13;\n    var b8 = b[8] | 0;\n    var bl8 = b8 & 0x1fff;\n    var bh8 = b8 >>> 13;\n    var b9 = b[9] | 0;\n    var bl9 = b9 & 0x1fff;\n    var bh9 = b9 >>> 13;\n\n    out.negative = self.negative ^ num.negative;\n    out.length = 19;\n    /* k = 0 */\n    lo = Math.imul(al0, bl0);\n    mid = Math.imul(al0, bh0);\n    mid = (mid + Math.imul(ah0, bl0)) | 0;\n    hi = Math.imul(ah0, bh0);\n    var w0 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w0 >>> 26)) | 0;\n    w0 &= 0x3ffffff;\n    /* k = 1 */\n    lo = Math.imul(al1, bl0);\n    mid = Math.imul(al1, bh0);\n    mid = (mid + Math.imul(ah1, bl0)) | 0;\n    hi = Math.imul(ah1, bh0);\n    lo = (lo + Math.imul(al0, bl1)) | 0;\n    mid = (mid + Math.imul(al0, bh1)) | 0;\n    mid = (mid + Math.imul(ah0, bl1)) | 0;\n    hi = (hi + Math.imul(ah0, bh1)) | 0;\n    var w1 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w1 >>> 26)) | 0;\n    w1 &= 0x3ffffff;\n    /* k = 2 */\n    lo = Math.imul(al2, bl0);\n    mid = Math.imul(al2, bh0);\n    mid = (mid + Math.imul(ah2, bl0)) | 0;\n    hi = Math.imul(ah2, bh0);\n    lo = (lo + Math.imul(al1, bl1)) | 0;\n    mid = (mid + Math.imul(al1, bh1)) | 0;\n    mid = (mid + Math.imul(ah1, bl1)) | 0;\n    hi = (hi + Math.imul(ah1, bh1)) | 0;\n    lo = (lo + Math.imul(al0, bl2)) | 0;\n    mid = (mid + Math.imul(al0, bh2)) | 0;\n    mid = (mid + Math.imul(ah0, bl2)) | 0;\n    hi = (hi + Math.imul(ah0, bh2)) | 0;\n    var w2 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w2 >>> 26)) | 0;\n    w2 &= 0x3ffffff;\n    /* k = 3 */\n    lo = Math.imul(al3, bl0);\n    mid = Math.imul(al3, bh0);\n    mid = (mid + Math.imul(ah3, bl0)) | 0;\n    hi = Math.imul(ah3, bh0);\n    lo = (lo + Math.imul(al2, bl1)) | 0;\n    mid = (mid + Math.imul(al2, bh1)) | 0;\n    mid = (mid + Math.imul(ah2, bl1)) | 0;\n    hi = (hi + Math.imul(ah2, bh1)) | 0;\n    lo = (lo + Math.imul(al1, bl2)) | 0;\n    mid = (mid + Math.imul(al1, bh2)) | 0;\n    mid = (mid + Math.imul(ah1, bl2)) | 0;\n    hi = (hi + Math.imul(ah1, bh2)) | 0;\n    lo = (lo + Math.imul(al0, bl3)) | 0;\n    mid = (mid + Math.imul(al0, bh3)) | 0;\n    mid = (mid + Math.imul(ah0, bl3)) | 0;\n    hi = (hi + Math.imul(ah0, bh3)) | 0;\n    var w3 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w3 >>> 26)) | 0;\n    w3 &= 0x3ffffff;\n    /* k = 4 */\n    lo = Math.imul(al4, bl0);\n    mid = Math.imul(al4, bh0);\n    mid = (mid + Math.imul(ah4, bl0)) | 0;\n    hi = Math.imul(ah4, bh0);\n    lo = (lo + Math.imul(al3, bl1)) | 0;\n    mid = (mid + Math.imul(al3, bh1)) | 0;\n    mid = (mid + Math.imul(ah3, bl1)) | 0;\n    hi = (hi + Math.imul(ah3, bh1)) | 0;\n    lo = (lo + Math.imul(al2, bl2)) | 0;\n    mid = (mid + Math.imul(al2, bh2)) | 0;\n    mid = (mid + Math.imul(ah2, bl2)) | 0;\n    hi = (hi + Math.imul(ah2, bh2)) | 0;\n    lo = (lo + Math.imul(al1, bl3)) | 0;\n    mid = (mid + Math.imul(al1, bh3)) | 0;\n    mid = (mid + Math.imul(ah1, bl3)) | 0;\n    hi = (hi + Math.imul(ah1, bh3)) | 0;\n    lo = (lo + Math.imul(al0, bl4)) | 0;\n    mid = (mid + Math.imul(al0, bh4)) | 0;\n    mid = (mid + Math.imul(ah0, bl4)) | 0;\n    hi = (hi + Math.imul(ah0, bh4)) | 0;\n    var w4 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w4 >>> 26)) | 0;\n    w4 &= 0x3ffffff;\n    /* k = 5 */\n    lo = Math.imul(al5, bl0);\n    mid = Math.imul(al5, bh0);\n    mid = (mid + Math.imul(ah5, bl0)) | 0;\n    hi = Math.imul(ah5, bh0);\n    lo = (lo + Math.imul(al4, bl1)) | 0;\n    mid = (mid + Math.imul(al4, bh1)) | 0;\n    mid = (mid + Math.imul(ah4, bl1)) | 0;\n    hi = (hi + Math.imul(ah4, bh1)) | 0;\n    lo = (lo + Math.imul(al3, bl2)) | 0;\n    mid = (mid + Math.imul(al3, bh2)) | 0;\n    mid = (mid + Math.imul(ah3, bl2)) | 0;\n    hi = (hi + Math.imul(ah3, bh2)) | 0;\n    lo = (lo + Math.imul(al2, bl3)) | 0;\n    mid = (mid + Math.imul(al2, bh3)) | 0;\n    mid = (mid + Math.imul(ah2, bl3)) | 0;\n    hi = (hi + Math.imul(ah2, bh3)) | 0;\n    lo = (lo + Math.imul(al1, bl4)) | 0;\n    mid = (mid + Math.imul(al1, bh4)) | 0;\n    mid = (mid + Math.imul(ah1, bl4)) | 0;\n    hi = (hi + Math.imul(ah1, bh4)) | 0;\n    lo = (lo + Math.imul(al0, bl5)) | 0;\n    mid = (mid + Math.imul(al0, bh5)) | 0;\n    mid = (mid + Math.imul(ah0, bl5)) | 0;\n    hi = (hi + Math.imul(ah0, bh5)) | 0;\n    var w5 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w5 >>> 26)) | 0;\n    w5 &= 0x3ffffff;\n    /* k = 6 */\n    lo = Math.imul(al6, bl0);\n    mid = Math.imul(al6, bh0);\n    mid = (mid + Math.imul(ah6, bl0)) | 0;\n    hi = Math.imul(ah6, bh0);\n    lo = (lo + Math.imul(al5, bl1)) | 0;\n    mid = (mid + Math.imul(al5, bh1)) | 0;\n    mid = (mid + Math.imul(ah5, bl1)) | 0;\n    hi = (hi + Math.imul(ah5, bh1)) | 0;\n    lo = (lo + Math.imul(al4, bl2)) | 0;\n    mid = (mid + Math.imul(al4, bh2)) | 0;\n    mid = (mid + Math.imul(ah4, bl2)) | 0;\n    hi = (hi + Math.imul(ah4, bh2)) | 0;\n    lo = (lo + Math.imul(al3, bl3)) | 0;\n    mid = (mid + Math.imul(al3, bh3)) | 0;\n    mid = (mid + Math.imul(ah3, bl3)) | 0;\n    hi = (hi + Math.imul(ah3, bh3)) | 0;\n    lo = (lo + Math.imul(al2, bl4)) | 0;\n    mid = (mid + Math.imul(al2, bh4)) | 0;\n    mid = (mid + Math.imul(ah2, bl4)) | 0;\n    hi = (hi + Math.imul(ah2, bh4)) | 0;\n    lo = (lo + Math.imul(al1, bl5)) | 0;\n    mid = (mid + Math.imul(al1, bh5)) | 0;\n    mid = (mid + Math.imul(ah1, bl5)) | 0;\n    hi = (hi + Math.imul(ah1, bh5)) | 0;\n    lo = (lo + Math.imul(al0, bl6)) | 0;\n    mid = (mid + Math.imul(al0, bh6)) | 0;\n    mid = (mid + Math.imul(ah0, bl6)) | 0;\n    hi = (hi + Math.imul(ah0, bh6)) | 0;\n    var w6 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w6 >>> 26)) | 0;\n    w6 &= 0x3ffffff;\n    /* k = 7 */\n    lo = Math.imul(al7, bl0);\n    mid = Math.imul(al7, bh0);\n    mid = (mid + Math.imul(ah7, bl0)) | 0;\n    hi = Math.imul(ah7, bh0);\n    lo = (lo + Math.imul(al6, bl1)) | 0;\n    mid = (mid + Math.imul(al6, bh1)) | 0;\n    mid = (mid + Math.imul(ah6, bl1)) | 0;\n    hi = (hi + Math.imul(ah6, bh1)) | 0;\n    lo = (lo + Math.imul(al5, bl2)) | 0;\n    mid = (mid + Math.imul(al5, bh2)) | 0;\n    mid = (mid + Math.imul(ah5, bl2)) | 0;\n    hi = (hi + Math.imul(ah5, bh2)) | 0;\n    lo = (lo + Math.imul(al4, bl3)) | 0;\n    mid = (mid + Math.imul(al4, bh3)) | 0;\n    mid = (mid + Math.imul(ah4, bl3)) | 0;\n    hi = (hi + Math.imul(ah4, bh3)) | 0;\n    lo = (lo + Math.imul(al3, bl4)) | 0;\n    mid = (mid + Math.imul(al3, bh4)) | 0;\n    mid = (mid + Math.imul(ah3, bl4)) | 0;\n    hi = (hi + Math.imul(ah3, bh4)) | 0;\n    lo = (lo + Math.imul(al2, bl5)) | 0;\n    mid = (mid + Math.imul(al2, bh5)) | 0;\n    mid = (mid + Math.imul(ah2, bl5)) | 0;\n    hi = (hi + Math.imul(ah2, bh5)) | 0;\n    lo = (lo + Math.imul(al1, bl6)) | 0;\n    mid = (mid + Math.imul(al1, bh6)) | 0;\n    mid = (mid + Math.imul(ah1, bl6)) | 0;\n    hi = (hi + Math.imul(ah1, bh6)) | 0;\n    lo = (lo + Math.imul(al0, bl7)) | 0;\n    mid = (mid + Math.imul(al0, bh7)) | 0;\n    mid = (mid + Math.imul(ah0, bl7)) | 0;\n    hi = (hi + Math.imul(ah0, bh7)) | 0;\n    var w7 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w7 >>> 26)) | 0;\n    w7 &= 0x3ffffff;\n    /* k = 8 */\n    lo = Math.imul(al8, bl0);\n    mid = Math.imul(al8, bh0);\n    mid = (mid + Math.imul(ah8, bl0)) | 0;\n    hi = Math.imul(ah8, bh0);\n    lo = (lo + Math.imul(al7, bl1)) | 0;\n    mid = (mid + Math.imul(al7, bh1)) | 0;\n    mid = (mid + Math.imul(ah7, bl1)) | 0;\n    hi = (hi + Math.imul(ah7, bh1)) | 0;\n    lo = (lo + Math.imul(al6, bl2)) | 0;\n    mid = (mid + Math.imul(al6, bh2)) | 0;\n    mid = (mid + Math.imul(ah6, bl2)) | 0;\n    hi = (hi + Math.imul(ah6, bh2)) | 0;\n    lo = (lo + Math.imul(al5, bl3)) | 0;\n    mid = (mid + Math.imul(al5, bh3)) | 0;\n    mid = (mid + Math.imul(ah5, bl3)) | 0;\n    hi = (hi + Math.imul(ah5, bh3)) | 0;\n    lo = (lo + Math.imul(al4, bl4)) | 0;\n    mid = (mid + Math.imul(al4, bh4)) | 0;\n    mid = (mid + Math.imul(ah4, bl4)) | 0;\n    hi = (hi + Math.imul(ah4, bh4)) | 0;\n    lo = (lo + Math.imul(al3, bl5)) | 0;\n    mid = (mid + Math.imul(al3, bh5)) | 0;\n    mid = (mid + Math.imul(ah3, bl5)) | 0;\n    hi = (hi + Math.imul(ah3, bh5)) | 0;\n    lo = (lo + Math.imul(al2, bl6)) | 0;\n    mid = (mid + Math.imul(al2, bh6)) | 0;\n    mid = (mid + Math.imul(ah2, bl6)) | 0;\n    hi = (hi + Math.imul(ah2, bh6)) | 0;\n    lo = (lo + Math.imul(al1, bl7)) | 0;\n    mid = (mid + Math.imul(al1, bh7)) | 0;\n    mid = (mid + Math.imul(ah1, bl7)) | 0;\n    hi = (hi + Math.imul(ah1, bh7)) | 0;\n    lo = (lo + Math.imul(al0, bl8)) | 0;\n    mid = (mid + Math.imul(al0, bh8)) | 0;\n    mid = (mid + Math.imul(ah0, bl8)) | 0;\n    hi = (hi + Math.imul(ah0, bh8)) | 0;\n    var w8 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w8 >>> 26)) | 0;\n    w8 &= 0x3ffffff;\n    /* k = 9 */\n    lo = Math.imul(al9, bl0);\n    mid = Math.imul(al9, bh0);\n    mid = (mid + Math.imul(ah9, bl0)) | 0;\n    hi = Math.imul(ah9, bh0);\n    lo = (lo + Math.imul(al8, bl1)) | 0;\n    mid = (mid + Math.imul(al8, bh1)) | 0;\n    mid = (mid + Math.imul(ah8, bl1)) | 0;\n    hi = (hi + Math.imul(ah8, bh1)) | 0;\n    lo = (lo + Math.imul(al7, bl2)) | 0;\n    mid = (mid + Math.imul(al7, bh2)) | 0;\n    mid = (mid + Math.imul(ah7, bl2)) | 0;\n    hi = (hi + Math.imul(ah7, bh2)) | 0;\n    lo = (lo + Math.imul(al6, bl3)) | 0;\n    mid = (mid + Math.imul(al6, bh3)) | 0;\n    mid = (mid + Math.imul(ah6, bl3)) | 0;\n    hi = (hi + Math.imul(ah6, bh3)) | 0;\n    lo = (lo + Math.imul(al5, bl4)) | 0;\n    mid = (mid + Math.imul(al5, bh4)) | 0;\n    mid = (mid + Math.imul(ah5, bl4)) | 0;\n    hi = (hi + Math.imul(ah5, bh4)) | 0;\n    lo = (lo + Math.imul(al4, bl5)) | 0;\n    mid = (mid + Math.imul(al4, bh5)) | 0;\n    mid = (mid + Math.imul(ah4, bl5)) | 0;\n    hi = (hi + Math.imul(ah4, bh5)) | 0;\n    lo = (lo + Math.imul(al3, bl6)) | 0;\n    mid = (mid + Math.imul(al3, bh6)) | 0;\n    mid = (mid + Math.imul(ah3, bl6)) | 0;\n    hi = (hi + Math.imul(ah3, bh6)) | 0;\n    lo = (lo + Math.imul(al2, bl7)) | 0;\n    mid = (mid + Math.imul(al2, bh7)) | 0;\n    mid = (mid + Math.imul(ah2, bl7)) | 0;\n    hi = (hi + Math.imul(ah2, bh7)) | 0;\n    lo = (lo + Math.imul(al1, bl8)) | 0;\n    mid = (mid + Math.imul(al1, bh8)) | 0;\n    mid = (mid + Math.imul(ah1, bl8)) | 0;\n    hi = (hi + Math.imul(ah1, bh8)) | 0;\n    lo = (lo + Math.imul(al0, bl9)) | 0;\n    mid = (mid + Math.imul(al0, bh9)) | 0;\n    mid = (mid + Math.imul(ah0, bl9)) | 0;\n    hi = (hi + Math.imul(ah0, bh9)) | 0;\n    var w9 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w9 >>> 26)) | 0;\n    w9 &= 0x3ffffff;\n    /* k = 10 */\n    lo = Math.imul(al9, bl1);\n    mid = Math.imul(al9, bh1);\n    mid = (mid + Math.imul(ah9, bl1)) | 0;\n    hi = Math.imul(ah9, bh1);\n    lo = (lo + Math.imul(al8, bl2)) | 0;\n    mid = (mid + Math.imul(al8, bh2)) | 0;\n    mid = (mid + Math.imul(ah8, bl2)) | 0;\n    hi = (hi + Math.imul(ah8, bh2)) | 0;\n    lo = (lo + Math.imul(al7, bl3)) | 0;\n    mid = (mid + Math.imul(al7, bh3)) | 0;\n    mid = (mid + Math.imul(ah7, bl3)) | 0;\n    hi = (hi + Math.imul(ah7, bh3)) | 0;\n    lo = (lo + Math.imul(al6, bl4)) | 0;\n    mid = (mid + Math.imul(al6, bh4)) | 0;\n    mid = (mid + Math.imul(ah6, bl4)) | 0;\n    hi = (hi + Math.imul(ah6, bh4)) | 0;\n    lo = (lo + Math.imul(al5, bl5)) | 0;\n    mid = (mid + Math.imul(al5, bh5)) | 0;\n    mid = (mid + Math.imul(ah5, bl5)) | 0;\n    hi = (hi + Math.imul(ah5, bh5)) | 0;\n    lo = (lo + Math.imul(al4, bl6)) | 0;\n    mid = (mid + Math.imul(al4, bh6)) | 0;\n    mid = (mid + Math.imul(ah4, bl6)) | 0;\n    hi = (hi + Math.imul(ah4, bh6)) | 0;\n    lo = (lo + Math.imul(al3, bl7)) | 0;\n    mid = (mid + Math.imul(al3, bh7)) | 0;\n    mid = (mid + Math.imul(ah3, bl7)) | 0;\n    hi = (hi + Math.imul(ah3, bh7)) | 0;\n    lo = (lo + Math.imul(al2, bl8)) | 0;\n    mid = (mid + Math.imul(al2, bh8)) | 0;\n    mid = (mid + Math.imul(ah2, bl8)) | 0;\n    hi = (hi + Math.imul(ah2, bh8)) | 0;\n    lo = (lo + Math.imul(al1, bl9)) | 0;\n    mid = (mid + Math.imul(al1, bh9)) | 0;\n    mid = (mid + Math.imul(ah1, bl9)) | 0;\n    hi = (hi + Math.imul(ah1, bh9)) | 0;\n    var w10 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w10 >>> 26)) | 0;\n    w10 &= 0x3ffffff;\n    /* k = 11 */\n    lo = Math.imul(al9, bl2);\n    mid = Math.imul(al9, bh2);\n    mid = (mid + Math.imul(ah9, bl2)) | 0;\n    hi = Math.imul(ah9, bh2);\n    lo = (lo + Math.imul(al8, bl3)) | 0;\n    mid = (mid + Math.imul(al8, bh3)) | 0;\n    mid = (mid + Math.imul(ah8, bl3)) | 0;\n    hi = (hi + Math.imul(ah8, bh3)) | 0;\n    lo = (lo + Math.imul(al7, bl4)) | 0;\n    mid = (mid + Math.imul(al7, bh4)) | 0;\n    mid = (mid + Math.imul(ah7, bl4)) | 0;\n    hi = (hi + Math.imul(ah7, bh4)) | 0;\n    lo = (lo + Math.imul(al6, bl5)) | 0;\n    mid = (mid + Math.imul(al6, bh5)) | 0;\n    mid = (mid + Math.imul(ah6, bl5)) | 0;\n    hi = (hi + Math.imul(ah6, bh5)) | 0;\n    lo = (lo + Math.imul(al5, bl6)) | 0;\n    mid = (mid + Math.imul(al5, bh6)) | 0;\n    mid = (mid + Math.imul(ah5, bl6)) | 0;\n    hi = (hi + Math.imul(ah5, bh6)) | 0;\n    lo = (lo + Math.imul(al4, bl7)) | 0;\n    mid = (mid + Math.imul(al4, bh7)) | 0;\n    mid = (mid + Math.imul(ah4, bl7)) | 0;\n    hi = (hi + Math.imul(ah4, bh7)) | 0;\n    lo = (lo + Math.imul(al3, bl8)) | 0;\n    mid = (mid + Math.imul(al3, bh8)) | 0;\n    mid = (mid + Math.imul(ah3, bl8)) | 0;\n    hi = (hi + Math.imul(ah3, bh8)) | 0;\n    lo = (lo + Math.imul(al2, bl9)) | 0;\n    mid = (mid + Math.imul(al2, bh9)) | 0;\n    mid = (mid + Math.imul(ah2, bl9)) | 0;\n    hi = (hi + Math.imul(ah2, bh9)) | 0;\n    var w11 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w11 >>> 26)) | 0;\n    w11 &= 0x3ffffff;\n    /* k = 12 */\n    lo = Math.imul(al9, bl3);\n    mid = Math.imul(al9, bh3);\n    mid = (mid + Math.imul(ah9, bl3)) | 0;\n    hi = Math.imul(ah9, bh3);\n    lo = (lo + Math.imul(al8, bl4)) | 0;\n    mid = (mid + Math.imul(al8, bh4)) | 0;\n    mid = (mid + Math.imul(ah8, bl4)) | 0;\n    hi = (hi + Math.imul(ah8, bh4)) | 0;\n    lo = (lo + Math.imul(al7, bl5)) | 0;\n    mid = (mid + Math.imul(al7, bh5)) | 0;\n    mid = (mid + Math.imul(ah7, bl5)) | 0;\n    hi = (hi + Math.imul(ah7, bh5)) | 0;\n    lo = (lo + Math.imul(al6, bl6)) | 0;\n    mid = (mid + Math.imul(al6, bh6)) | 0;\n    mid = (mid + Math.imul(ah6, bl6)) | 0;\n    hi = (hi + Math.imul(ah6, bh6)) | 0;\n    lo = (lo + Math.imul(al5, bl7)) | 0;\n    mid = (mid + Math.imul(al5, bh7)) | 0;\n    mid = (mid + Math.imul(ah5, bl7)) | 0;\n    hi = (hi + Math.imul(ah5, bh7)) | 0;\n    lo = (lo + Math.imul(al4, bl8)) | 0;\n    mid = (mid + Math.imul(al4, bh8)) | 0;\n    mid = (mid + Math.imul(ah4, bl8)) | 0;\n    hi = (hi + Math.imul(ah4, bh8)) | 0;\n    lo = (lo + Math.imul(al3, bl9)) | 0;\n    mid = (mid + Math.imul(al3, bh9)) | 0;\n    mid = (mid + Math.imul(ah3, bl9)) | 0;\n    hi = (hi + Math.imul(ah3, bh9)) | 0;\n    var w12 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w12 >>> 26)) | 0;\n    w12 &= 0x3ffffff;\n    /* k = 13 */\n    lo = Math.imul(al9, bl4);\n    mid = Math.imul(al9, bh4);\n    mid = (mid + Math.imul(ah9, bl4)) | 0;\n    hi = Math.imul(ah9, bh4);\n    lo = (lo + Math.imul(al8, bl5)) | 0;\n    mid = (mid + Math.imul(al8, bh5)) | 0;\n    mid = (mid + Math.imul(ah8, bl5)) | 0;\n    hi = (hi + Math.imul(ah8, bh5)) | 0;\n    lo = (lo + Math.imul(al7, bl6)) | 0;\n    mid = (mid + Math.imul(al7, bh6)) | 0;\n    mid = (mid + Math.imul(ah7, bl6)) | 0;\n    hi = (hi + Math.imul(ah7, bh6)) | 0;\n    lo = (lo + Math.imul(al6, bl7)) | 0;\n    mid = (mid + Math.imul(al6, bh7)) | 0;\n    mid = (mid + Math.imul(ah6, bl7)) | 0;\n    hi = (hi + Math.imul(ah6, bh7)) | 0;\n    lo = (lo + Math.imul(al5, bl8)) | 0;\n    mid = (mid + Math.imul(al5, bh8)) | 0;\n    mid = (mid + Math.imul(ah5, bl8)) | 0;\n    hi = (hi + Math.imul(ah5, bh8)) | 0;\n    lo = (lo + Math.imul(al4, bl9)) | 0;\n    mid = (mid + Math.imul(al4, bh9)) | 0;\n    mid = (mid + Math.imul(ah4, bl9)) | 0;\n    hi = (hi + Math.imul(ah4, bh9)) | 0;\n    var w13 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w13 >>> 26)) | 0;\n    w13 &= 0x3ffffff;\n    /* k = 14 */\n    lo = Math.imul(al9, bl5);\n    mid = Math.imul(al9, bh5);\n    mid = (mid + Math.imul(ah9, bl5)) | 0;\n    hi = Math.imul(ah9, bh5);\n    lo = (lo + Math.imul(al8, bl6)) | 0;\n    mid = (mid + Math.imul(al8, bh6)) | 0;\n    mid = (mid + Math.imul(ah8, bl6)) | 0;\n    hi = (hi + Math.imul(ah8, bh6)) | 0;\n    lo = (lo + Math.imul(al7, bl7)) | 0;\n    mid = (mid + Math.imul(al7, bh7)) | 0;\n    mid = (mid + Math.imul(ah7, bl7)) | 0;\n    hi = (hi + Math.imul(ah7, bh7)) | 0;\n    lo = (lo + Math.imul(al6, bl8)) | 0;\n    mid = (mid + Math.imul(al6, bh8)) | 0;\n    mid = (mid + Math.imul(ah6, bl8)) | 0;\n    hi = (hi + Math.imul(ah6, bh8)) | 0;\n    lo = (lo + Math.imul(al5, bl9)) | 0;\n    mid = (mid + Math.imul(al5, bh9)) | 0;\n    mid = (mid + Math.imul(ah5, bl9)) | 0;\n    hi = (hi + Math.imul(ah5, bh9)) | 0;\n    var w14 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w14 >>> 26)) | 0;\n    w14 &= 0x3ffffff;\n    /* k = 15 */\n    lo = Math.imul(al9, bl6);\n    mid = Math.imul(al9, bh6);\n    mid = (mid + Math.imul(ah9, bl6)) | 0;\n    hi = Math.imul(ah9, bh6);\n    lo = (lo + Math.imul(al8, bl7)) | 0;\n    mid = (mid + Math.imul(al8, bh7)) | 0;\n    mid = (mid + Math.imul(ah8, bl7)) | 0;\n    hi = (hi + Math.imul(ah8, bh7)) | 0;\n    lo = (lo + Math.imul(al7, bl8)) | 0;\n    mid = (mid + Math.imul(al7, bh8)) | 0;\n    mid = (mid + Math.imul(ah7, bl8)) | 0;\n    hi = (hi + Math.imul(ah7, bh8)) | 0;\n    lo = (lo + Math.imul(al6, bl9)) | 0;\n    mid = (mid + Math.imul(al6, bh9)) | 0;\n    mid = (mid + Math.imul(ah6, bl9)) | 0;\n    hi = (hi + Math.imul(ah6, bh9)) | 0;\n    var w15 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w15 >>> 26)) | 0;\n    w15 &= 0x3ffffff;\n    /* k = 16 */\n    lo = Math.imul(al9, bl7);\n    mid = Math.imul(al9, bh7);\n    mid = (mid + Math.imul(ah9, bl7)) | 0;\n    hi = Math.imul(ah9, bh7);\n    lo = (lo + Math.imul(al8, bl8)) | 0;\n    mid = (mid + Math.imul(al8, bh8)) | 0;\n    mid = (mid + Math.imul(ah8, bl8)) | 0;\n    hi = (hi + Math.imul(ah8, bh8)) | 0;\n    lo = (lo + Math.imul(al7, bl9)) | 0;\n    mid = (mid + Math.imul(al7, bh9)) | 0;\n    mid = (mid + Math.imul(ah7, bl9)) | 0;\n    hi = (hi + Math.imul(ah7, bh9)) | 0;\n    var w16 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w16 >>> 26)) | 0;\n    w16 &= 0x3ffffff;\n    /* k = 17 */\n    lo = Math.imul(al9, bl8);\n    mid = Math.imul(al9, bh8);\n    mid = (mid + Math.imul(ah9, bl8)) | 0;\n    hi = Math.imul(ah9, bh8);\n    lo = (lo + Math.imul(al8, bl9)) | 0;\n    mid = (mid + Math.imul(al8, bh9)) | 0;\n    mid = (mid + Math.imul(ah8, bl9)) | 0;\n    hi = (hi + Math.imul(ah8, bh9)) | 0;\n    var w17 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w17 >>> 26)) | 0;\n    w17 &= 0x3ffffff;\n    /* k = 18 */\n    lo = Math.imul(al9, bl9);\n    mid = Math.imul(al9, bh9);\n    mid = (mid + Math.imul(ah9, bl9)) | 0;\n    hi = Math.imul(ah9, bh9);\n    var w18 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w18 >>> 26)) | 0;\n    w18 &= 0x3ffffff;\n    o[0] = w0;\n    o[1] = w1;\n    o[2] = w2;\n    o[3] = w3;\n    o[4] = w4;\n    o[5] = w5;\n    o[6] = w6;\n    o[7] = w7;\n    o[8] = w8;\n    o[9] = w9;\n    o[10] = w10;\n    o[11] = w11;\n    o[12] = w12;\n    o[13] = w13;\n    o[14] = w14;\n    o[15] = w15;\n    o[16] = w16;\n    o[17] = w17;\n    o[18] = w18;\n    if (c !== 0) {\n      o[19] = c;\n      out.length++;\n    }\n    return out;\n  };\n\n  // Polyfill comb\n  if (!Math.imul) {\n    comb10MulTo = smallMulTo;\n  }\n\n  function bigMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    out.length = self.length + num.length;\n\n    var carry = 0;\n    var hncarry = 0;\n    for (var k = 0; k < out.length - 1; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = hncarry;\n      hncarry = 0;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = k - j;\n        var a = self.words[i] | 0;\n        var b = num.words[j] | 0;\n        var r = a * b;\n\n        var lo = r & 0x3ffffff;\n        ncarry = (ncarry + ((r / 0x4000000) | 0)) | 0;\n        lo = (lo + rword) | 0;\n        rword = lo & 0x3ffffff;\n        ncarry = (ncarry + (lo >>> 26)) | 0;\n\n        hncarry += ncarry >>> 26;\n        ncarry &= 0x3ffffff;\n      }\n      out.words[k] = rword;\n      carry = ncarry;\n      ncarry = hncarry;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry;\n    } else {\n      out.length--;\n    }\n\n    return out.strip();\n  }\n\n  function jumboMulTo (self, num, out) {\n    var fftm = new FFTM();\n    return fftm.mulp(self, num, out);\n  }\n\n  BN.prototype.mulTo = function mulTo (num, out) {\n    var res;\n    var len = this.length + num.length;\n    if (this.length === 10 && num.length === 10) {\n      res = comb10MulTo(this, num, out);\n    } else if (len < 63) {\n      res = smallMulTo(this, num, out);\n    } else if (len < 1024) {\n      res = bigMulTo(this, num, out);\n    } else {\n      res = jumboMulTo(this, num, out);\n    }\n\n    return res;\n  };\n\n  // Cooley-Tukey algorithm for FFT\n  // slightly revisited to rely on looping instead of recursion\n\n  function FFTM (x, y) {\n    this.x = x;\n    this.y = y;\n  }\n\n  FFTM.prototype.makeRBT = function makeRBT (N) {\n    var t = new Array(N);\n    var l = BN.prototype._countBits(N) - 1;\n    for (var i = 0; i < N; i++) {\n      t[i] = this.revBin(i, l, N);\n    }\n\n    return t;\n  };\n\n  // Returns binary-reversed representation of `x`\n  FFTM.prototype.revBin = function revBin (x, l, N) {\n    if (x === 0 || x === N - 1) return x;\n\n    var rb = 0;\n    for (var i = 0; i < l; i++) {\n      rb |= (x & 1) << (l - i - 1);\n      x >>= 1;\n    }\n\n    return rb;\n  };\n\n  // Performs \"tweedling\" phase, therefore 'emulating'\n  // behaviour of the recursive algorithm\n  FFTM.prototype.permute = function permute (rbt, rws, iws, rtws, itws, N) {\n    for (var i = 0; i < N; i++) {\n      rtws[i] = rws[rbt[i]];\n      itws[i] = iws[rbt[i]];\n    }\n  };\n\n  FFTM.prototype.transform = function transform (rws, iws, rtws, itws, N, rbt) {\n    this.permute(rbt, rws, iws, rtws, itws, N);\n\n    for (var s = 1; s < N; s <<= 1) {\n      var l = s << 1;\n\n      var rtwdf = Math.cos(2 * Math.PI / l);\n      var itwdf = Math.sin(2 * Math.PI / l);\n\n      for (var p = 0; p < N; p += l) {\n        var rtwdf_ = rtwdf;\n        var itwdf_ = itwdf;\n\n        for (var j = 0; j < s; j++) {\n          var re = rtws[p + j];\n          var ie = itws[p + j];\n\n          var ro = rtws[p + j + s];\n          var io = itws[p + j + s];\n\n          var rx = rtwdf_ * ro - itwdf_ * io;\n\n          io = rtwdf_ * io + itwdf_ * ro;\n          ro = rx;\n\n          rtws[p + j] = re + ro;\n          itws[p + j] = ie + io;\n\n          rtws[p + j + s] = re - ro;\n          itws[p + j + s] = ie - io;\n\n          /* jshint maxdepth : false */\n          if (j !== l) {\n            rx = rtwdf * rtwdf_ - itwdf * itwdf_;\n\n            itwdf_ = rtwdf * itwdf_ + itwdf * rtwdf_;\n            rtwdf_ = rx;\n          }\n        }\n      }\n    }\n  };\n\n  FFTM.prototype.guessLen13b = function guessLen13b (n, m) {\n    var N = Math.max(m, n) | 1;\n    var odd = N & 1;\n    var i = 0;\n    for (N = N / 2 | 0; N; N = N >>> 1) {\n      i++;\n    }\n\n    return 1 << i + 1 + odd;\n  };\n\n  FFTM.prototype.conjugate = function conjugate (rws, iws, N) {\n    if (N <= 1) return;\n\n    for (var i = 0; i < N / 2; i++) {\n      var t = rws[i];\n\n      rws[i] = rws[N - i - 1];\n      rws[N - i - 1] = t;\n\n      t = iws[i];\n\n      iws[i] = -iws[N - i - 1];\n      iws[N - i - 1] = -t;\n    }\n  };\n\n  FFTM.prototype.normalize13b = function normalize13b (ws, N) {\n    var carry = 0;\n    for (var i = 0; i < N / 2; i++) {\n      var w = Math.round(ws[2 * i + 1] / N) * 0x2000 +\n        Math.round(ws[2 * i] / N) +\n        carry;\n\n      ws[i] = w & 0x3ffffff;\n\n      if (w < 0x4000000) {\n        carry = 0;\n      } else {\n        carry = w / 0x4000000 | 0;\n      }\n    }\n\n    return ws;\n  };\n\n  FFTM.prototype.convert13b = function convert13b (ws, len, rws, N) {\n    var carry = 0;\n    for (var i = 0; i < len; i++) {\n      carry = carry + (ws[i] | 0);\n\n      rws[2 * i] = carry & 0x1fff; carry = carry >>> 13;\n      rws[2 * i + 1] = carry & 0x1fff; carry = carry >>> 13;\n    }\n\n    // Pad with zeroes\n    for (i = 2 * len; i < N; ++i) {\n      rws[i] = 0;\n    }\n\n    assert(carry === 0);\n    assert((carry & ~0x1fff) === 0);\n  };\n\n  FFTM.prototype.stub = function stub (N) {\n    var ph = new Array(N);\n    for (var i = 0; i < N; i++) {\n      ph[i] = 0;\n    }\n\n    return ph;\n  };\n\n  FFTM.prototype.mulp = function mulp (x, y, out) {\n    var N = 2 * this.guessLen13b(x.length, y.length);\n\n    var rbt = this.makeRBT(N);\n\n    var _ = this.stub(N);\n\n    var rws = new Array(N);\n    var rwst = new Array(N);\n    var iwst = new Array(N);\n\n    var nrws = new Array(N);\n    var nrwst = new Array(N);\n    var niwst = new Array(N);\n\n    var rmws = out.words;\n    rmws.length = N;\n\n    this.convert13b(x.words, x.length, rws, N);\n    this.convert13b(y.words, y.length, nrws, N);\n\n    this.transform(rws, _, rwst, iwst, N, rbt);\n    this.transform(nrws, _, nrwst, niwst, N, rbt);\n\n    for (var i = 0; i < N; i++) {\n      var rx = rwst[i] * nrwst[i] - iwst[i] * niwst[i];\n      iwst[i] = rwst[i] * niwst[i] + iwst[i] * nrwst[i];\n      rwst[i] = rx;\n    }\n\n    this.conjugate(rwst, iwst, N);\n    this.transform(rwst, iwst, rmws, _, N, rbt);\n    this.conjugate(rmws, _, N);\n    this.normalize13b(rmws, N);\n\n    out.negative = x.negative ^ y.negative;\n    out.length = x.length + y.length;\n    return out.strip();\n  };\n\n  // Multiply `this` by `num`\n  BN.prototype.mul = function mul (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return this.mulTo(num, out);\n  };\n\n  // Multiply employing FFT\n  BN.prototype.mulf = function mulf (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return jumboMulTo(this, num, out);\n  };\n\n  // In-place Multiplication\n  BN.prototype.imul = function imul (num) {\n    return this.clone().mulTo(num, this);\n  };\n\n  BN.prototype.imuln = function imuln (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n\n    // Carry\n    var carry = 0;\n    for (var i = 0; i < this.length; i++) {\n      var w = (this.words[i] | 0) * num;\n      var lo = (w & 0x3ffffff) + (carry & 0x3ffffff);\n      carry >>= 26;\n      carry += (w / 0x4000000) | 0;\n      // NOTE: lo is 27bit maximum\n      carry += lo >>> 26;\n      this.words[i] = lo & 0x3ffffff;\n    }\n\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n\n    return this;\n  };\n\n  BN.prototype.muln = function muln (num) {\n    return this.clone().imuln(num);\n  };\n\n  // `this` * `this`\n  BN.prototype.sqr = function sqr () {\n    return this.mul(this);\n  };\n\n  // `this` * `this` in-place\n  BN.prototype.isqr = function isqr () {\n    return this.imul(this.clone());\n  };\n\n  // Math.pow(`this`, `num`)\n  BN.prototype.pow = function pow (num) {\n    var w = toBitArray(num);\n    if (w.length === 0) return new BN(1);\n\n    // Skip leading zeroes\n    var res = this;\n    for (var i = 0; i < w.length; i++, res = res.sqr()) {\n      if (w[i] !== 0) break;\n    }\n\n    if (++i < w.length) {\n      for (var q = res.sqr(); i < w.length; i++, q = q.sqr()) {\n        if (w[i] === 0) continue;\n\n        res = res.mul(q);\n      }\n    }\n\n    return res;\n  };\n\n  // Shift-left in-place\n  BN.prototype.iushln = function iushln (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n    var carryMask = (0x3ffffff >>> (26 - r)) << (26 - r);\n    var i;\n\n    if (r !== 0) {\n      var carry = 0;\n\n      for (i = 0; i < this.length; i++) {\n        var newCarry = this.words[i] & carryMask;\n        var c = ((this.words[i] | 0) - newCarry) << r;\n        this.words[i] = c | carry;\n        carry = newCarry >>> (26 - r);\n      }\n\n      if (carry) {\n        this.words[i] = carry;\n        this.length++;\n      }\n    }\n\n    if (s !== 0) {\n      for (i = this.length - 1; i >= 0; i--) {\n        this.words[i + s] = this.words[i];\n      }\n\n      for (i = 0; i < s; i++) {\n        this.words[i] = 0;\n      }\n\n      this.length += s;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.ishln = function ishln (bits) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushln(bits);\n  };\n\n  // Shift-right in-place\n  // NOTE: `hint` is a lowest bit before trailing zeroes\n  // NOTE: if `extended` is present - it will be filled with destroyed bits\n  BN.prototype.iushrn = function iushrn (bits, hint, extended) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var h;\n    if (hint) {\n      h = (hint - (hint % 26)) / 26;\n    } else {\n      h = 0;\n    }\n\n    var r = bits % 26;\n    var s = Math.min((bits - r) / 26, this.length);\n    var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n    var maskedWords = extended;\n\n    h -= s;\n    h = Math.max(0, h);\n\n    // Extended mode, copy masked part\n    if (maskedWords) {\n      for (var i = 0; i < s; i++) {\n        maskedWords.words[i] = this.words[i];\n      }\n      maskedWords.length = s;\n    }\n\n    if (s === 0) {\n      // No-op, we should not move anything at all\n    } else if (this.length > s) {\n      this.length -= s;\n      for (i = 0; i < this.length; i++) {\n        this.words[i] = this.words[i + s];\n      }\n    } else {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    var carry = 0;\n    for (i = this.length - 1; i >= 0 && (carry !== 0 || i >= h); i--) {\n      var word = this.words[i] | 0;\n      this.words[i] = (carry << (26 - r)) | (word >>> r);\n      carry = word & mask;\n    }\n\n    // Push carried bits as a mask\n    if (maskedWords && carry !== 0) {\n      maskedWords.words[maskedWords.length++] = carry;\n    }\n\n    if (this.length === 0) {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.ishrn = function ishrn (bits, hint, extended) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushrn(bits, hint, extended);\n  };\n\n  // Shift-left\n  BN.prototype.shln = function shln (bits) {\n    return this.clone().ishln(bits);\n  };\n\n  BN.prototype.ushln = function ushln (bits) {\n    return this.clone().iushln(bits);\n  };\n\n  // Shift-right\n  BN.prototype.shrn = function shrn (bits) {\n    return this.clone().ishrn(bits);\n  };\n\n  BN.prototype.ushrn = function ushrn (bits) {\n    return this.clone().iushrn(bits);\n  };\n\n  // Test if n bit is set\n  BN.prototype.testn = function testn (bit) {\n    assert(typeof bit === 'number' && bit >= 0);\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) return false;\n\n    // Check bit and return\n    var w = this.words[s];\n\n    return !!(w & q);\n  };\n\n  // Return only lowers bits of number (in-place)\n  BN.prototype.imaskn = function imaskn (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n\n    assert(this.negative === 0, 'imaskn works only with positive numbers');\n\n    if (this.length <= s) {\n      return this;\n    }\n\n    if (r !== 0) {\n      s++;\n    }\n    this.length = Math.min(s, this.length);\n\n    if (r !== 0) {\n      var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n      this.words[this.length - 1] &= mask;\n    }\n\n    return this.strip();\n  };\n\n  // Return only lowers bits of number\n  BN.prototype.maskn = function maskn (bits) {\n    return this.clone().imaskn(bits);\n  };\n\n  // Add plain number `num` to `this`\n  BN.prototype.iaddn = function iaddn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.isubn(-num);\n\n    // Possible sign change\n    if (this.negative !== 0) {\n      if (this.length === 1 && (this.words[0] | 0) < num) {\n        this.words[0] = num - (this.words[0] | 0);\n        this.negative = 0;\n        return this;\n      }\n\n      this.negative = 0;\n      this.isubn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    // Add without checks\n    return this._iaddn(num);\n  };\n\n  BN.prototype._iaddn = function _iaddn (num) {\n    this.words[0] += num;\n\n    // Carry\n    for (var i = 0; i < this.length && this.words[i] >= 0x4000000; i++) {\n      this.words[i] -= 0x4000000;\n      if (i === this.length - 1) {\n        this.words[i + 1] = 1;\n      } else {\n        this.words[i + 1]++;\n      }\n    }\n    this.length = Math.max(this.length, i + 1);\n\n    return this;\n  };\n\n  // Subtract plain number `num` from `this`\n  BN.prototype.isubn = function isubn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.iaddn(-num);\n\n    if (this.negative !== 0) {\n      this.negative = 0;\n      this.iaddn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    this.words[0] -= num;\n\n    if (this.length === 1 && this.words[0] < 0) {\n      this.words[0] = -this.words[0];\n      this.negative = 1;\n    } else {\n      // Carry\n      for (var i = 0; i < this.length && this.words[i] < 0; i++) {\n        this.words[i] += 0x4000000;\n        this.words[i + 1] -= 1;\n      }\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.addn = function addn (num) {\n    return this.clone().iaddn(num);\n  };\n\n  BN.prototype.subn = function subn (num) {\n    return this.clone().isubn(num);\n  };\n\n  BN.prototype.iabs = function iabs () {\n    this.negative = 0;\n\n    return this;\n  };\n\n  BN.prototype.abs = function abs () {\n    return this.clone().iabs();\n  };\n\n  BN.prototype._ishlnsubmul = function _ishlnsubmul (num, mul, shift) {\n    var len = num.length + shift;\n    var i;\n\n    this._expand(len);\n\n    var w;\n    var carry = 0;\n    for (i = 0; i < num.length; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      var right = (num.words[i] | 0) * mul;\n      w -= right & 0x3ffffff;\n      carry = (w >> 26) - ((right / 0x4000000) | 0);\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n    for (; i < this.length - shift; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      carry = w >> 26;\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n\n    if (carry === 0) return this.strip();\n\n    // Subtraction overflow\n    assert(carry === -1);\n    carry = 0;\n    for (i = 0; i < this.length; i++) {\n      w = -(this.words[i] | 0) + carry;\n      carry = w >> 26;\n      this.words[i] = w & 0x3ffffff;\n    }\n    this.negative = 1;\n\n    return this.strip();\n  };\n\n  BN.prototype._wordDiv = function _wordDiv (num, mode) {\n    var shift = this.length - num.length;\n\n    var a = this.clone();\n    var b = num;\n\n    // Normalize\n    var bhi = b.words[b.length - 1] | 0;\n    var bhiBits = this._countBits(bhi);\n    shift = 26 - bhiBits;\n    if (shift !== 0) {\n      b = b.ushln(shift);\n      a.iushln(shift);\n      bhi = b.words[b.length - 1] | 0;\n    }\n\n    // Initialize quotient\n    var m = a.length - b.length;\n    var q;\n\n    if (mode !== 'mod') {\n      q = new BN(null);\n      q.length = m + 1;\n      q.words = new Array(q.length);\n      for (var i = 0; i < q.length; i++) {\n        q.words[i] = 0;\n      }\n    }\n\n    var diff = a.clone()._ishlnsubmul(b, 1, m);\n    if (diff.negative === 0) {\n      a = diff;\n      if (q) {\n        q.words[m] = 1;\n      }\n    }\n\n    for (var j = m - 1; j >= 0; j--) {\n      var qj = (a.words[b.length + j] | 0) * 0x4000000 +\n        (a.words[b.length + j - 1] | 0);\n\n      // NOTE: (qj / bhi) is (0x3ffffff * 0x4000000 + 0x3ffffff) / 0x2000000 max\n      // (0x7ffffff)\n      qj = Math.min((qj / bhi) | 0, 0x3ffffff);\n\n      a._ishlnsubmul(b, qj, j);\n      while (a.negative !== 0) {\n        qj--;\n        a.negative = 0;\n        a._ishlnsubmul(b, 1, j);\n        if (!a.isZero()) {\n          a.negative ^= 1;\n        }\n      }\n      if (q) {\n        q.words[j] = qj;\n      }\n    }\n    if (q) {\n      q.strip();\n    }\n    a.strip();\n\n    // Denormalize\n    if (mode !== 'div' && shift !== 0) {\n      a.iushrn(shift);\n    }\n\n    return {\n      div: q || null,\n      mod: a\n    };\n  };\n\n  // NOTE: 1) `mode` can be set to `mod` to request mod only,\n  //       to `div` to request div only, or be absent to\n  //       request both div & mod\n  //       2) `positive` is true if unsigned mod is requested\n  BN.prototype.divmod = function divmod (num, mode, positive) {\n    assert(!num.isZero());\n\n    if (this.isZero()) {\n      return {\n        div: new BN(0),\n        mod: new BN(0)\n      };\n    }\n\n    var div, mod, res;\n    if (this.negative !== 0 && num.negative === 0) {\n      res = this.neg().divmod(num, mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.iadd(num);\n        }\n      }\n\n      return {\n        div: div,\n        mod: mod\n      };\n    }\n\n    if (this.negative === 0 && num.negative !== 0) {\n      res = this.divmod(num.neg(), mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      return {\n        div: div,\n        mod: res.mod\n      };\n    }\n\n    if ((this.negative & num.negative) !== 0) {\n      res = this.neg().divmod(num.neg(), mode);\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.isub(num);\n        }\n      }\n\n      return {\n        div: res.div,\n        mod: mod\n      };\n    }\n\n    // Both numbers are positive at this point\n\n    // Strip both numbers to approximate shift value\n    if (num.length > this.length || this.cmp(num) < 0) {\n      return {\n        div: new BN(0),\n        mod: this\n      };\n    }\n\n    // Very short reduction\n    if (num.length === 1) {\n      if (mode === 'div') {\n        return {\n          div: this.divn(num.words[0]),\n          mod: null\n        };\n      }\n\n      if (mode === 'mod') {\n        return {\n          div: null,\n          mod: new BN(this.modn(num.words[0]))\n        };\n      }\n\n      return {\n        div: this.divn(num.words[0]),\n        mod: new BN(this.modn(num.words[0]))\n      };\n    }\n\n    return this._wordDiv(num, mode);\n  };\n\n  // Find `this` / `num`\n  BN.prototype.div = function div (num) {\n    return this.divmod(num, 'div', false).div;\n  };\n\n  // Find `this` % `num`\n  BN.prototype.mod = function mod (num) {\n    return this.divmod(num, 'mod', false).mod;\n  };\n\n  BN.prototype.umod = function umod (num) {\n    return this.divmod(num, 'mod', true).mod;\n  };\n\n  // Find Round(`this` / `num`)\n  BN.prototype.divRound = function divRound (num) {\n    var dm = this.divmod(num);\n\n    // Fast case - exact division\n    if (dm.mod.isZero()) return dm.div;\n\n    var mod = dm.div.negative !== 0 ? dm.mod.isub(num) : dm.mod;\n\n    var half = num.ushrn(1);\n    var r2 = num.andln(1);\n    var cmp = mod.cmp(half);\n\n    // Round down\n    if (cmp < 0 || r2 === 1 && cmp === 0) return dm.div;\n\n    // Round up\n    return dm.div.negative !== 0 ? dm.div.isubn(1) : dm.div.iaddn(1);\n  };\n\n  BN.prototype.modn = function modn (num) {\n    assert(num <= 0x3ffffff);\n    var p = (1 << 26) % num;\n\n    var acc = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      acc = (p * acc + (this.words[i] | 0)) % num;\n    }\n\n    return acc;\n  };\n\n  // In-place division by number\n  BN.prototype.idivn = function idivn (num) {\n    assert(num <= 0x3ffffff);\n\n    var carry = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var w = (this.words[i] | 0) + carry * 0x4000000;\n      this.words[i] = (w / num) | 0;\n      carry = w % num;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.divn = function divn (num) {\n    return this.clone().idivn(num);\n  };\n\n  BN.prototype.egcd = function egcd (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var x = this;\n    var y = p.clone();\n\n    if (x.negative !== 0) {\n      x = x.umod(p);\n    } else {\n      x = x.clone();\n    }\n\n    // A * x + B * y = x\n    var A = new BN(1);\n    var B = new BN(0);\n\n    // C * x + D * y = y\n    var C = new BN(0);\n    var D = new BN(1);\n\n    var g = 0;\n\n    while (x.isEven() && y.isEven()) {\n      x.iushrn(1);\n      y.iushrn(1);\n      ++g;\n    }\n\n    var yp = y.clone();\n    var xp = x.clone();\n\n    while (!x.isZero()) {\n      for (var i = 0, im = 1; (x.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        x.iushrn(i);\n        while (i-- > 0) {\n          if (A.isOdd() || B.isOdd()) {\n            A.iadd(yp);\n            B.isub(xp);\n          }\n\n          A.iushrn(1);\n          B.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (y.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        y.iushrn(j);\n        while (j-- > 0) {\n          if (C.isOdd() || D.isOdd()) {\n            C.iadd(yp);\n            D.isub(xp);\n          }\n\n          C.iushrn(1);\n          D.iushrn(1);\n        }\n      }\n\n      if (x.cmp(y) >= 0) {\n        x.isub(y);\n        A.isub(C);\n        B.isub(D);\n      } else {\n        y.isub(x);\n        C.isub(A);\n        D.isub(B);\n      }\n    }\n\n    return {\n      a: C,\n      b: D,\n      gcd: y.iushln(g)\n    };\n  };\n\n  // This is reduced incarnation of the binary EEA\n  // above, designated to invert members of the\n  // _prime_ fields F(p) at a maximal speed\n  BN.prototype._invmp = function _invmp (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var a = this;\n    var b = p.clone();\n\n    if (a.negative !== 0) {\n      a = a.umod(p);\n    } else {\n      a = a.clone();\n    }\n\n    var x1 = new BN(1);\n    var x2 = new BN(0);\n\n    var delta = b.clone();\n\n    while (a.cmpn(1) > 0 && b.cmpn(1) > 0) {\n      for (var i = 0, im = 1; (a.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        a.iushrn(i);\n        while (i-- > 0) {\n          if (x1.isOdd()) {\n            x1.iadd(delta);\n          }\n\n          x1.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (b.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        b.iushrn(j);\n        while (j-- > 0) {\n          if (x2.isOdd()) {\n            x2.iadd(delta);\n          }\n\n          x2.iushrn(1);\n        }\n      }\n\n      if (a.cmp(b) >= 0) {\n        a.isub(b);\n        x1.isub(x2);\n      } else {\n        b.isub(a);\n        x2.isub(x1);\n      }\n    }\n\n    var res;\n    if (a.cmpn(1) === 0) {\n      res = x1;\n    } else {\n      res = x2;\n    }\n\n    if (res.cmpn(0) < 0) {\n      res.iadd(p);\n    }\n\n    return res;\n  };\n\n  BN.prototype.gcd = function gcd (num) {\n    if (this.isZero()) return num.abs();\n    if (num.isZero()) return this.abs();\n\n    var a = this.clone();\n    var b = num.clone();\n    a.negative = 0;\n    b.negative = 0;\n\n    // Remove common factor of two\n    for (var shift = 0; a.isEven() && b.isEven(); shift++) {\n      a.iushrn(1);\n      b.iushrn(1);\n    }\n\n    do {\n      while (a.isEven()) {\n        a.iushrn(1);\n      }\n      while (b.isEven()) {\n        b.iushrn(1);\n      }\n\n      var r = a.cmp(b);\n      if (r < 0) {\n        // Swap `a` and `b` to make `a` always bigger than `b`\n        var t = a;\n        a = b;\n        b = t;\n      } else if (r === 0 || b.cmpn(1) === 0) {\n        break;\n      }\n\n      a.isub(b);\n    } while (true);\n\n    return b.iushln(shift);\n  };\n\n  // Invert number in the field F(num)\n  BN.prototype.invm = function invm (num) {\n    return this.egcd(num).a.umod(num);\n  };\n\n  BN.prototype.isEven = function isEven () {\n    return (this.words[0] & 1) === 0;\n  };\n\n  BN.prototype.isOdd = function isOdd () {\n    return (this.words[0] & 1) === 1;\n  };\n\n  // And first word and num\n  BN.prototype.andln = function andln (num) {\n    return this.words[0] & num;\n  };\n\n  // Increment at the bit position in-line\n  BN.prototype.bincn = function bincn (bit) {\n    assert(typeof bit === 'number');\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) {\n      this._expand(s + 1);\n      this.words[s] |= q;\n      return this;\n    }\n\n    // Add bit and propagate, if needed\n    var carry = q;\n    for (var i = s; carry !== 0 && i < this.length; i++) {\n      var w = this.words[i] | 0;\n      w += carry;\n      carry = w >>> 26;\n      w &= 0x3ffffff;\n      this.words[i] = w;\n    }\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n    return this;\n  };\n\n  BN.prototype.isZero = function isZero () {\n    return this.length === 1 && this.words[0] === 0;\n  };\n\n  BN.prototype.cmpn = function cmpn (num) {\n    var negative = num < 0;\n\n    if (this.negative !== 0 && !negative) return -1;\n    if (this.negative === 0 && negative) return 1;\n\n    this.strip();\n\n    var res;\n    if (this.length > 1) {\n      res = 1;\n    } else {\n      if (negative) {\n        num = -num;\n      }\n\n      assert(num <= 0x3ffffff, 'Number is too big');\n\n      var w = this.words[0] | 0;\n      res = w === num ? 0 : w < num ? -1 : 1;\n    }\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Compare two numbers and return:\n  // 1 - if `this` > `num`\n  // 0 - if `this` == `num`\n  // -1 - if `this` < `num`\n  BN.prototype.cmp = function cmp (num) {\n    if (this.negative !== 0 && num.negative === 0) return -1;\n    if (this.negative === 0 && num.negative !== 0) return 1;\n\n    var res = this.ucmp(num);\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Unsigned comparison\n  BN.prototype.ucmp = function ucmp (num) {\n    // At this point both numbers have the same sign\n    if (this.length > num.length) return 1;\n    if (this.length < num.length) return -1;\n\n    var res = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var a = this.words[i] | 0;\n      var b = num.words[i] | 0;\n\n      if (a === b) continue;\n      if (a < b) {\n        res = -1;\n      } else if (a > b) {\n        res = 1;\n      }\n      break;\n    }\n    return res;\n  };\n\n  BN.prototype.gtn = function gtn (num) {\n    return this.cmpn(num) === 1;\n  };\n\n  BN.prototype.gt = function gt (num) {\n    return this.cmp(num) === 1;\n  };\n\n  BN.prototype.gten = function gten (num) {\n    return this.cmpn(num) >= 0;\n  };\n\n  BN.prototype.gte = function gte (num) {\n    return this.cmp(num) >= 0;\n  };\n\n  BN.prototype.ltn = function ltn (num) {\n    return this.cmpn(num) === -1;\n  };\n\n  BN.prototype.lt = function lt (num) {\n    return this.cmp(num) === -1;\n  };\n\n  BN.prototype.lten = function lten (num) {\n    return this.cmpn(num) <= 0;\n  };\n\n  BN.prototype.lte = function lte (num) {\n    return this.cmp(num) <= 0;\n  };\n\n  BN.prototype.eqn = function eqn (num) {\n    return this.cmpn(num) === 0;\n  };\n\n  BN.prototype.eq = function eq (num) {\n    return this.cmp(num) === 0;\n  };\n\n  //\n  // A reduce context, could be using montgomery or something better, depending\n  // on the `m` itself.\n  //\n  BN.red = function red (num) {\n    return new Red(num);\n  };\n\n  BN.prototype.toRed = function toRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    assert(this.negative === 0, 'red works only with positives');\n    return ctx.convertTo(this)._forceRed(ctx);\n  };\n\n  BN.prototype.fromRed = function fromRed () {\n    assert(this.red, 'fromRed works only with numbers in reduction context');\n    return this.red.convertFrom(this);\n  };\n\n  BN.prototype._forceRed = function _forceRed (ctx) {\n    this.red = ctx;\n    return this;\n  };\n\n  BN.prototype.forceRed = function forceRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    return this._forceRed(ctx);\n  };\n\n  BN.prototype.redAdd = function redAdd (num) {\n    assert(this.red, 'redAdd works only with red numbers');\n    return this.red.add(this, num);\n  };\n\n  BN.prototype.redIAdd = function redIAdd (num) {\n    assert(this.red, 'redIAdd works only with red numbers');\n    return this.red.iadd(this, num);\n  };\n\n  BN.prototype.redSub = function redSub (num) {\n    assert(this.red, 'redSub works only with red numbers');\n    return this.red.sub(this, num);\n  };\n\n  BN.prototype.redISub = function redISub (num) {\n    assert(this.red, 'redISub works only with red numbers');\n    return this.red.isub(this, num);\n  };\n\n  BN.prototype.redShl = function redShl (num) {\n    assert(this.red, 'redShl works only with red numbers');\n    return this.red.shl(this, num);\n  };\n\n  BN.prototype.redMul = function redMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.mul(this, num);\n  };\n\n  BN.prototype.redIMul = function redIMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.imul(this, num);\n  };\n\n  BN.prototype.redSqr = function redSqr () {\n    assert(this.red, 'redSqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqr(this);\n  };\n\n  BN.prototype.redISqr = function redISqr () {\n    assert(this.red, 'redISqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.isqr(this);\n  };\n\n  // Square root over p\n  BN.prototype.redSqrt = function redSqrt () {\n    assert(this.red, 'redSqrt works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqrt(this);\n  };\n\n  BN.prototype.redInvm = function redInvm () {\n    assert(this.red, 'redInvm works only with red numbers');\n    this.red._verify1(this);\n    return this.red.invm(this);\n  };\n\n  // Return negative clone of `this` % `red modulo`\n  BN.prototype.redNeg = function redNeg () {\n    assert(this.red, 'redNeg works only with red numbers');\n    this.red._verify1(this);\n    return this.red.neg(this);\n  };\n\n  BN.prototype.redPow = function redPow (num) {\n    assert(this.red && !num.red, 'redPow(normalNum)');\n    this.red._verify1(this);\n    return this.red.pow(this, num);\n  };\n\n  // Prime numbers with efficient reduction\n  var primes = {\n    k256: null,\n    p224: null,\n    p192: null,\n    p25519: null\n  };\n\n  // Pseudo-Mersenne prime\n  function MPrime (name, p) {\n    // P = 2 ^ N - K\n    this.name = name;\n    this.p = new BN(p, 16);\n    this.n = this.p.bitLength();\n    this.k = new BN(1).iushln(this.n).isub(this.p);\n\n    this.tmp = this._tmp();\n  }\n\n  MPrime.prototype._tmp = function _tmp () {\n    var tmp = new BN(null);\n    tmp.words = new Array(Math.ceil(this.n / 13));\n    return tmp;\n  };\n\n  MPrime.prototype.ireduce = function ireduce (num) {\n    // Assumes that `num` is less than `P^2`\n    // num = HI * (2 ^ N - K) + HI * K + LO = HI * K + LO (mod P)\n    var r = num;\n    var rlen;\n\n    do {\n      this.split(r, this.tmp);\n      r = this.imulK(r);\n      r = r.iadd(this.tmp);\n      rlen = r.bitLength();\n    } while (rlen > this.n);\n\n    var cmp = rlen < this.n ? -1 : r.ucmp(this.p);\n    if (cmp === 0) {\n      r.words[0] = 0;\n      r.length = 1;\n    } else if (cmp > 0) {\n      r.isub(this.p);\n    } else {\n      if (r.strip !== undefined) {\n        // r is BN v4 instance\n        r.strip();\n      } else {\n        // r is BN v5 instance\n        r._strip();\n      }\n    }\n\n    return r;\n  };\n\n  MPrime.prototype.split = function split (input, out) {\n    input.iushrn(this.n, 0, out);\n  };\n\n  MPrime.prototype.imulK = function imulK (num) {\n    return num.imul(this.k);\n  };\n\n  function K256 () {\n    MPrime.call(\n      this,\n      'k256',\n      'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f');\n  }\n  inherits(K256, MPrime);\n\n  K256.prototype.split = function split (input, output) {\n    // 256 = 9 * 26 + 22\n    var mask = 0x3fffff;\n\n    var outLen = Math.min(input.length, 9);\n    for (var i = 0; i < outLen; i++) {\n      output.words[i] = input.words[i];\n    }\n    output.length = outLen;\n\n    if (input.length <= 9) {\n      input.words[0] = 0;\n      input.length = 1;\n      return;\n    }\n\n    // Shift by 9 limbs\n    var prev = input.words[9];\n    output.words[output.length++] = prev & mask;\n\n    for (i = 10; i < input.length; i++) {\n      var next = input.words[i] | 0;\n      input.words[i - 10] = ((next & mask) << 4) | (prev >>> 22);\n      prev = next;\n    }\n    prev >>>= 22;\n    input.words[i - 10] = prev;\n    if (prev === 0 && input.length > 10) {\n      input.length -= 10;\n    } else {\n      input.length -= 9;\n    }\n  };\n\n  K256.prototype.imulK = function imulK (num) {\n    // K = 0x1000003d1 = [ 0x40, 0x3d1 ]\n    num.words[num.length] = 0;\n    num.words[num.length + 1] = 0;\n    num.length += 2;\n\n    // bounded at: 0x40 * 0x3ffffff + 0x3d0 = 0x100000390\n    var lo = 0;\n    for (var i = 0; i < num.length; i++) {\n      var w = num.words[i] | 0;\n      lo += w * 0x3d1;\n      num.words[i] = lo & 0x3ffffff;\n      lo = w * 0x40 + ((lo / 0x4000000) | 0);\n    }\n\n    // Fast length reduction\n    if (num.words[num.length - 1] === 0) {\n      num.length--;\n      if (num.words[num.length - 1] === 0) {\n        num.length--;\n      }\n    }\n    return num;\n  };\n\n  function P224 () {\n    MPrime.call(\n      this,\n      'p224',\n      'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001');\n  }\n  inherits(P224, MPrime);\n\n  function P192 () {\n    MPrime.call(\n      this,\n      'p192',\n      'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff');\n  }\n  inherits(P192, MPrime);\n\n  function P25519 () {\n    // 2 ^ 255 - 19\n    MPrime.call(\n      this,\n      '25519',\n      '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed');\n  }\n  inherits(P25519, MPrime);\n\n  P25519.prototype.imulK = function imulK (num) {\n    // K = 0x13\n    var carry = 0;\n    for (var i = 0; i < num.length; i++) {\n      var hi = (num.words[i] | 0) * 0x13 + carry;\n      var lo = hi & 0x3ffffff;\n      hi >>>= 26;\n\n      num.words[i] = lo;\n      carry = hi;\n    }\n    if (carry !== 0) {\n      num.words[num.length++] = carry;\n    }\n    return num;\n  };\n\n  // Exported mostly for testing purposes, use plain name instead\n  BN._prime = function prime (name) {\n    // Cached version of prime\n    if (primes[name]) return primes[name];\n\n    var prime;\n    if (name === 'k256') {\n      prime = new K256();\n    } else if (name === 'p224') {\n      prime = new P224();\n    } else if (name === 'p192') {\n      prime = new P192();\n    } else if (name === 'p25519') {\n      prime = new P25519();\n    } else {\n      throw new Error('Unknown prime ' + name);\n    }\n    primes[name] = prime;\n\n    return prime;\n  };\n\n  //\n  // Base reduction engine\n  //\n  function Red (m) {\n    if (typeof m === 'string') {\n      var prime = BN._prime(m);\n      this.m = prime.p;\n      this.prime = prime;\n    } else {\n      assert(m.gtn(1), 'modulus must be greater than 1');\n      this.m = m;\n      this.prime = null;\n    }\n  }\n\n  Red.prototype._verify1 = function _verify1 (a) {\n    assert(a.negative === 0, 'red works only with positives');\n    assert(a.red, 'red works only with red numbers');\n  };\n\n  Red.prototype._verify2 = function _verify2 (a, b) {\n    assert((a.negative | b.negative) === 0, 'red works only with positives');\n    assert(a.red && a.red === b.red,\n      'red works only with red numbers');\n  };\n\n  Red.prototype.imod = function imod (a) {\n    if (this.prime) return this.prime.ireduce(a)._forceRed(this);\n    return a.umod(this.m)._forceRed(this);\n  };\n\n  Red.prototype.neg = function neg (a) {\n    if (a.isZero()) {\n      return a.clone();\n    }\n\n    return this.m.sub(a)._forceRed(this);\n  };\n\n  Red.prototype.add = function add (a, b) {\n    this._verify2(a, b);\n\n    var res = a.add(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.iadd = function iadd (a, b) {\n    this._verify2(a, b);\n\n    var res = a.iadd(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.sub = function sub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.sub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.isub = function isub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.isub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.shl = function shl (a, num) {\n    this._verify1(a);\n    return this.imod(a.ushln(num));\n  };\n\n  Red.prototype.imul = function imul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.imul(b));\n  };\n\n  Red.prototype.mul = function mul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.mul(b));\n  };\n\n  Red.prototype.isqr = function isqr (a) {\n    return this.imul(a, a.clone());\n  };\n\n  Red.prototype.sqr = function sqr (a) {\n    return this.mul(a, a);\n  };\n\n  Red.prototype.sqrt = function sqrt (a) {\n    if (a.isZero()) return a.clone();\n\n    var mod3 = this.m.andln(3);\n    assert(mod3 % 2 === 1);\n\n    // Fast case\n    if (mod3 === 3) {\n      var pow = this.m.add(new BN(1)).iushrn(2);\n      return this.pow(a, pow);\n    }\n\n    // Tonelli-Shanks algorithm (Totally unoptimized and slow)\n    //\n    // Find Q and S, that Q * 2 ^ S = (P - 1)\n    var q = this.m.subn(1);\n    var s = 0;\n    while (!q.isZero() && q.andln(1) === 0) {\n      s++;\n      q.iushrn(1);\n    }\n    assert(!q.isZero());\n\n    var one = new BN(1).toRed(this);\n    var nOne = one.redNeg();\n\n    // Find quadratic non-residue\n    // NOTE: Max is such because of generalized Riemann hypothesis.\n    var lpow = this.m.subn(1).iushrn(1);\n    var z = this.m.bitLength();\n    z = new BN(2 * z * z).toRed(this);\n\n    while (this.pow(z, lpow).cmp(nOne) !== 0) {\n      z.redIAdd(nOne);\n    }\n\n    var c = this.pow(z, q);\n    var r = this.pow(a, q.addn(1).iushrn(1));\n    var t = this.pow(a, q);\n    var m = s;\n    while (t.cmp(one) !== 0) {\n      var tmp = t;\n      for (var i = 0; tmp.cmp(one) !== 0; i++) {\n        tmp = tmp.redSqr();\n      }\n      assert(i < m);\n      var b = this.pow(c, new BN(1).iushln(m - i - 1));\n\n      r = r.redMul(b);\n      c = b.redSqr();\n      t = t.redMul(c);\n      m = i;\n    }\n\n    return r;\n  };\n\n  Red.prototype.invm = function invm (a) {\n    var inv = a._invmp(this.m);\n    if (inv.negative !== 0) {\n      inv.negative = 0;\n      return this.imod(inv).redNeg();\n    } else {\n      return this.imod(inv);\n    }\n  };\n\n  Red.prototype.pow = function pow (a, num) {\n    if (num.isZero()) return new BN(1).toRed(this);\n    if (num.cmpn(1) === 0) return a.clone();\n\n    var windowSize = 4;\n    var wnd = new Array(1 << windowSize);\n    wnd[0] = new BN(1).toRed(this);\n    wnd[1] = a;\n    for (var i = 2; i < wnd.length; i++) {\n      wnd[i] = this.mul(wnd[i - 1], a);\n    }\n\n    var res = wnd[0];\n    var current = 0;\n    var currentLen = 0;\n    var start = num.bitLength() % 26;\n    if (start === 0) {\n      start = 26;\n    }\n\n    for (i = num.length - 1; i >= 0; i--) {\n      var word = num.words[i];\n      for (var j = start - 1; j >= 0; j--) {\n        var bit = (word >> j) & 1;\n        if (res !== wnd[0]) {\n          res = this.sqr(res);\n        }\n\n        if (bit === 0 && current === 0) {\n          currentLen = 0;\n          continue;\n        }\n\n        current <<= 1;\n        current |= bit;\n        currentLen++;\n        if (currentLen !== windowSize && (i !== 0 || j !== 0)) continue;\n\n        res = this.mul(res, wnd[current]);\n        currentLen = 0;\n        current = 0;\n      }\n      start = 26;\n    }\n\n    return res;\n  };\n\n  Red.prototype.convertTo = function convertTo (num) {\n    var r = num.umod(this.m);\n\n    return r === num ? r.clone() : r;\n  };\n\n  Red.prototype.convertFrom = function convertFrom (num) {\n    var res = num.clone();\n    res.red = null;\n    return res;\n  };\n\n  //\n  // Montgomery method engine\n  //\n\n  BN.mont = function mont (num) {\n    return new Mont(num);\n  };\n\n  function Mont (m) {\n    Red.call(this, m);\n\n    this.shift = this.m.bitLength();\n    if (this.shift % 26 !== 0) {\n      this.shift += 26 - (this.shift % 26);\n    }\n\n    this.r = new BN(1).iushln(this.shift);\n    this.r2 = this.imod(this.r.sqr());\n    this.rinv = this.r._invmp(this.m);\n\n    this.minv = this.rinv.mul(this.r).isubn(1).div(this.m);\n    this.minv = this.minv.umod(this.r);\n    this.minv = this.r.sub(this.minv);\n  }\n  inherits(Mont, Red);\n\n  Mont.prototype.convertTo = function convertTo (num) {\n    return this.imod(num.ushln(this.shift));\n  };\n\n  Mont.prototype.convertFrom = function convertFrom (num) {\n    var r = this.imod(num.mul(this.rinv));\n    r.red = null;\n    return r;\n  };\n\n  Mont.prototype.imul = function imul (a, b) {\n    if (a.isZero() || b.isZero()) {\n      a.words[0] = 0;\n      a.length = 1;\n      return a;\n    }\n\n    var t = a.imul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.mul = function mul (a, b) {\n    if (a.isZero() || b.isZero()) return new BN(0)._forceRed(this);\n\n    var t = a.mul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.invm = function invm (a) {\n    // (AR)^-1 * R^2 = (A^-1 * R^-1) * R^2 = A^-1 * R\n    var res = this.imod(a._invmp(this.m).mul(this.r2));\n    return res._forceRed(this);\n  };\n})(typeof module === 'undefined' || module, this);\n"],"sourceRoot":""}