{"version":3,"sources":["webpack:///./node_modules/ethereumjs-util/dist/object.js","webpack:///./node_modules/bn.js/lib/bn.js","webpack:///./node_modules/ethereumjs-util/dist/bytes.js","webpack:///./node_modules/ethereumjs-util/dist/helpers.js","webpack:///./node_modules/ethereumjs-util/dist/account.js","webpack:///./node_modules/ethereumjs-util/dist/externals.js","webpack:///./node_modules/ethereumjs-util/dist/signature.js","webpack:///./node_modules/ethereumjs-util/dist/index.js","webpack:///./node_modules/ethereumjs-util/dist/address.js","webpack:///./node_modules/ethereumjs-util/dist/constants.js","webpack:///./node_modules/ethereumjs-util/dist/hash.js"],"names":["Object","defineProperty","exports","value","defineProperties","ethjsUtil","assert","rlp","bytes_1","self","fields","data","raw","_fields","toJSON","label","obj_1","forEach","field","toString","baToJSON","serialize","encode","i","getter","setter","v","toBuffer","allowZero","Buffer","allocUnsafe","allowLess","length","unpadBuffer","name","push","enumerable","configurable","get","set","default","alias","from","stripHexPrefix","isBuffer","decode","Array","isArray","Error","d","keys_1","keys","indexOf","val","msg","inherits","ctor","superCtor","super_","TempCtor","prototype","constructor","BN","number","base","endian","isBN","this","negative","words","red","_init","module","wordSize","e","parseHex","str","start","end","r","len","Math","min","z","b","c","charCodeAt","parseBase","mul","move","dest","src","num","max","left","right","cmp","_initNumber","_initArray","replace","_parseHex","_parseBase","_strip","toArray","ceil","j","w","off","limbLen","limbPow","total","mod","word","imuln","_iaddn","pow","copy","_move","clone","_expand","size","_normSign","Symbol","for","inspect","zeros","groupSizes","groupBases","padding","out","carry","groupSize","groupBase","isZero","modrn","idivn","toNumber","ret","toArrayLike","allocate","ArrayType","toBitArray","bitLength","bit","wbit","smallMulTo","a","lo","k","ncarry","rword","maxJ","byteLength","reqLength","res","postfix","_toArrayLikeLE","position","shift","_toArrayLikeBE","clz32","_countBits","t","_zeroBits","hi","zeroBits","toTwos","width","abs","inotn","iaddn","fromTwos","testn","notn","ineg","isNeg","neg","iuor","ior","or","uor","iuand","iand","and","uand","iuxor","ixor","xor","uxor","bytesNeeded","bitsLeft","setn","iadd","isub","add","sub","comb10MulTo","mid","o","a0","al0","ah0","a1","al1","ah1","a2","al2","ah2","a3","al3","ah3","a4","al4","ah4","a5","al5","ah5","a6","al6","ah6","a7","al7","ah7","a8","al8","ah8","a9","al9","ah9","b0","bl0","bh0","b1","bl1","bh1","b2","bl2","bh2","b3","bl3","bh3","b4","bl4","bh4","b5","bl5","bh5","b6","bl6","bh6","b7","bl7","bh7","b8","bl8","bh8","b9","bl9","bh9","imul","w0","w1","w2","w3","w4","w5","w6","w7","w8","w9","w10","w11","w12","w13","w14","w15","w16","w17","w18","bigMulTo","hncarry","jumboMulTo","FFTM","x","y","mulTo","makeRBT","N","l","revBin","rb","permute","rbt","rws","iws","rtws","itws","transform","s","rtwdf","cos","PI","itwdf","sin","p","rtwdf_","itwdf_","re","ie","ro","io","rx","guessLen13b","n","m","odd","conjugate","normalize13b","ws","round","convert13b","stub","ph","mulp","_","rwst","iwst","nrws","nrwst","niwst","rmws","mulf","isNegNum","muln","sqr","isqr","q","iushln","bits","carryMask","newCarry","ishln","iushrn","hint","extended","h","mask","maskedWords","ishrn","shln","ushln","shrn","ushrn","imaskn","maskn","isubn","addn","subn","iabs","_ishlnsubmul","_wordDiv","mode","bhi","bhiBits","diff","qj","div","divmod","positive","divn","umod","divRound","dm","half","r2","andln","acc","modn","egcd","A","B","C","D","g","isEven","yp","xp","im","isOdd","jm","gcd","_invmp","x1","x2","delta","cmpn","invm","bincn","ucmp","gtn","gt","gten","gte","ltn","lt","lten","lte","eqn","eq","Red","toRed","ctx","convertTo","_forceRed","fromRed","convertFrom","forceRed","redAdd","redIAdd","redSub","redISub","redShl","shl","redMul","_verify2","redIMul","redSqr","_verify1","redISqr","redSqrt","sqrt","redInvm","redNeg","redPow","primes","k256","p224","p192","p25519","MPrime","tmp","_tmp","K256","call","P224","P192","P25519","prime","_prime","Mont","imod","rinv","minv","ireduce","rlen","split","imulK","undefined","strip","input","output","outLen","prev","next","mod3","one","nOne","lpow","inv","windowSize","wnd","current","currentLen","mont","u","addHexPrefix","toUnsigned","fromSigned","bufferToHex","bufferToInt","unpadHexString","unpadArray","setLengthRight","setLengthLeft","helpers_1","bytes","fill","assertIsBuffer","setLength","buf","slice","stripZeros","assertIsArray","assertIsHexString","first","Uint8Array","isHexString","padToEven","intToBuffer","isHexPrefixed","ba","array","assertIsString","importPublic","privateToPublic","privateToAddress","publicToAddress","pubToAddress","isValidPublic","isValidPrivate","generateAddress2","generateAddress","isValidChecksumAddress","toChecksumAddress","isZeroAddress","isValidAddress","zeroAddress","_a","privateKeyVerify","publicKeyCreate","publicKeyVerify","publicKeyConvert","hash_1","addressLength","addr","hexAddress","test","zeroAddr","eip1191ChainId","address","toLowerCase","prefix","hash","keccakFromString","parseInt","toUpperCase","nonce","nonceBN","rlphash","salt","initCode","keccak256","concat","privateKey","publicKey","sanitize","pubKey","keccak","hashPersonalMessage","isValidSignature","fromRpcSig","toRpcSig","ecrecover","ecsign","ecdsaSign","ecdsaRecover","calculateSigRecovery","chainId","isValidSigRecovery","recovery","msgHash","sig","recid","signature","senderPubKey","homesteadOrLater","SECP256K1_N_DIV_2","SECP256K1_N","rBN","sBN","message","__createBinding","create","k2","__exportStar","hasOwnProperty","Address","account_1","zero","fromString","fromPublicKey","fromPrivateKey","generate","generate2","equals","KECCAK256_RLP","KECCAK256_RLP_S","KECCAK256_RLP_ARRAY","KECCAK256_RLP_ARRAY_S","KECCAK256_NULL","KECCAK256_NULL_S","TWO_POW256","MAX_INTEGER","ripemd160FromArray","ripemd160FromString","ripemd160","sha256FromArray","sha256FromString","sha256","keccakFromArray","keccakFromHexString","keccak224","keccak384","keccak512","createHash","_sha256","update","digest","padded","_ripemd160"],"mappings":"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","file":"js/chunk-d29f3362.524669ca.js","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.defineProperties = void 0;\nvar ethjsUtil = require(\"ethjs-util\");\nvar assert = require(\"assert\");\nvar rlp = require(\"rlp\");\nvar bytes_1 = require(\"./bytes\");\n/**\n * Defines properties on a `Object`. It make the assumption that underlying data is binary.\n * @param self the `Object` to define properties on\n * @param fields an array fields to define. Fields can contain:\n * * `name` - the name of the properties\n * * `length` - the number of bytes the field can have\n * * `allowLess` - if the field can be less than the length\n * * `allowEmpty`\n * @param data data to be validated against the definitions\n * @deprecated\n */\nexports.defineProperties = function (self, fields, data) {\n    self.raw = [];\n    self._fields = [];\n    // attach the `toJSON`\n    self.toJSON = function (label) {\n        if (label === void 0) { label = false; }\n        if (label) {\n            var obj_1 = {};\n            self._fields.forEach(function (field) {\n                obj_1[field] = \"0x\" + self[field].toString('hex');\n            });\n            return obj_1;\n        }\n        return bytes_1.baToJSON(self.raw);\n    };\n    self.serialize = function serialize() {\n        return rlp.encode(self.raw);\n    };\n    fields.forEach(function (field, i) {\n        self._fields.push(field.name);\n        function getter() {\n            return self.raw[i];\n        }\n        function setter(v) {\n            v = bytes_1.toBuffer(v);\n            if (v.toString('hex') === '00' && !field.allowZero) {\n                v = Buffer.allocUnsafe(0);\n            }\n            if (field.allowLess && field.length) {\n                v = bytes_1.unpadBuffer(v);\n                assert(field.length >= v.length, \"The field \" + field.name + \" must not have more \" + field.length + \" bytes\");\n            }\n            else if (!(field.allowZero && v.length === 0) && field.length) {\n                assert(field.length === v.length, \"The field \" + field.name + \" must have byte length of \" + field.length);\n            }\n            self.raw[i] = v;\n        }\n        Object.defineProperty(self, field.name, {\n            enumerable: true,\n            configurable: true,\n            get: getter,\n            set: setter,\n        });\n        if (field.default) {\n            self[field.name] = field.default;\n        }\n        // attach alias\n        if (field.alias) {\n            Object.defineProperty(self, field.alias, {\n                enumerable: false,\n                configurable: true,\n                set: setter,\n                get: getter,\n            });\n        }\n    });\n    // if the constuctor is passed data\n    if (data) {\n        if (typeof data === 'string') {\n            data = Buffer.from(ethjsUtil.stripHexPrefix(data), 'hex');\n        }\n        if (Buffer.isBuffer(data)) {\n            data = rlp.decode(data);\n        }\n        if (Array.isArray(data)) {\n            if (data.length > self._fields.length) {\n                throw new Error('wrong number of fields in data');\n            }\n            // make sure all the items are buffers\n            data.forEach(function (d, i) {\n                self[self._fields[i]] = bytes_1.toBuffer(d);\n            });\n        }\n        else if (typeof data === 'object') {\n            var keys_1 = Object.keys(data);\n            fields.forEach(function (field) {\n                if (keys_1.indexOf(field.name) !== -1)\n                    self[field.name] = data[field.name];\n                if (keys_1.indexOf(field.alias) !== -1)\n                    self[field.alias] = data[field.alias];\n            });\n        }\n        else {\n            throw new Error('invalid data');\n        }\n    }\n};\n//# sourceMappingURL=object.js.map","(function (module, exports) {\n  'use strict';\n\n  // Utils\n  function assert (val, msg) {\n    if (!val) throw new Error(msg || 'Assertion failed');\n  }\n\n  // Could use `inherits` module, but don't want to move from single file\n  // architecture yet.\n  function inherits (ctor, superCtor) {\n    ctor.super_ = superCtor;\n    var TempCtor = function () {};\n    TempCtor.prototype = superCtor.prototype;\n    ctor.prototype = new TempCtor();\n    ctor.prototype.constructor = ctor;\n  }\n\n  // BN\n\n  function BN (number, base, endian) {\n    if (BN.isBN(number)) {\n      return number;\n    }\n\n    this.negative = 0;\n    this.words = null;\n    this.length = 0;\n\n    // Reduction context\n    this.red = null;\n\n    if (number !== null) {\n      if (base === 'le' || base === 'be') {\n        endian = base;\n        base = 10;\n      }\n\n      this._init(number || 0, base || 10, endian || 'be');\n    }\n  }\n  if (typeof module === 'object') {\n    module.exports = BN;\n  } else {\n    exports.BN = BN;\n  }\n\n  BN.BN = BN;\n  BN.wordSize = 26;\n\n  var Buffer;\n  try {\n    Buffer = require('buffer').Buffer;\n  } catch (e) {\n  }\n\n  BN.isBN = function isBN (num) {\n    if (num instanceof BN) {\n      return true;\n    }\n\n    return num !== null && typeof num === 'object' &&\n      num.constructor.wordSize === BN.wordSize && Array.isArray(num.words);\n  };\n\n  BN.max = function max (left, right) {\n    if (left.cmp(right) > 0) return left;\n    return right;\n  };\n\n  BN.min = function min (left, right) {\n    if (left.cmp(right) < 0) return left;\n    return right;\n  };\n\n  BN.prototype._init = function init (number, base, endian) {\n    if (typeof number === 'number') {\n      return this._initNumber(number, base, endian);\n    }\n\n    if (typeof number === 'object') {\n      return this._initArray(number, base, endian);\n    }\n\n    if (base === 'hex') {\n      base = 16;\n    }\n    assert(base === (base | 0) && base >= 2 && base <= 36);\n\n    number = number.toString().replace(/\\s+/g, '');\n    var start = 0;\n    if (number[0] === '-') {\n      start++;\n    }\n\n    if (base === 16) {\n      this._parseHex(number, start);\n    } else {\n      this._parseBase(number, base, start);\n    }\n\n    if (number[0] === '-') {\n      this.negative = 1;\n    }\n\n    this._strip();\n\n    if (endian !== 'le') return;\n\n    this._initArray(this.toArray(), base, endian);\n  };\n\n  BN.prototype._initNumber = function _initNumber (number, base, endian) {\n    if (number < 0) {\n      this.negative = 1;\n      number = -number;\n    }\n    if (number < 0x4000000) {\n      this.words = [number & 0x3ffffff];\n      this.length = 1;\n    } else if (number < 0x10000000000000) {\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff\n      ];\n      this.length = 2;\n    } else {\n      assert(number < 0x20000000000000); // 2 ^ 53 (unsafe)\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff,\n        1\n      ];\n      this.length = 3;\n    }\n\n    if (endian !== 'le') return;\n\n    // Reverse the bytes\n    this._initArray(this.toArray(), base, endian);\n  };\n\n  BN.prototype._initArray = function _initArray (number, base, endian) {\n    // Perhaps a Uint8Array\n    assert(typeof number.length === 'number');\n    if (number.length <= 0) {\n      this.words = [0];\n      this.length = 1;\n      return this;\n    }\n\n    this.length = Math.ceil(number.length / 3);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    var j, w;\n    var off = 0;\n    if (endian === 'be') {\n      for (i = number.length - 1, j = 0; i >= 0; i -= 3) {\n        w = number[i] | (number[i - 1] << 8) | (number[i - 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    } else if (endian === 'le') {\n      for (i = 0, j = 0; i < number.length; i += 3) {\n        w = number[i] | (number[i + 1] << 8) | (number[i + 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    }\n    return this._strip();\n  };\n\n  function parseHex (str, start, end) {\n    var r = 0;\n    var len = Math.min(str.length, end);\n    var z = 0;\n    for (var i = start; i < len; i++) {\n      var c = str.charCodeAt(i) - 48;\n\n      r <<= 4;\n\n      var b;\n\n      // 'a' - 'f'\n      if (c >= 49 && c <= 54) {\n        b = c - 49 + 0xa;\n\n      // 'A' - 'F'\n      } else if (c >= 17 && c <= 22) {\n        b = c - 17 + 0xa;\n\n      // '0' - '9'\n      } else {\n        b = c;\n      }\n\n      r |= b;\n      z |= b;\n    }\n\n    assert(!(z & 0xf0), 'Invalid character in ' + str);\n    return r;\n  }\n\n  BN.prototype._parseHex = function _parseHex (number, start) {\n    // Create possibly bigger array to ensure that it fits the number\n    this.length = Math.ceil((number.length - start) / 6);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    var j, w;\n    // Scan 24-bit chunks and add them to the number\n    var off = 0;\n    for (i = number.length - 6, j = 0; i >= start; i -= 6) {\n      w = parseHex(number, i, i + 6);\n      this.words[j] |= (w << off) & 0x3ffffff;\n      // NOTE: `0x3fffff` is intentional here, 26bits max shift + 24bit hex limb\n      this.words[j + 1] |= w >>> (26 - off) & 0x3fffff;\n      off += 24;\n      if (off >= 26) {\n        off -= 26;\n        j++;\n      }\n    }\n    if (i + 6 !== start) {\n      w = parseHex(number, start, i + 6);\n      this.words[j] |= (w << off) & 0x3ffffff;\n      this.words[j + 1] |= w >>> (26 - off) & 0x3fffff;\n    }\n    this._strip();\n  };\n\n  function parseBase (str, start, end, mul) {\n    var r = 0;\n    var b = 0;\n    var len = Math.min(str.length, end);\n    for (var i = start; i < len; i++) {\n      var c = str.charCodeAt(i) - 48;\n\n      r *= mul;\n\n      // 'a'\n      if (c >= 49) {\n        b = c - 49 + 0xa;\n\n      // 'A'\n      } else if (c >= 17) {\n        b = c - 17 + 0xa;\n\n      // '0' - '9'\n      } else {\n        b = c;\n      }\n      assert(c >= 0 && b < mul, 'Invalid character');\n      r += b;\n    }\n    return r;\n  }\n\n  BN.prototype._parseBase = function _parseBase (number, base, start) {\n    // Initialize as zero\n    this.words = [0];\n    this.length = 1;\n\n    // Find length of limb in base\n    for (var limbLen = 0, limbPow = 1; limbPow <= 0x3ffffff; limbPow *= base) {\n      limbLen++;\n    }\n    limbLen--;\n    limbPow = (limbPow / base) | 0;\n\n    var total = number.length - start;\n    var mod = total % limbLen;\n    var end = Math.min(total, total - mod) + start;\n\n    var word = 0;\n    for (var i = start; i < end; i += limbLen) {\n      word = parseBase(number, i, i + limbLen, base);\n\n      this.imuln(limbPow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    if (mod !== 0) {\n      var pow = 1;\n      word = parseBase(number, i, number.length, base);\n\n      for (i = 0; i < mod; i++) {\n        pow *= base;\n      }\n\n      this.imuln(pow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n  };\n\n  BN.prototype.copy = function copy (dest) {\n    dest.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      dest.words[i] = this.words[i];\n    }\n    dest.length = this.length;\n    dest.negative = this.negative;\n    dest.red = this.red;\n  };\n\n  function move (dest, src) {\n    dest.words = src.words;\n    dest.length = src.length;\n    dest.negative = src.negative;\n    dest.red = src.red;\n  }\n\n  BN.prototype._move = function _move (dest) {\n    move(dest, this);\n  };\n\n  BN.prototype.clone = function clone () {\n    var r = new BN(null);\n    this.copy(r);\n    return r;\n  };\n\n  BN.prototype._expand = function _expand (size) {\n    while (this.length < size) {\n      this.words[this.length++] = 0;\n    }\n    return this;\n  };\n\n  // Remove leading `0` from `this`\n  BN.prototype._strip = function strip () {\n    while (this.length > 1 && this.words[this.length - 1] === 0) {\n      this.length--;\n    }\n    return this._normSign();\n  };\n\n  BN.prototype._normSign = function _normSign () {\n    // -0 = 0\n    if (this.length === 1 && this.words[0] === 0) {\n      this.negative = 0;\n    }\n    return this;\n  };\n\n  // Check Symbol.for because not everywhere where Symbol defined\n  // See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Symbol#Browser_compatibility\n  if (typeof Symbol !== 'undefined' && typeof Symbol.for === 'function') {\n    try {\n      BN.prototype[Symbol.for('nodejs.util.inspect.custom')] = inspect;\n    } catch (e) {\n      BN.prototype.inspect = inspect;\n    }\n  } else {\n    BN.prototype.inspect = inspect;\n  }\n\n  function inspect () {\n    return (this.red ? '<BN-R: ' : '<BN: ') + this.toString(16) + '>';\n  }\n\n  /*\n\n  var zeros = [];\n  var groupSizes = [];\n  var groupBases = [];\n\n  var s = '';\n  var i = -1;\n  while (++i < BN.wordSize) {\n    zeros[i] = s;\n    s += '0';\n  }\n  groupSizes[0] = 0;\n  groupSizes[1] = 0;\n  groupBases[0] = 0;\n  groupBases[1] = 0;\n  var base = 2 - 1;\n  while (++base < 36 + 1) {\n    var groupSize = 0;\n    var groupBase = 1;\n    while (groupBase < (1 << BN.wordSize) / base) {\n      groupBase *= base;\n      groupSize += 1;\n    }\n    groupSizes[base] = groupSize;\n    groupBases[base] = groupBase;\n  }\n\n  */\n\n  var zeros = [\n    '',\n    '0',\n    '00',\n    '000',\n    '0000',\n    '00000',\n    '000000',\n    '0000000',\n    '00000000',\n    '000000000',\n    '0000000000',\n    '00000000000',\n    '000000000000',\n    '0000000000000',\n    '00000000000000',\n    '000000000000000',\n    '0000000000000000',\n    '00000000000000000',\n    '000000000000000000',\n    '0000000000000000000',\n    '00000000000000000000',\n    '000000000000000000000',\n    '0000000000000000000000',\n    '00000000000000000000000',\n    '000000000000000000000000',\n    '0000000000000000000000000'\n  ];\n\n  var groupSizes = [\n    0, 0,\n    25, 16, 12, 11, 10, 9, 8,\n    8, 7, 7, 7, 7, 6, 6,\n    6, 6, 6, 6, 6, 5, 5,\n    5, 5, 5, 5, 5, 5, 5,\n    5, 5, 5, 5, 5, 5, 5\n  ];\n\n  var groupBases = [\n    0, 0,\n    33554432, 43046721, 16777216, 48828125, 60466176, 40353607, 16777216,\n    43046721, 10000000, 19487171, 35831808, 62748517, 7529536, 11390625,\n    16777216, 24137569, 34012224, 47045881, 64000000, 4084101, 5153632,\n    6436343, 7962624, 9765625, 11881376, 14348907, 17210368, 20511149,\n    24300000, 28629151, 33554432, 39135393, 45435424, 52521875, 60466176\n  ];\n\n  BN.prototype.toString = function toString (base, padding) {\n    base = base || 10;\n    padding = padding | 0 || 1;\n\n    var out;\n    if (base === 16 || base === 'hex') {\n      out = '';\n      var off = 0;\n      var carry = 0;\n      for (var i = 0; i < this.length; i++) {\n        var w = this.words[i];\n        var word = (((w << off) | carry) & 0xffffff).toString(16);\n        carry = (w >>> (24 - off)) & 0xffffff;\n        if (carry !== 0 || i !== this.length - 1) {\n          out = zeros[6 - word.length] + word + out;\n        } else {\n          out = word + out;\n        }\n        off += 2;\n        if (off >= 26) {\n          off -= 26;\n          i--;\n        }\n      }\n      if (carry !== 0) {\n        out = carry.toString(16) + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    if (base === (base | 0) && base >= 2 && base <= 36) {\n      // var groupSize = Math.floor(BN.wordSize * Math.LN2 / Math.log(base));\n      var groupSize = groupSizes[base];\n      // var groupBase = Math.pow(base, groupSize);\n      var groupBase = groupBases[base];\n      out = '';\n      var c = this.clone();\n      c.negative = 0;\n      while (!c.isZero()) {\n        var r = c.modrn(groupBase).toString(base);\n        c = c.idivn(groupBase);\n\n        if (!c.isZero()) {\n          out = zeros[groupSize - r.length] + r + out;\n        } else {\n          out = r + out;\n        }\n      }\n      if (this.isZero()) {\n        out = '0' + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    assert(false, 'Base should be between 2 and 36');\n  };\n\n  BN.prototype.toNumber = function toNumber () {\n    var ret = this.words[0];\n    if (this.length === 2) {\n      ret += this.words[1] * 0x4000000;\n    } else if (this.length === 3 && this.words[2] === 0x01) {\n      // NOTE: at this stage it is known that the top bit is set\n      ret += 0x10000000000000 + (this.words[1] * 0x4000000);\n    } else if (this.length > 2) {\n      assert(false, 'Number can only safely store up to 53 bits');\n    }\n    return (this.negative !== 0) ? -ret : ret;\n  };\n\n  BN.prototype.toJSON = function toJSON () {\n    return this.toString(16, 2);\n  };\n\n  if (Buffer) {\n    BN.prototype.toBuffer = function toBuffer (endian, length) {\n      return this.toArrayLike(Buffer, endian, length);\n    };\n  }\n\n  BN.prototype.toArray = function toArray (endian, length) {\n    return this.toArrayLike(Array, endian, length);\n  };\n\n  var allocate = function allocate (ArrayType, size) {\n    if (ArrayType.allocUnsafe) {\n      return ArrayType.allocUnsafe(size);\n    }\n    return new ArrayType(size);\n  };\n\n  BN.prototype.toArrayLike = function toArrayLike (ArrayType, endian, length) {\n    this._strip();\n\n    var byteLength = this.byteLength();\n    var reqLength = length || Math.max(1, byteLength);\n    assert(byteLength <= reqLength, 'byte array longer than desired length');\n    assert(reqLength > 0, 'Requested array length <= 0');\n\n    var res = allocate(ArrayType, reqLength);\n    var postfix = endian === 'le' ? 'LE' : 'BE';\n    this['_toArrayLike' + postfix](res, byteLength);\n    return res;\n  };\n\n  BN.prototype._toArrayLikeLE = function _toArrayLikeLE (res, byteLength) {\n    var position = 0;\n    var carry = 0;\n\n    for (var i = 0, shift = 0; i < this.length; i++) {\n      var word = (this.words[i] << shift) | carry;\n\n      res[position++] = word & 0xff;\n      if (position < res.length) {\n        res[position++] = (word >> 8) & 0xff;\n      }\n      if (position < res.length) {\n        res[position++] = (word >> 16) & 0xff;\n      }\n\n      if (shift === 6) {\n        if (position < res.length) {\n          res[position++] = (word >> 24) & 0xff;\n        }\n        carry = 0;\n        shift = 0;\n      } else {\n        carry = word >>> 24;\n        shift += 2;\n      }\n    }\n\n    if (position < res.length) {\n      res[position++] = carry;\n\n      while (position < res.length) {\n        res[position++] = 0;\n      }\n    }\n  };\n\n  BN.prototype._toArrayLikeBE = function _toArrayLikeBE (res, byteLength) {\n    var position = res.length - 1;\n    var carry = 0;\n\n    for (var i = 0, shift = 0; i < this.length; i++) {\n      var word = (this.words[i] << shift) | carry;\n\n      res[position--] = word & 0xff;\n      if (position >= 0) {\n        res[position--] = (word >> 8) & 0xff;\n      }\n      if (position >= 0) {\n        res[position--] = (word >> 16) & 0xff;\n      }\n\n      if (shift === 6) {\n        if (position >= 0) {\n          res[position--] = (word >> 24) & 0xff;\n        }\n        carry = 0;\n        shift = 0;\n      } else {\n        carry = word >>> 24;\n        shift += 2;\n      }\n    }\n\n    if (position >= 0) {\n      res[position--] = carry;\n\n      while (position >= 0) {\n        res[position--] = 0;\n      }\n    }\n  };\n\n  if (Math.clz32) {\n    BN.prototype._countBits = function _countBits (w) {\n      return 32 - Math.clz32(w);\n    };\n  } else {\n    BN.prototype._countBits = function _countBits (w) {\n      var t = w;\n      var r = 0;\n      if (t >= 0x1000) {\n        r += 13;\n        t >>>= 13;\n      }\n      if (t >= 0x40) {\n        r += 7;\n        t >>>= 7;\n      }\n      if (t >= 0x8) {\n        r += 4;\n        t >>>= 4;\n      }\n      if (t >= 0x02) {\n        r += 2;\n        t >>>= 2;\n      }\n      return r + t;\n    };\n  }\n\n  BN.prototype._zeroBits = function _zeroBits (w) {\n    // Short-cut\n    if (w === 0) return 26;\n\n    var t = w;\n    var r = 0;\n    if ((t & 0x1fff) === 0) {\n      r += 13;\n      t >>>= 13;\n    }\n    if ((t & 0x7f) === 0) {\n      r += 7;\n      t >>>= 7;\n    }\n    if ((t & 0xf) === 0) {\n      r += 4;\n      t >>>= 4;\n    }\n    if ((t & 0x3) === 0) {\n      r += 2;\n      t >>>= 2;\n    }\n    if ((t & 0x1) === 0) {\n      r++;\n    }\n    return r;\n  };\n\n  // Return number of used bits in a BN\n  BN.prototype.bitLength = function bitLength () {\n    var w = this.words[this.length - 1];\n    var hi = this._countBits(w);\n    return (this.length - 1) * 26 + hi;\n  };\n\n  function toBitArray (num) {\n    var w = new Array(num.bitLength());\n\n    for (var bit = 0; bit < w.length; bit++) {\n      var off = (bit / 26) | 0;\n      var wbit = bit % 26;\n\n      w[bit] = (num.words[off] >>> wbit) & 0x01;\n    }\n\n    return w;\n  }\n\n  // Number of trailing zero bits\n  BN.prototype.zeroBits = function zeroBits () {\n    if (this.isZero()) return 0;\n\n    var r = 0;\n    for (var i = 0; i < this.length; i++) {\n      var b = this._zeroBits(this.words[i]);\n      r += b;\n      if (b !== 26) break;\n    }\n    return r;\n  };\n\n  BN.prototype.byteLength = function byteLength () {\n    return Math.ceil(this.bitLength() / 8);\n  };\n\n  BN.prototype.toTwos = function toTwos (width) {\n    if (this.negative !== 0) {\n      return this.abs().inotn(width).iaddn(1);\n    }\n    return this.clone();\n  };\n\n  BN.prototype.fromTwos = function fromTwos (width) {\n    if (this.testn(width - 1)) {\n      return this.notn(width).iaddn(1).ineg();\n    }\n    return this.clone();\n  };\n\n  BN.prototype.isNeg = function isNeg () {\n    return this.negative !== 0;\n  };\n\n  // Return negative clone of `this`\n  BN.prototype.neg = function neg () {\n    return this.clone().ineg();\n  };\n\n  BN.prototype.ineg = function ineg () {\n    if (!this.isZero()) {\n      this.negative ^= 1;\n    }\n\n    return this;\n  };\n\n  // Or `num` with `this` in-place\n  BN.prototype.iuor = function iuor (num) {\n    while (this.length < num.length) {\n      this.words[this.length++] = 0;\n    }\n\n    for (var i = 0; i < num.length; i++) {\n      this.words[i] = this.words[i] | num.words[i];\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.ior = function ior (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuor(num);\n  };\n\n  // Or `num` with `this`\n  BN.prototype.or = function or (num) {\n    if (this.length > num.length) return this.clone().ior(num);\n    return num.clone().ior(this);\n  };\n\n  BN.prototype.uor = function uor (num) {\n    if (this.length > num.length) return this.clone().iuor(num);\n    return num.clone().iuor(this);\n  };\n\n  // And `num` with `this` in-place\n  BN.prototype.iuand = function iuand (num) {\n    // b = min-length(num, this)\n    var b;\n    if (this.length > num.length) {\n      b = num;\n    } else {\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = this.words[i] & num.words[i];\n    }\n\n    this.length = b.length;\n\n    return this._strip();\n  };\n\n  BN.prototype.iand = function iand (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuand(num);\n  };\n\n  // And `num` with `this`\n  BN.prototype.and = function and (num) {\n    if (this.length > num.length) return this.clone().iand(num);\n    return num.clone().iand(this);\n  };\n\n  BN.prototype.uand = function uand (num) {\n    if (this.length > num.length) return this.clone().iuand(num);\n    return num.clone().iuand(this);\n  };\n\n  // Xor `num` with `this` in-place\n  BN.prototype.iuxor = function iuxor (num) {\n    // a.length > b.length\n    var a;\n    var b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = a.words[i] ^ b.words[i];\n    }\n\n    if (this !== a) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = a.length;\n\n    return this._strip();\n  };\n\n  BN.prototype.ixor = function ixor (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuxor(num);\n  };\n\n  // Xor `num` with `this`\n  BN.prototype.xor = function xor (num) {\n    if (this.length > num.length) return this.clone().ixor(num);\n    return num.clone().ixor(this);\n  };\n\n  BN.prototype.uxor = function uxor (num) {\n    if (this.length > num.length) return this.clone().iuxor(num);\n    return num.clone().iuxor(this);\n  };\n\n  // Not ``this`` with ``width`` bitwidth\n  BN.prototype.inotn = function inotn (width) {\n    assert(typeof width === 'number' && width >= 0);\n\n    var bytesNeeded = Math.ceil(width / 26) | 0;\n    var bitsLeft = width % 26;\n\n    // Extend the buffer with leading zeroes\n    this._expand(bytesNeeded);\n\n    if (bitsLeft > 0) {\n      bytesNeeded--;\n    }\n\n    // Handle complete words\n    for (var i = 0; i < bytesNeeded; i++) {\n      this.words[i] = ~this.words[i] & 0x3ffffff;\n    }\n\n    // Handle the residue\n    if (bitsLeft > 0) {\n      this.words[i] = ~this.words[i] & (0x3ffffff >> (26 - bitsLeft));\n    }\n\n    // And remove leading zeroes\n    return this._strip();\n  };\n\n  BN.prototype.notn = function notn (width) {\n    return this.clone().inotn(width);\n  };\n\n  // Set `bit` of `this`\n  BN.prototype.setn = function setn (bit, val) {\n    assert(typeof bit === 'number' && bit >= 0);\n\n    var off = (bit / 26) | 0;\n    var wbit = bit % 26;\n\n    this._expand(off + 1);\n\n    if (val) {\n      this.words[off] = this.words[off] | (1 << wbit);\n    } else {\n      this.words[off] = this.words[off] & ~(1 << wbit);\n    }\n\n    return this._strip();\n  };\n\n  // Add `num` to `this` in-place\n  BN.prototype.iadd = function iadd (num) {\n    var r;\n\n    // negative + positive\n    if (this.negative !== 0 && num.negative === 0) {\n      this.negative = 0;\n      r = this.isub(num);\n      this.negative ^= 1;\n      return this._normSign();\n\n    // positive + negative\n    } else if (this.negative === 0 && num.negative !== 0) {\n      num.negative = 0;\n      r = this.isub(num);\n      num.negative = 1;\n      return r._normSign();\n    }\n\n    // a.length > b.length\n    var a, b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) + (b.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n\n    this.length = a.length;\n    if (carry !== 0) {\n      this.words[this.length] = carry;\n      this.length++;\n    // Copy the rest of the words\n    } else if (a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    return this;\n  };\n\n  // Add `num` to `this`\n  BN.prototype.add = function add (num) {\n    var res;\n    if (num.negative !== 0 && this.negative === 0) {\n      num.negative = 0;\n      res = this.sub(num);\n      num.negative ^= 1;\n      return res;\n    } else if (num.negative === 0 && this.negative !== 0) {\n      this.negative = 0;\n      res = num.sub(this);\n      this.negative = 1;\n      return res;\n    }\n\n    if (this.length > num.length) return this.clone().iadd(num);\n\n    return num.clone().iadd(this);\n  };\n\n  // Subtract `num` from `this` in-place\n  BN.prototype.isub = function isub (num) {\n    // this - (-num) = this + num\n    if (num.negative !== 0) {\n      num.negative = 0;\n      var r = this.iadd(num);\n      num.negative = 1;\n      return r._normSign();\n\n    // -this - num = -(this + num)\n    } else if (this.negative !== 0) {\n      this.negative = 0;\n      this.iadd(num);\n      this.negative = 1;\n      return this._normSign();\n    }\n\n    // At this point both numbers are positive\n    var cmp = this.cmp(num);\n\n    // Optimization - zeroify\n    if (cmp === 0) {\n      this.negative = 0;\n      this.length = 1;\n      this.words[0] = 0;\n      return this;\n    }\n\n    // a > b\n    var a, b;\n    if (cmp > 0) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) - (b.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n\n    // Copy rest of the words\n    if (carry === 0 && i < a.length && a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = Math.max(this.length, i);\n\n    if (a !== this) {\n      this.negative = 1;\n    }\n\n    return this._strip();\n  };\n\n  // Subtract `num` from `this`\n  BN.prototype.sub = function sub (num) {\n    return this.clone().isub(num);\n  };\n\n  function smallMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    var len = (self.length + num.length) | 0;\n    out.length = len;\n    len = (len - 1) | 0;\n\n    // Peel one iteration (compiler can't do it, because of code complexity)\n    var a = self.words[0] | 0;\n    var b = num.words[0] | 0;\n    var r = a * b;\n\n    var lo = r & 0x3ffffff;\n    var carry = (r / 0x4000000) | 0;\n    out.words[0] = lo;\n\n    for (var k = 1; k < len; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = carry >>> 26;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = (k - j) | 0;\n        a = self.words[i] | 0;\n        b = num.words[j] | 0;\n        r = a * b + rword;\n        ncarry += (r / 0x4000000) | 0;\n        rword = r & 0x3ffffff;\n      }\n      out.words[k] = rword | 0;\n      carry = ncarry | 0;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry | 0;\n    } else {\n      out.length--;\n    }\n\n    return out._strip();\n  }\n\n  // TODO(indutny): it may be reasonable to omit it for users who don't need\n  // to work with 256-bit numbers, otherwise it gives 20% improvement for 256-bit\n  // multiplication (like elliptic secp256k1).\n  var comb10MulTo = function comb10MulTo (self, num, out) {\n    var a = self.words;\n    var b = num.words;\n    var o = out.words;\n    var c = 0;\n    var lo;\n    var mid;\n    var hi;\n    var a0 = a[0] | 0;\n    var al0 = a0 & 0x1fff;\n    var ah0 = a0 >>> 13;\n    var a1 = a[1] | 0;\n    var al1 = a1 & 0x1fff;\n    var ah1 = a1 >>> 13;\n    var a2 = a[2] | 0;\n    var al2 = a2 & 0x1fff;\n    var ah2 = a2 >>> 13;\n    var a3 = a[3] | 0;\n    var al3 = a3 & 0x1fff;\n    var ah3 = a3 >>> 13;\n    var a4 = a[4] | 0;\n    var al4 = a4 & 0x1fff;\n    var ah4 = a4 >>> 13;\n    var a5 = a[5] | 0;\n    var al5 = a5 & 0x1fff;\n    var ah5 = a5 >>> 13;\n    var a6 = a[6] | 0;\n    var al6 = a6 & 0x1fff;\n    var ah6 = a6 >>> 13;\n    var a7 = a[7] | 0;\n    var al7 = a7 & 0x1fff;\n    var ah7 = a7 >>> 13;\n    var a8 = a[8] | 0;\n    var al8 = a8 & 0x1fff;\n    var ah8 = a8 >>> 13;\n    var a9 = a[9] | 0;\n    var al9 = a9 & 0x1fff;\n    var ah9 = a9 >>> 13;\n    var b0 = b[0] | 0;\n    var bl0 = b0 & 0x1fff;\n    var bh0 = b0 >>> 13;\n    var b1 = b[1] | 0;\n    var bl1 = b1 & 0x1fff;\n    var bh1 = b1 >>> 13;\n    var b2 = b[2] | 0;\n    var bl2 = b2 & 0x1fff;\n    var bh2 = b2 >>> 13;\n    var b3 = b[3] | 0;\n    var bl3 = b3 & 0x1fff;\n    var bh3 = b3 >>> 13;\n    var b4 = b[4] | 0;\n    var bl4 = b4 & 0x1fff;\n    var bh4 = b4 >>> 13;\n    var b5 = b[5] | 0;\n    var bl5 = b5 & 0x1fff;\n    var bh5 = b5 >>> 13;\n    var b6 = b[6] | 0;\n    var bl6 = b6 & 0x1fff;\n    var bh6 = b6 >>> 13;\n    var b7 = b[7] | 0;\n    var bl7 = b7 & 0x1fff;\n    var bh7 = b7 >>> 13;\n    var b8 = b[8] | 0;\n    var bl8 = b8 & 0x1fff;\n    var bh8 = b8 >>> 13;\n    var b9 = b[9] | 0;\n    var bl9 = b9 & 0x1fff;\n    var bh9 = b9 >>> 13;\n\n    out.negative = self.negative ^ num.negative;\n    out.length = 19;\n    /* k = 0 */\n    lo = Math.imul(al0, bl0);\n    mid = Math.imul(al0, bh0);\n    mid = (mid + Math.imul(ah0, bl0)) | 0;\n    hi = Math.imul(ah0, bh0);\n    var w0 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w0 >>> 26)) | 0;\n    w0 &= 0x3ffffff;\n    /* k = 1 */\n    lo = Math.imul(al1, bl0);\n    mid = Math.imul(al1, bh0);\n    mid = (mid + Math.imul(ah1, bl0)) | 0;\n    hi = Math.imul(ah1, bh0);\n    lo = (lo + Math.imul(al0, bl1)) | 0;\n    mid = (mid + Math.imul(al0, bh1)) | 0;\n    mid = (mid + Math.imul(ah0, bl1)) | 0;\n    hi = (hi + Math.imul(ah0, bh1)) | 0;\n    var w1 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w1 >>> 26)) | 0;\n    w1 &= 0x3ffffff;\n    /* k = 2 */\n    lo = Math.imul(al2, bl0);\n    mid = Math.imul(al2, bh0);\n    mid = (mid + Math.imul(ah2, bl0)) | 0;\n    hi = Math.imul(ah2, bh0);\n    lo = (lo + Math.imul(al1, bl1)) | 0;\n    mid = (mid + Math.imul(al1, bh1)) | 0;\n    mid = (mid + Math.imul(ah1, bl1)) | 0;\n    hi = (hi + Math.imul(ah1, bh1)) | 0;\n    lo = (lo + Math.imul(al0, bl2)) | 0;\n    mid = (mid + Math.imul(al0, bh2)) | 0;\n    mid = (mid + Math.imul(ah0, bl2)) | 0;\n    hi = (hi + Math.imul(ah0, bh2)) | 0;\n    var w2 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w2 >>> 26)) | 0;\n    w2 &= 0x3ffffff;\n    /* k = 3 */\n    lo = Math.imul(al3, bl0);\n    mid = Math.imul(al3, bh0);\n    mid = (mid + Math.imul(ah3, bl0)) | 0;\n    hi = Math.imul(ah3, bh0);\n    lo = (lo + Math.imul(al2, bl1)) | 0;\n    mid = (mid + Math.imul(al2, bh1)) | 0;\n    mid = (mid + Math.imul(ah2, bl1)) | 0;\n    hi = (hi + Math.imul(ah2, bh1)) | 0;\n    lo = (lo + Math.imul(al1, bl2)) | 0;\n    mid = (mid + Math.imul(al1, bh2)) | 0;\n    mid = (mid + Math.imul(ah1, bl2)) | 0;\n    hi = (hi + Math.imul(ah1, bh2)) | 0;\n    lo = (lo + Math.imul(al0, bl3)) | 0;\n    mid = (mid + Math.imul(al0, bh3)) | 0;\n    mid = (mid + Math.imul(ah0, bl3)) | 0;\n    hi = (hi + Math.imul(ah0, bh3)) | 0;\n    var w3 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w3 >>> 26)) | 0;\n    w3 &= 0x3ffffff;\n    /* k = 4 */\n    lo = Math.imul(al4, bl0);\n    mid = Math.imul(al4, bh0);\n    mid = (mid + Math.imul(ah4, bl0)) | 0;\n    hi = Math.imul(ah4, bh0);\n    lo = (lo + Math.imul(al3, bl1)) | 0;\n    mid = (mid + Math.imul(al3, bh1)) | 0;\n    mid = (mid + Math.imul(ah3, bl1)) | 0;\n    hi = (hi + Math.imul(ah3, bh1)) | 0;\n    lo = (lo + Math.imul(al2, bl2)) | 0;\n    mid = (mid + Math.imul(al2, bh2)) | 0;\n    mid = (mid + Math.imul(ah2, bl2)) | 0;\n    hi = (hi + Math.imul(ah2, bh2)) | 0;\n    lo = (lo + Math.imul(al1, bl3)) | 0;\n    mid = (mid + Math.imul(al1, bh3)) | 0;\n    mid = (mid + Math.imul(ah1, bl3)) | 0;\n    hi = (hi + Math.imul(ah1, bh3)) | 0;\n    lo = (lo + Math.imul(al0, bl4)) | 0;\n    mid = (mid + Math.imul(al0, bh4)) | 0;\n    mid = (mid + Math.imul(ah0, bl4)) | 0;\n    hi = (hi + Math.imul(ah0, bh4)) | 0;\n    var w4 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w4 >>> 26)) | 0;\n    w4 &= 0x3ffffff;\n    /* k = 5 */\n    lo = Math.imul(al5, bl0);\n    mid = Math.imul(al5, bh0);\n    mid = (mid + Math.imul(ah5, bl0)) | 0;\n    hi = Math.imul(ah5, bh0);\n    lo = (lo + Math.imul(al4, bl1)) | 0;\n    mid = (mid + Math.imul(al4, bh1)) | 0;\n    mid = (mid + Math.imul(ah4, bl1)) | 0;\n    hi = (hi + Math.imul(ah4, bh1)) | 0;\n    lo = (lo + Math.imul(al3, bl2)) | 0;\n    mid = (mid + Math.imul(al3, bh2)) | 0;\n    mid = (mid + Math.imul(ah3, bl2)) | 0;\n    hi = (hi + Math.imul(ah3, bh2)) | 0;\n    lo = (lo + Math.imul(al2, bl3)) | 0;\n    mid = (mid + Math.imul(al2, bh3)) | 0;\n    mid = (mid + Math.imul(ah2, bl3)) | 0;\n    hi = (hi + Math.imul(ah2, bh3)) | 0;\n    lo = (lo + Math.imul(al1, bl4)) | 0;\n    mid = (mid + Math.imul(al1, bh4)) | 0;\n    mid = (mid + Math.imul(ah1, bl4)) | 0;\n    hi = (hi + Math.imul(ah1, bh4)) | 0;\n    lo = (lo + Math.imul(al0, bl5)) | 0;\n    mid = (mid + Math.imul(al0, bh5)) | 0;\n    mid = (mid + Math.imul(ah0, bl5)) | 0;\n    hi = (hi + Math.imul(ah0, bh5)) | 0;\n    var w5 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w5 >>> 26)) | 0;\n    w5 &= 0x3ffffff;\n    /* k = 6 */\n    lo = Math.imul(al6, bl0);\n    mid = Math.imul(al6, bh0);\n    mid = (mid + Math.imul(ah6, bl0)) | 0;\n    hi = Math.imul(ah6, bh0);\n    lo = (lo + Math.imul(al5, bl1)) | 0;\n    mid = (mid + Math.imul(al5, bh1)) | 0;\n    mid = (mid + Math.imul(ah5, bl1)) | 0;\n    hi = (hi + Math.imul(ah5, bh1)) | 0;\n    lo = (lo + Math.imul(al4, bl2)) | 0;\n    mid = (mid + Math.imul(al4, bh2)) | 0;\n    mid = (mid + Math.imul(ah4, bl2)) | 0;\n    hi = (hi + Math.imul(ah4, bh2)) | 0;\n    lo = (lo + Math.imul(al3, bl3)) | 0;\n    mid = (mid + Math.imul(al3, bh3)) | 0;\n    mid = (mid + Math.imul(ah3, bl3)) | 0;\n    hi = (hi + Math.imul(ah3, bh3)) | 0;\n    lo = (lo + Math.imul(al2, bl4)) | 0;\n    mid = (mid + Math.imul(al2, bh4)) | 0;\n    mid = (mid + Math.imul(ah2, bl4)) | 0;\n    hi = (hi + Math.imul(ah2, bh4)) | 0;\n    lo = (lo + Math.imul(al1, bl5)) | 0;\n    mid = (mid + Math.imul(al1, bh5)) | 0;\n    mid = (mid + Math.imul(ah1, bl5)) | 0;\n    hi = (hi + Math.imul(ah1, bh5)) | 0;\n    lo = (lo + Math.imul(al0, bl6)) | 0;\n    mid = (mid + Math.imul(al0, bh6)) | 0;\n    mid = (mid + Math.imul(ah0, bl6)) | 0;\n    hi = (hi + Math.imul(ah0, bh6)) | 0;\n    var w6 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w6 >>> 26)) | 0;\n    w6 &= 0x3ffffff;\n    /* k = 7 */\n    lo = Math.imul(al7, bl0);\n    mid = Math.imul(al7, bh0);\n    mid = (mid + Math.imul(ah7, bl0)) | 0;\n    hi = Math.imul(ah7, bh0);\n    lo = (lo + Math.imul(al6, bl1)) | 0;\n    mid = (mid + Math.imul(al6, bh1)) | 0;\n    mid = (mid + Math.imul(ah6, bl1)) | 0;\n    hi = (hi + Math.imul(ah6, bh1)) | 0;\n    lo = (lo + Math.imul(al5, bl2)) | 0;\n    mid = (mid + Math.imul(al5, bh2)) | 0;\n    mid = (mid + Math.imul(ah5, bl2)) | 0;\n    hi = (hi + Math.imul(ah5, bh2)) | 0;\n    lo = (lo + Math.imul(al4, bl3)) | 0;\n    mid = (mid + Math.imul(al4, bh3)) | 0;\n    mid = (mid + Math.imul(ah4, bl3)) | 0;\n    hi = (hi + Math.imul(ah4, bh3)) | 0;\n    lo = (lo + Math.imul(al3, bl4)) | 0;\n    mid = (mid + Math.imul(al3, bh4)) | 0;\n    mid = (mid + Math.imul(ah3, bl4)) | 0;\n    hi = (hi + Math.imul(ah3, bh4)) | 0;\n    lo = (lo + Math.imul(al2, bl5)) | 0;\n    mid = (mid + Math.imul(al2, bh5)) | 0;\n    mid = (mid + Math.imul(ah2, bl5)) | 0;\n    hi = (hi + Math.imul(ah2, bh5)) | 0;\n    lo = (lo + Math.imul(al1, bl6)) | 0;\n    mid = (mid + Math.imul(al1, bh6)) | 0;\n    mid = (mid + Math.imul(ah1, bl6)) | 0;\n    hi = (hi + Math.imul(ah1, bh6)) | 0;\n    lo = (lo + Math.imul(al0, bl7)) | 0;\n    mid = (mid + Math.imul(al0, bh7)) | 0;\n    mid = (mid + Math.imul(ah0, bl7)) | 0;\n    hi = (hi + Math.imul(ah0, bh7)) | 0;\n    var w7 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w7 >>> 26)) | 0;\n    w7 &= 0x3ffffff;\n    /* k = 8 */\n    lo = Math.imul(al8, bl0);\n    mid = Math.imul(al8, bh0);\n    mid = (mid + Math.imul(ah8, bl0)) | 0;\n    hi = Math.imul(ah8, bh0);\n    lo = (lo + Math.imul(al7, bl1)) | 0;\n    mid = (mid + Math.imul(al7, bh1)) | 0;\n    mid = (mid + Math.imul(ah7, bl1)) | 0;\n    hi = (hi + Math.imul(ah7, bh1)) | 0;\n    lo = (lo + Math.imul(al6, bl2)) | 0;\n    mid = (mid + Math.imul(al6, bh2)) | 0;\n    mid = (mid + Math.imul(ah6, bl2)) | 0;\n    hi = (hi + Math.imul(ah6, bh2)) | 0;\n    lo = (lo + Math.imul(al5, bl3)) | 0;\n    mid = (mid + Math.imul(al5, bh3)) | 0;\n    mid = (mid + Math.imul(ah5, bl3)) | 0;\n    hi = (hi + Math.imul(ah5, bh3)) | 0;\n    lo = (lo + Math.imul(al4, bl4)) | 0;\n    mid = (mid + Math.imul(al4, bh4)) | 0;\n    mid = (mid + Math.imul(ah4, bl4)) | 0;\n    hi = (hi + Math.imul(ah4, bh4)) | 0;\n    lo = (lo + Math.imul(al3, bl5)) | 0;\n    mid = (mid + Math.imul(al3, bh5)) | 0;\n    mid = (mid + Math.imul(ah3, bl5)) | 0;\n    hi = (hi + Math.imul(ah3, bh5)) | 0;\n    lo = (lo + Math.imul(al2, bl6)) | 0;\n    mid = (mid + Math.imul(al2, bh6)) | 0;\n    mid = (mid + Math.imul(ah2, bl6)) | 0;\n    hi = (hi + Math.imul(ah2, bh6)) | 0;\n    lo = (lo + Math.imul(al1, bl7)) | 0;\n    mid = (mid + Math.imul(al1, bh7)) | 0;\n    mid = (mid + Math.imul(ah1, bl7)) | 0;\n    hi = (hi + Math.imul(ah1, bh7)) | 0;\n    lo = (lo + Math.imul(al0, bl8)) | 0;\n    mid = (mid + Math.imul(al0, bh8)) | 0;\n    mid = (mid + Math.imul(ah0, bl8)) | 0;\n    hi = (hi + Math.imul(ah0, bh8)) | 0;\n    var w8 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w8 >>> 26)) | 0;\n    w8 &= 0x3ffffff;\n    /* k = 9 */\n    lo = Math.imul(al9, bl0);\n    mid = Math.imul(al9, bh0);\n    mid = (mid + Math.imul(ah9, bl0)) | 0;\n    hi = Math.imul(ah9, bh0);\n    lo = (lo + Math.imul(al8, bl1)) | 0;\n    mid = (mid + Math.imul(al8, bh1)) | 0;\n    mid = (mid + Math.imul(ah8, bl1)) | 0;\n    hi = (hi + Math.imul(ah8, bh1)) | 0;\n    lo = (lo + Math.imul(al7, bl2)) | 0;\n    mid = (mid + Math.imul(al7, bh2)) | 0;\n    mid = (mid + Math.imul(ah7, bl2)) | 0;\n    hi = (hi + Math.imul(ah7, bh2)) | 0;\n    lo = (lo + Math.imul(al6, bl3)) | 0;\n    mid = (mid + Math.imul(al6, bh3)) | 0;\n    mid = (mid + Math.imul(ah6, bl3)) | 0;\n    hi = (hi + Math.imul(ah6, bh3)) | 0;\n    lo = (lo + Math.imul(al5, bl4)) | 0;\n    mid = (mid + Math.imul(al5, bh4)) | 0;\n    mid = (mid + Math.imul(ah5, bl4)) | 0;\n    hi = (hi + Math.imul(ah5, bh4)) | 0;\n    lo = (lo + Math.imul(al4, bl5)) | 0;\n    mid = (mid + Math.imul(al4, bh5)) | 0;\n    mid = (mid + Math.imul(ah4, bl5)) | 0;\n    hi = (hi + Math.imul(ah4, bh5)) | 0;\n    lo = (lo + Math.imul(al3, bl6)) | 0;\n    mid = (mid + Math.imul(al3, bh6)) | 0;\n    mid = (mid + Math.imul(ah3, bl6)) | 0;\n    hi = (hi + Math.imul(ah3, bh6)) | 0;\n    lo = (lo + Math.imul(al2, bl7)) | 0;\n    mid = (mid + Math.imul(al2, bh7)) | 0;\n    mid = (mid + Math.imul(ah2, bl7)) | 0;\n    hi = (hi + Math.imul(ah2, bh7)) | 0;\n    lo = (lo + Math.imul(al1, bl8)) | 0;\n    mid = (mid + Math.imul(al1, bh8)) | 0;\n    mid = (mid + Math.imul(ah1, bl8)) | 0;\n    hi = (hi + Math.imul(ah1, bh8)) | 0;\n    lo = (lo + Math.imul(al0, bl9)) | 0;\n    mid = (mid + Math.imul(al0, bh9)) | 0;\n    mid = (mid + Math.imul(ah0, bl9)) | 0;\n    hi = (hi + Math.imul(ah0, bh9)) | 0;\n    var w9 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w9 >>> 26)) | 0;\n    w9 &= 0x3ffffff;\n    /* k = 10 */\n    lo = Math.imul(al9, bl1);\n    mid = Math.imul(al9, bh1);\n    mid = (mid + Math.imul(ah9, bl1)) | 0;\n    hi = Math.imul(ah9, bh1);\n    lo = (lo + Math.imul(al8, bl2)) | 0;\n    mid = (mid + Math.imul(al8, bh2)) | 0;\n    mid = (mid + Math.imul(ah8, bl2)) | 0;\n    hi = (hi + Math.imul(ah8, bh2)) | 0;\n    lo = (lo + Math.imul(al7, bl3)) | 0;\n    mid = (mid + Math.imul(al7, bh3)) | 0;\n    mid = (mid + Math.imul(ah7, bl3)) | 0;\n    hi = (hi + Math.imul(ah7, bh3)) | 0;\n    lo = (lo + Math.imul(al6, bl4)) | 0;\n    mid = (mid + Math.imul(al6, bh4)) | 0;\n    mid = (mid + Math.imul(ah6, bl4)) | 0;\n    hi = (hi + Math.imul(ah6, bh4)) | 0;\n    lo = (lo + Math.imul(al5, bl5)) | 0;\n    mid = (mid + Math.imul(al5, bh5)) | 0;\n    mid = (mid + Math.imul(ah5, bl5)) | 0;\n    hi = (hi + Math.imul(ah5, bh5)) | 0;\n    lo = (lo + Math.imul(al4, bl6)) | 0;\n    mid = (mid + Math.imul(al4, bh6)) | 0;\n    mid = (mid + Math.imul(ah4, bl6)) | 0;\n    hi = (hi + Math.imul(ah4, bh6)) | 0;\n    lo = (lo + Math.imul(al3, bl7)) | 0;\n    mid = (mid + Math.imul(al3, bh7)) | 0;\n    mid = (mid + Math.imul(ah3, bl7)) | 0;\n    hi = (hi + Math.imul(ah3, bh7)) | 0;\n    lo = (lo + Math.imul(al2, bl8)) | 0;\n    mid = (mid + Math.imul(al2, bh8)) | 0;\n    mid = (mid + Math.imul(ah2, bl8)) | 0;\n    hi = (hi + Math.imul(ah2, bh8)) | 0;\n    lo = (lo + Math.imul(al1, bl9)) | 0;\n    mid = (mid + Math.imul(al1, bh9)) | 0;\n    mid = (mid + Math.imul(ah1, bl9)) | 0;\n    hi = (hi + Math.imul(ah1, bh9)) | 0;\n    var w10 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w10 >>> 26)) | 0;\n    w10 &= 0x3ffffff;\n    /* k = 11 */\n    lo = Math.imul(al9, bl2);\n    mid = Math.imul(al9, bh2);\n    mid = (mid + Math.imul(ah9, bl2)) | 0;\n    hi = Math.imul(ah9, bh2);\n    lo = (lo + Math.imul(al8, bl3)) | 0;\n    mid = (mid + Math.imul(al8, bh3)) | 0;\n    mid = (mid + Math.imul(ah8, bl3)) | 0;\n    hi = (hi + Math.imul(ah8, bh3)) | 0;\n    lo = (lo + Math.imul(al7, bl4)) | 0;\n    mid = (mid + Math.imul(al7, bh4)) | 0;\n    mid = (mid + Math.imul(ah7, bl4)) | 0;\n    hi = (hi + Math.imul(ah7, bh4)) | 0;\n    lo = (lo + Math.imul(al6, bl5)) | 0;\n    mid = (mid + Math.imul(al6, bh5)) | 0;\n    mid = (mid + Math.imul(ah6, bl5)) | 0;\n    hi = (hi + Math.imul(ah6, bh5)) | 0;\n    lo = (lo + Math.imul(al5, bl6)) | 0;\n    mid = (mid + Math.imul(al5, bh6)) | 0;\n    mid = (mid + Math.imul(ah5, bl6)) | 0;\n    hi = (hi + Math.imul(ah5, bh6)) | 0;\n    lo = (lo + Math.imul(al4, bl7)) | 0;\n    mid = (mid + Math.imul(al4, bh7)) | 0;\n    mid = (mid + Math.imul(ah4, bl7)) | 0;\n    hi = (hi + Math.imul(ah4, bh7)) | 0;\n    lo = (lo + Math.imul(al3, bl8)) | 0;\n    mid = (mid + Math.imul(al3, bh8)) | 0;\n    mid = (mid + Math.imul(ah3, bl8)) | 0;\n    hi = (hi + Math.imul(ah3, bh8)) | 0;\n    lo = (lo + Math.imul(al2, bl9)) | 0;\n    mid = (mid + Math.imul(al2, bh9)) | 0;\n    mid = (mid + Math.imul(ah2, bl9)) | 0;\n    hi = (hi + Math.imul(ah2, bh9)) | 0;\n    var w11 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w11 >>> 26)) | 0;\n    w11 &= 0x3ffffff;\n    /* k = 12 */\n    lo = Math.imul(al9, bl3);\n    mid = Math.imul(al9, bh3);\n    mid = (mid + Math.imul(ah9, bl3)) | 0;\n    hi = Math.imul(ah9, bh3);\n    lo = (lo + Math.imul(al8, bl4)) | 0;\n    mid = (mid + Math.imul(al8, bh4)) | 0;\n    mid = (mid + Math.imul(ah8, bl4)) | 0;\n    hi = (hi + Math.imul(ah8, bh4)) | 0;\n    lo = (lo + Math.imul(al7, bl5)) | 0;\n    mid = (mid + Math.imul(al7, bh5)) | 0;\n    mid = (mid + Math.imul(ah7, bl5)) | 0;\n    hi = (hi + Math.imul(ah7, bh5)) | 0;\n    lo = (lo + Math.imul(al6, bl6)) | 0;\n    mid = (mid + Math.imul(al6, bh6)) | 0;\n    mid = (mid + Math.imul(ah6, bl6)) | 0;\n    hi = (hi + Math.imul(ah6, bh6)) | 0;\n    lo = (lo + Math.imul(al5, bl7)) | 0;\n    mid = (mid + Math.imul(al5, bh7)) | 0;\n    mid = (mid + Math.imul(ah5, bl7)) | 0;\n    hi = (hi + Math.imul(ah5, bh7)) | 0;\n    lo = (lo + Math.imul(al4, bl8)) | 0;\n    mid = (mid + Math.imul(al4, bh8)) | 0;\n    mid = (mid + Math.imul(ah4, bl8)) | 0;\n    hi = (hi + Math.imul(ah4, bh8)) | 0;\n    lo = (lo + Math.imul(al3, bl9)) | 0;\n    mid = (mid + Math.imul(al3, bh9)) | 0;\n    mid = (mid + Math.imul(ah3, bl9)) | 0;\n    hi = (hi + Math.imul(ah3, bh9)) | 0;\n    var w12 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w12 >>> 26)) | 0;\n    w12 &= 0x3ffffff;\n    /* k = 13 */\n    lo = Math.imul(al9, bl4);\n    mid = Math.imul(al9, bh4);\n    mid = (mid + Math.imul(ah9, bl4)) | 0;\n    hi = Math.imul(ah9, bh4);\n    lo = (lo + Math.imul(al8, bl5)) | 0;\n    mid = (mid + Math.imul(al8, bh5)) | 0;\n    mid = (mid + Math.imul(ah8, bl5)) | 0;\n    hi = (hi + Math.imul(ah8, bh5)) | 0;\n    lo = (lo + Math.imul(al7, bl6)) | 0;\n    mid = (mid + Math.imul(al7, bh6)) | 0;\n    mid = (mid + Math.imul(ah7, bl6)) | 0;\n    hi = (hi + Math.imul(ah7, bh6)) | 0;\n    lo = (lo + Math.imul(al6, bl7)) | 0;\n    mid = (mid + Math.imul(al6, bh7)) | 0;\n    mid = (mid + Math.imul(ah6, bl7)) | 0;\n    hi = (hi + Math.imul(ah6, bh7)) | 0;\n    lo = (lo + Math.imul(al5, bl8)) | 0;\n    mid = (mid + Math.imul(al5, bh8)) | 0;\n    mid = (mid + Math.imul(ah5, bl8)) | 0;\n    hi = (hi + Math.imul(ah5, bh8)) | 0;\n    lo = (lo + Math.imul(al4, bl9)) | 0;\n    mid = (mid + Math.imul(al4, bh9)) | 0;\n    mid = (mid + Math.imul(ah4, bl9)) | 0;\n    hi = (hi + Math.imul(ah4, bh9)) | 0;\n    var w13 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w13 >>> 26)) | 0;\n    w13 &= 0x3ffffff;\n    /* k = 14 */\n    lo = Math.imul(al9, bl5);\n    mid = Math.imul(al9, bh5);\n    mid = (mid + Math.imul(ah9, bl5)) | 0;\n    hi = Math.imul(ah9, bh5);\n    lo = (lo + Math.imul(al8, bl6)) | 0;\n    mid = (mid + Math.imul(al8, bh6)) | 0;\n    mid = (mid + Math.imul(ah8, bl6)) | 0;\n    hi = (hi + Math.imul(ah8, bh6)) | 0;\n    lo = (lo + Math.imul(al7, bl7)) | 0;\n    mid = (mid + Math.imul(al7, bh7)) | 0;\n    mid = (mid + Math.imul(ah7, bl7)) | 0;\n    hi = (hi + Math.imul(ah7, bh7)) | 0;\n    lo = (lo + Math.imul(al6, bl8)) | 0;\n    mid = (mid + Math.imul(al6, bh8)) | 0;\n    mid = (mid + Math.imul(ah6, bl8)) | 0;\n    hi = (hi + Math.imul(ah6, bh8)) | 0;\n    lo = (lo + Math.imul(al5, bl9)) | 0;\n    mid = (mid + Math.imul(al5, bh9)) | 0;\n    mid = (mid + Math.imul(ah5, bl9)) | 0;\n    hi = (hi + Math.imul(ah5, bh9)) | 0;\n    var w14 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w14 >>> 26)) | 0;\n    w14 &= 0x3ffffff;\n    /* k = 15 */\n    lo = Math.imul(al9, bl6);\n    mid = Math.imul(al9, bh6);\n    mid = (mid + Math.imul(ah9, bl6)) | 0;\n    hi = Math.imul(ah9, bh6);\n    lo = (lo + Math.imul(al8, bl7)) | 0;\n    mid = (mid + Math.imul(al8, bh7)) | 0;\n    mid = (mid + Math.imul(ah8, bl7)) | 0;\n    hi = (hi + Math.imul(ah8, bh7)) | 0;\n    lo = (lo + Math.imul(al7, bl8)) | 0;\n    mid = (mid + Math.imul(al7, bh8)) | 0;\n    mid = (mid + Math.imul(ah7, bl8)) | 0;\n    hi = (hi + Math.imul(ah7, bh8)) | 0;\n    lo = (lo + Math.imul(al6, bl9)) | 0;\n    mid = (mid + Math.imul(al6, bh9)) | 0;\n    mid = (mid + Math.imul(ah6, bl9)) | 0;\n    hi = (hi + Math.imul(ah6, bh9)) | 0;\n    var w15 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w15 >>> 26)) | 0;\n    w15 &= 0x3ffffff;\n    /* k = 16 */\n    lo = Math.imul(al9, bl7);\n    mid = Math.imul(al9, bh7);\n    mid = (mid + Math.imul(ah9, bl7)) | 0;\n    hi = Math.imul(ah9, bh7);\n    lo = (lo + Math.imul(al8, bl8)) | 0;\n    mid = (mid + Math.imul(al8, bh8)) | 0;\n    mid = (mid + Math.imul(ah8, bl8)) | 0;\n    hi = (hi + Math.imul(ah8, bh8)) | 0;\n    lo = (lo + Math.imul(al7, bl9)) | 0;\n    mid = (mid + Math.imul(al7, bh9)) | 0;\n    mid = (mid + Math.imul(ah7, bl9)) | 0;\n    hi = (hi + Math.imul(ah7, bh9)) | 0;\n    var w16 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w16 >>> 26)) | 0;\n    w16 &= 0x3ffffff;\n    /* k = 17 */\n    lo = Math.imul(al9, bl8);\n    mid = Math.imul(al9, bh8);\n    mid = (mid + Math.imul(ah9, bl8)) | 0;\n    hi = Math.imul(ah9, bh8);\n    lo = (lo + Math.imul(al8, bl9)) | 0;\n    mid = (mid + Math.imul(al8, bh9)) | 0;\n    mid = (mid + Math.imul(ah8, bl9)) | 0;\n    hi = (hi + Math.imul(ah8, bh9)) | 0;\n    var w17 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w17 >>> 26)) | 0;\n    w17 &= 0x3ffffff;\n    /* k = 18 */\n    lo = Math.imul(al9, bl9);\n    mid = Math.imul(al9, bh9);\n    mid = (mid + Math.imul(ah9, bl9)) | 0;\n    hi = Math.imul(ah9, bh9);\n    var w18 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w18 >>> 26)) | 0;\n    w18 &= 0x3ffffff;\n    o[0] = w0;\n    o[1] = w1;\n    o[2] = w2;\n    o[3] = w3;\n    o[4] = w4;\n    o[5] = w5;\n    o[6] = w6;\n    o[7] = w7;\n    o[8] = w8;\n    o[9] = w9;\n    o[10] = w10;\n    o[11] = w11;\n    o[12] = w12;\n    o[13] = w13;\n    o[14] = w14;\n    o[15] = w15;\n    o[16] = w16;\n    o[17] = w17;\n    o[18] = w18;\n    if (c !== 0) {\n      o[19] = c;\n      out.length++;\n    }\n    return out;\n  };\n\n  // Polyfill comb\n  if (!Math.imul) {\n    comb10MulTo = smallMulTo;\n  }\n\n  function bigMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    out.length = self.length + num.length;\n\n    var carry = 0;\n    var hncarry = 0;\n    for (var k = 0; k < out.length - 1; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = hncarry;\n      hncarry = 0;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = k - j;\n        var a = self.words[i] | 0;\n        var b = num.words[j] | 0;\n        var r = a * b;\n\n        var lo = r & 0x3ffffff;\n        ncarry = (ncarry + ((r / 0x4000000) | 0)) | 0;\n        lo = (lo + rword) | 0;\n        rword = lo & 0x3ffffff;\n        ncarry = (ncarry + (lo >>> 26)) | 0;\n\n        hncarry += ncarry >>> 26;\n        ncarry &= 0x3ffffff;\n      }\n      out.words[k] = rword;\n      carry = ncarry;\n      ncarry = hncarry;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry;\n    } else {\n      out.length--;\n    }\n\n    return out._strip();\n  }\n\n  function jumboMulTo (self, num, out) {\n    // Temporary disable, see https://github.com/indutny/bn.js/issues/211\n    // var fftm = new FFTM();\n    // return fftm.mulp(self, num, out);\n    return bigMulTo(self, num, out);\n  }\n\n  BN.prototype.mulTo = function mulTo (num, out) {\n    var res;\n    var len = this.length + num.length;\n    if (this.length === 10 && num.length === 10) {\n      res = comb10MulTo(this, num, out);\n    } else if (len < 63) {\n      res = smallMulTo(this, num, out);\n    } else if (len < 1024) {\n      res = bigMulTo(this, num, out);\n    } else {\n      res = jumboMulTo(this, num, out);\n    }\n\n    return res;\n  };\n\n  // Cooley-Tukey algorithm for FFT\n  // slightly revisited to rely on looping instead of recursion\n\n  function FFTM (x, y) {\n    this.x = x;\n    this.y = y;\n  }\n\n  FFTM.prototype.makeRBT = function makeRBT (N) {\n    var t = new Array(N);\n    var l = BN.prototype._countBits(N) - 1;\n    for (var i = 0; i < N; i++) {\n      t[i] = this.revBin(i, l, N);\n    }\n\n    return t;\n  };\n\n  // Returns binary-reversed representation of `x`\n  FFTM.prototype.revBin = function revBin (x, l, N) {\n    if (x === 0 || x === N - 1) return x;\n\n    var rb = 0;\n    for (var i = 0; i < l; i++) {\n      rb |= (x & 1) << (l - i - 1);\n      x >>= 1;\n    }\n\n    return rb;\n  };\n\n  // Performs \"tweedling\" phase, therefore 'emulating'\n  // behaviour of the recursive algorithm\n  FFTM.prototype.permute = function permute (rbt, rws, iws, rtws, itws, N) {\n    for (var i = 0; i < N; i++) {\n      rtws[i] = rws[rbt[i]];\n      itws[i] = iws[rbt[i]];\n    }\n  };\n\n  FFTM.prototype.transform = function transform (rws, iws, rtws, itws, N, rbt) {\n    this.permute(rbt, rws, iws, rtws, itws, N);\n\n    for (var s = 1; s < N; s <<= 1) {\n      var l = s << 1;\n\n      var rtwdf = Math.cos(2 * Math.PI / l);\n      var itwdf = Math.sin(2 * Math.PI / l);\n\n      for (var p = 0; p < N; p += l) {\n        var rtwdf_ = rtwdf;\n        var itwdf_ = itwdf;\n\n        for (var j = 0; j < s; j++) {\n          var re = rtws[p + j];\n          var ie = itws[p + j];\n\n          var ro = rtws[p + j + s];\n          var io = itws[p + j + s];\n\n          var rx = rtwdf_ * ro - itwdf_ * io;\n\n          io = rtwdf_ * io + itwdf_ * ro;\n          ro = rx;\n\n          rtws[p + j] = re + ro;\n          itws[p + j] = ie + io;\n\n          rtws[p + j + s] = re - ro;\n          itws[p + j + s] = ie - io;\n\n          /* jshint maxdepth : false */\n          if (j !== l) {\n            rx = rtwdf * rtwdf_ - itwdf * itwdf_;\n\n            itwdf_ = rtwdf * itwdf_ + itwdf * rtwdf_;\n            rtwdf_ = rx;\n          }\n        }\n      }\n    }\n  };\n\n  FFTM.prototype.guessLen13b = function guessLen13b (n, m) {\n    var N = Math.max(m, n) | 1;\n    var odd = N & 1;\n    var i = 0;\n    for (N = N / 2 | 0; N; N = N >>> 1) {\n      i++;\n    }\n\n    return 1 << i + 1 + odd;\n  };\n\n  FFTM.prototype.conjugate = function conjugate (rws, iws, N) {\n    if (N <= 1) return;\n\n    for (var i = 0; i < N / 2; i++) {\n      var t = rws[i];\n\n      rws[i] = rws[N - i - 1];\n      rws[N - i - 1] = t;\n\n      t = iws[i];\n\n      iws[i] = -iws[N - i - 1];\n      iws[N - i - 1] = -t;\n    }\n  };\n\n  FFTM.prototype.normalize13b = function normalize13b (ws, N) {\n    var carry = 0;\n    for (var i = 0; i < N / 2; i++) {\n      var w = Math.round(ws[2 * i + 1] / N) * 0x2000 +\n        Math.round(ws[2 * i] / N) +\n        carry;\n\n      ws[i] = w & 0x3ffffff;\n\n      if (w < 0x4000000) {\n        carry = 0;\n      } else {\n        carry = w / 0x4000000 | 0;\n      }\n    }\n\n    return ws;\n  };\n\n  FFTM.prototype.convert13b = function convert13b (ws, len, rws, N) {\n    var carry = 0;\n    for (var i = 0; i < len; i++) {\n      carry = carry + (ws[i] | 0);\n\n      rws[2 * i] = carry & 0x1fff; carry = carry >>> 13;\n      rws[2 * i + 1] = carry & 0x1fff; carry = carry >>> 13;\n    }\n\n    // Pad with zeroes\n    for (i = 2 * len; i < N; ++i) {\n      rws[i] = 0;\n    }\n\n    assert(carry === 0);\n    assert((carry & ~0x1fff) === 0);\n  };\n\n  FFTM.prototype.stub = function stub (N) {\n    var ph = new Array(N);\n    for (var i = 0; i < N; i++) {\n      ph[i] = 0;\n    }\n\n    return ph;\n  };\n\n  FFTM.prototype.mulp = function mulp (x, y, out) {\n    var N = 2 * this.guessLen13b(x.length, y.length);\n\n    var rbt = this.makeRBT(N);\n\n    var _ = this.stub(N);\n\n    var rws = new Array(N);\n    var rwst = new Array(N);\n    var iwst = new Array(N);\n\n    var nrws = new Array(N);\n    var nrwst = new Array(N);\n    var niwst = new Array(N);\n\n    var rmws = out.words;\n    rmws.length = N;\n\n    this.convert13b(x.words, x.length, rws, N);\n    this.convert13b(y.words, y.length, nrws, N);\n\n    this.transform(rws, _, rwst, iwst, N, rbt);\n    this.transform(nrws, _, nrwst, niwst, N, rbt);\n\n    for (var i = 0; i < N; i++) {\n      var rx = rwst[i] * nrwst[i] - iwst[i] * niwst[i];\n      iwst[i] = rwst[i] * niwst[i] + iwst[i] * nrwst[i];\n      rwst[i] = rx;\n    }\n\n    this.conjugate(rwst, iwst, N);\n    this.transform(rwst, iwst, rmws, _, N, rbt);\n    this.conjugate(rmws, _, N);\n    this.normalize13b(rmws, N);\n\n    out.negative = x.negative ^ y.negative;\n    out.length = x.length + y.length;\n    return out._strip();\n  };\n\n  // Multiply `this` by `num`\n  BN.prototype.mul = function mul (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return this.mulTo(num, out);\n  };\n\n  // Multiply employing FFT\n  BN.prototype.mulf = function mulf (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return jumboMulTo(this, num, out);\n  };\n\n  // In-place Multiplication\n  BN.prototype.imul = function imul (num) {\n    return this.clone().mulTo(num, this);\n  };\n\n  BN.prototype.imuln = function imuln (num) {\n    var isNegNum = num < 0;\n    if (isNegNum) num = -num;\n\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n\n    // Carry\n    var carry = 0;\n    for (var i = 0; i < this.length; i++) {\n      var w = (this.words[i] | 0) * num;\n      var lo = (w & 0x3ffffff) + (carry & 0x3ffffff);\n      carry >>= 26;\n      carry += (w / 0x4000000) | 0;\n      // NOTE: lo is 27bit maximum\n      carry += lo >>> 26;\n      this.words[i] = lo & 0x3ffffff;\n    }\n\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n\n    return isNegNum ? this.ineg() : this;\n  };\n\n  BN.prototype.muln = function muln (num) {\n    return this.clone().imuln(num);\n  };\n\n  // `this` * `this`\n  BN.prototype.sqr = function sqr () {\n    return this.mul(this);\n  };\n\n  // `this` * `this` in-place\n  BN.prototype.isqr = function isqr () {\n    return this.imul(this.clone());\n  };\n\n  // Math.pow(`this`, `num`)\n  BN.prototype.pow = function pow (num) {\n    var w = toBitArray(num);\n    if (w.length === 0) return new BN(1);\n\n    // Skip leading zeroes\n    var res = this;\n    for (var i = 0; i < w.length; i++, res = res.sqr()) {\n      if (w[i] !== 0) break;\n    }\n\n    if (++i < w.length) {\n      for (var q = res.sqr(); i < w.length; i++, q = q.sqr()) {\n        if (w[i] === 0) continue;\n\n        res = res.mul(q);\n      }\n    }\n\n    return res;\n  };\n\n  // Shift-left in-place\n  BN.prototype.iushln = function iushln (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n    var carryMask = (0x3ffffff >>> (26 - r)) << (26 - r);\n    var i;\n\n    if (r !== 0) {\n      var carry = 0;\n\n      for (i = 0; i < this.length; i++) {\n        var newCarry = this.words[i] & carryMask;\n        var c = ((this.words[i] | 0) - newCarry) << r;\n        this.words[i] = c | carry;\n        carry = newCarry >>> (26 - r);\n      }\n\n      if (carry) {\n        this.words[i] = carry;\n        this.length++;\n      }\n    }\n\n    if (s !== 0) {\n      for (i = this.length - 1; i >= 0; i--) {\n        this.words[i + s] = this.words[i];\n      }\n\n      for (i = 0; i < s; i++) {\n        this.words[i] = 0;\n      }\n\n      this.length += s;\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.ishln = function ishln (bits) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushln(bits);\n  };\n\n  // Shift-right in-place\n  // NOTE: `hint` is a lowest bit before trailing zeroes\n  // NOTE: if `extended` is present - it will be filled with destroyed bits\n  BN.prototype.iushrn = function iushrn (bits, hint, extended) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var h;\n    if (hint) {\n      h = (hint - (hint % 26)) / 26;\n    } else {\n      h = 0;\n    }\n\n    var r = bits % 26;\n    var s = Math.min((bits - r) / 26, this.length);\n    var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n    var maskedWords = extended;\n\n    h -= s;\n    h = Math.max(0, h);\n\n    // Extended mode, copy masked part\n    if (maskedWords) {\n      for (var i = 0; i < s; i++) {\n        maskedWords.words[i] = this.words[i];\n      }\n      maskedWords.length = s;\n    }\n\n    if (s === 0) {\n      // No-op, we should not move anything at all\n    } else if (this.length > s) {\n      this.length -= s;\n      for (i = 0; i < this.length; i++) {\n        this.words[i] = this.words[i + s];\n      }\n    } else {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    var carry = 0;\n    for (i = this.length - 1; i >= 0 && (carry !== 0 || i >= h); i--) {\n      var word = this.words[i] | 0;\n      this.words[i] = (carry << (26 - r)) | (word >>> r);\n      carry = word & mask;\n    }\n\n    // Push carried bits as a mask\n    if (maskedWords && carry !== 0) {\n      maskedWords.words[maskedWords.length++] = carry;\n    }\n\n    if (this.length === 0) {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.ishrn = function ishrn (bits, hint, extended) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushrn(bits, hint, extended);\n  };\n\n  // Shift-left\n  BN.prototype.shln = function shln (bits) {\n    return this.clone().ishln(bits);\n  };\n\n  BN.prototype.ushln = function ushln (bits) {\n    return this.clone().iushln(bits);\n  };\n\n  // Shift-right\n  BN.prototype.shrn = function shrn (bits) {\n    return this.clone().ishrn(bits);\n  };\n\n  BN.prototype.ushrn = function ushrn (bits) {\n    return this.clone().iushrn(bits);\n  };\n\n  // Test if n bit is set\n  BN.prototype.testn = function testn (bit) {\n    assert(typeof bit === 'number' && bit >= 0);\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) return false;\n\n    // Check bit and return\n    var w = this.words[s];\n\n    return !!(w & q);\n  };\n\n  // Return only lowers bits of number (in-place)\n  BN.prototype.imaskn = function imaskn (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n\n    assert(this.negative === 0, 'imaskn works only with positive numbers');\n\n    if (this.length <= s) {\n      return this;\n    }\n\n    if (r !== 0) {\n      s++;\n    }\n    this.length = Math.min(s, this.length);\n\n    if (r !== 0) {\n      var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n      this.words[this.length - 1] &= mask;\n    }\n\n    return this._strip();\n  };\n\n  // Return only lowers bits of number\n  BN.prototype.maskn = function maskn (bits) {\n    return this.clone().imaskn(bits);\n  };\n\n  // Add plain number `num` to `this`\n  BN.prototype.iaddn = function iaddn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.isubn(-num);\n\n    // Possible sign change\n    if (this.negative !== 0) {\n      if (this.length === 1 && (this.words[0] | 0) <= num) {\n        this.words[0] = num - (this.words[0] | 0);\n        this.negative = 0;\n        return this;\n      }\n\n      this.negative = 0;\n      this.isubn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    // Add without checks\n    return this._iaddn(num);\n  };\n\n  BN.prototype._iaddn = function _iaddn (num) {\n    this.words[0] += num;\n\n    // Carry\n    for (var i = 0; i < this.length && this.words[i] >= 0x4000000; i++) {\n      this.words[i] -= 0x4000000;\n      if (i === this.length - 1) {\n        this.words[i + 1] = 1;\n      } else {\n        this.words[i + 1]++;\n      }\n    }\n    this.length = Math.max(this.length, i + 1);\n\n    return this;\n  };\n\n  // Subtract plain number `num` from `this`\n  BN.prototype.isubn = function isubn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.iaddn(-num);\n\n    if (this.negative !== 0) {\n      this.negative = 0;\n      this.iaddn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    this.words[0] -= num;\n\n    if (this.length === 1 && this.words[0] < 0) {\n      this.words[0] = -this.words[0];\n      this.negative = 1;\n    } else {\n      // Carry\n      for (var i = 0; i < this.length && this.words[i] < 0; i++) {\n        this.words[i] += 0x4000000;\n        this.words[i + 1] -= 1;\n      }\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.addn = function addn (num) {\n    return this.clone().iaddn(num);\n  };\n\n  BN.prototype.subn = function subn (num) {\n    return this.clone().isubn(num);\n  };\n\n  BN.prototype.iabs = function iabs () {\n    this.negative = 0;\n\n    return this;\n  };\n\n  BN.prototype.abs = function abs () {\n    return this.clone().iabs();\n  };\n\n  BN.prototype._ishlnsubmul = function _ishlnsubmul (num, mul, shift) {\n    var len = num.length + shift;\n    var i;\n\n    this._expand(len);\n\n    var w;\n    var carry = 0;\n    for (i = 0; i < num.length; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      var right = (num.words[i] | 0) * mul;\n      w -= right & 0x3ffffff;\n      carry = (w >> 26) - ((right / 0x4000000) | 0);\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n    for (; i < this.length - shift; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      carry = w >> 26;\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n\n    if (carry === 0) return this._strip();\n\n    // Subtraction overflow\n    assert(carry === -1);\n    carry = 0;\n    for (i = 0; i < this.length; i++) {\n      w = -(this.words[i] | 0) + carry;\n      carry = w >> 26;\n      this.words[i] = w & 0x3ffffff;\n    }\n    this.negative = 1;\n\n    return this._strip();\n  };\n\n  BN.prototype._wordDiv = function _wordDiv (num, mode) {\n    var shift = this.length - num.length;\n\n    var a = this.clone();\n    var b = num;\n\n    // Normalize\n    var bhi = b.words[b.length - 1] | 0;\n    var bhiBits = this._countBits(bhi);\n    shift = 26 - bhiBits;\n    if (shift !== 0) {\n      b = b.ushln(shift);\n      a.iushln(shift);\n      bhi = b.words[b.length - 1] | 0;\n    }\n\n    // Initialize quotient\n    var m = a.length - b.length;\n    var q;\n\n    if (mode !== 'mod') {\n      q = new BN(null);\n      q.length = m + 1;\n      q.words = new Array(q.length);\n      for (var i = 0; i < q.length; i++) {\n        q.words[i] = 0;\n      }\n    }\n\n    var diff = a.clone()._ishlnsubmul(b, 1, m);\n    if (diff.negative === 0) {\n      a = diff;\n      if (q) {\n        q.words[m] = 1;\n      }\n    }\n\n    for (var j = m - 1; j >= 0; j--) {\n      var qj = (a.words[b.length + j] | 0) * 0x4000000 +\n        (a.words[b.length + j - 1] | 0);\n\n      // NOTE: (qj / bhi) is (0x3ffffff * 0x4000000 + 0x3ffffff) / 0x2000000 max\n      // (0x7ffffff)\n      qj = Math.min((qj / bhi) | 0, 0x3ffffff);\n\n      a._ishlnsubmul(b, qj, j);\n      while (a.negative !== 0) {\n        qj--;\n        a.negative = 0;\n        a._ishlnsubmul(b, 1, j);\n        if (!a.isZero()) {\n          a.negative ^= 1;\n        }\n      }\n      if (q) {\n        q.words[j] = qj;\n      }\n    }\n    if (q) {\n      q._strip();\n    }\n    a._strip();\n\n    // Denormalize\n    if (mode !== 'div' && shift !== 0) {\n      a.iushrn(shift);\n    }\n\n    return {\n      div: q || null,\n      mod: a\n    };\n  };\n\n  // NOTE: 1) `mode` can be set to `mod` to request mod only,\n  //       to `div` to request div only, or be absent to\n  //       request both div & mod\n  //       2) `positive` is true if unsigned mod is requested\n  BN.prototype.divmod = function divmod (num, mode, positive) {\n    assert(!num.isZero());\n\n    if (this.isZero()) {\n      return {\n        div: new BN(0),\n        mod: new BN(0)\n      };\n    }\n\n    var div, mod, res;\n    if (this.negative !== 0 && num.negative === 0) {\n      res = this.neg().divmod(num, mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.iadd(num);\n        }\n      }\n\n      return {\n        div: div,\n        mod: mod\n      };\n    }\n\n    if (this.negative === 0 && num.negative !== 0) {\n      res = this.divmod(num.neg(), mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      return {\n        div: div,\n        mod: res.mod\n      };\n    }\n\n    if ((this.negative & num.negative) !== 0) {\n      res = this.neg().divmod(num.neg(), mode);\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.isub(num);\n        }\n      }\n\n      return {\n        div: res.div,\n        mod: mod\n      };\n    }\n\n    // Both numbers are positive at this point\n\n    // Strip both numbers to approximate shift value\n    if (num.length > this.length || this.cmp(num) < 0) {\n      return {\n        div: new BN(0),\n        mod: this\n      };\n    }\n\n    // Very short reduction\n    if (num.length === 1) {\n      if (mode === 'div') {\n        return {\n          div: this.divn(num.words[0]),\n          mod: null\n        };\n      }\n\n      if (mode === 'mod') {\n        return {\n          div: null,\n          mod: new BN(this.modrn(num.words[0]))\n        };\n      }\n\n      return {\n        div: this.divn(num.words[0]),\n        mod: new BN(this.modrn(num.words[0]))\n      };\n    }\n\n    return this._wordDiv(num, mode);\n  };\n\n  // Find `this` / `num`\n  BN.prototype.div = function div (num) {\n    return this.divmod(num, 'div', false).div;\n  };\n\n  // Find `this` % `num`\n  BN.prototype.mod = function mod (num) {\n    return this.divmod(num, 'mod', false).mod;\n  };\n\n  BN.prototype.umod = function umod (num) {\n    return this.divmod(num, 'mod', true).mod;\n  };\n\n  // Find Round(`this` / `num`)\n  BN.prototype.divRound = function divRound (num) {\n    var dm = this.divmod(num);\n\n    // Fast case - exact division\n    if (dm.mod.isZero()) return dm.div;\n\n    var mod = dm.div.negative !== 0 ? dm.mod.isub(num) : dm.mod;\n\n    var half = num.ushrn(1);\n    var r2 = num.andln(1);\n    var cmp = mod.cmp(half);\n\n    // Round down\n    if (cmp < 0 || (r2 === 1 && cmp === 0)) return dm.div;\n\n    // Round up\n    return dm.div.negative !== 0 ? dm.div.isubn(1) : dm.div.iaddn(1);\n  };\n\n  BN.prototype.modrn = function modrn (num) {\n    var isNegNum = num < 0;\n    if (isNegNum) num = -num;\n\n    assert(num <= 0x3ffffff);\n    var p = (1 << 26) % num;\n\n    var acc = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      acc = (p * acc + (this.words[i] | 0)) % num;\n    }\n\n    return isNegNum ? -acc : acc;\n  };\n\n  // WARNING: DEPRECATED\n  BN.prototype.modn = function modn (num) {\n    return this.modrn(num);\n  };\n\n  // In-place division by number\n  BN.prototype.idivn = function idivn (num) {\n    var isNegNum = num < 0;\n    if (isNegNum) num = -num;\n\n    assert(num <= 0x3ffffff);\n\n    var carry = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var w = (this.words[i] | 0) + carry * 0x4000000;\n      this.words[i] = (w / num) | 0;\n      carry = w % num;\n    }\n\n    this._strip();\n    return isNegNum ? this.ineg() : this;\n  };\n\n  BN.prototype.divn = function divn (num) {\n    return this.clone().idivn(num);\n  };\n\n  BN.prototype.egcd = function egcd (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var x = this;\n    var y = p.clone();\n\n    if (x.negative !== 0) {\n      x = x.umod(p);\n    } else {\n      x = x.clone();\n    }\n\n    // A * x + B * y = x\n    var A = new BN(1);\n    var B = new BN(0);\n\n    // C * x + D * y = y\n    var C = new BN(0);\n    var D = new BN(1);\n\n    var g = 0;\n\n    while (x.isEven() && y.isEven()) {\n      x.iushrn(1);\n      y.iushrn(1);\n      ++g;\n    }\n\n    var yp = y.clone();\n    var xp = x.clone();\n\n    while (!x.isZero()) {\n      for (var i = 0, im = 1; (x.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        x.iushrn(i);\n        while (i-- > 0) {\n          if (A.isOdd() || B.isOdd()) {\n            A.iadd(yp);\n            B.isub(xp);\n          }\n\n          A.iushrn(1);\n          B.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (y.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        y.iushrn(j);\n        while (j-- > 0) {\n          if (C.isOdd() || D.isOdd()) {\n            C.iadd(yp);\n            D.isub(xp);\n          }\n\n          C.iushrn(1);\n          D.iushrn(1);\n        }\n      }\n\n      if (x.cmp(y) >= 0) {\n        x.isub(y);\n        A.isub(C);\n        B.isub(D);\n      } else {\n        y.isub(x);\n        C.isub(A);\n        D.isub(B);\n      }\n    }\n\n    return {\n      a: C,\n      b: D,\n      gcd: y.iushln(g)\n    };\n  };\n\n  // This is reduced incarnation of the binary EEA\n  // above, designated to invert members of the\n  // _prime_ fields F(p) at a maximal speed\n  BN.prototype._invmp = function _invmp (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var a = this;\n    var b = p.clone();\n\n    if (a.negative !== 0) {\n      a = a.umod(p);\n    } else {\n      a = a.clone();\n    }\n\n    var x1 = new BN(1);\n    var x2 = new BN(0);\n\n    var delta = b.clone();\n\n    while (a.cmpn(1) > 0 && b.cmpn(1) > 0) {\n      for (var i = 0, im = 1; (a.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        a.iushrn(i);\n        while (i-- > 0) {\n          if (x1.isOdd()) {\n            x1.iadd(delta);\n          }\n\n          x1.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (b.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        b.iushrn(j);\n        while (j-- > 0) {\n          if (x2.isOdd()) {\n            x2.iadd(delta);\n          }\n\n          x2.iushrn(1);\n        }\n      }\n\n      if (a.cmp(b) >= 0) {\n        a.isub(b);\n        x1.isub(x2);\n      } else {\n        b.isub(a);\n        x2.isub(x1);\n      }\n    }\n\n    var res;\n    if (a.cmpn(1) === 0) {\n      res = x1;\n    } else {\n      res = x2;\n    }\n\n    if (res.cmpn(0) < 0) {\n      res.iadd(p);\n    }\n\n    return res;\n  };\n\n  BN.prototype.gcd = function gcd (num) {\n    if (this.isZero()) return num.abs();\n    if (num.isZero()) return this.abs();\n\n    var a = this.clone();\n    var b = num.clone();\n    a.negative = 0;\n    b.negative = 0;\n\n    // Remove common factor of two\n    for (var shift = 0; a.isEven() && b.isEven(); shift++) {\n      a.iushrn(1);\n      b.iushrn(1);\n    }\n\n    do {\n      while (a.isEven()) {\n        a.iushrn(1);\n      }\n      while (b.isEven()) {\n        b.iushrn(1);\n      }\n\n      var r = a.cmp(b);\n      if (r < 0) {\n        // Swap `a` and `b` to make `a` always bigger than `b`\n        var t = a;\n        a = b;\n        b = t;\n      } else if (r === 0 || b.cmpn(1) === 0) {\n        break;\n      }\n\n      a.isub(b);\n    } while (true);\n\n    return b.iushln(shift);\n  };\n\n  // Invert number in the field F(num)\n  BN.prototype.invm = function invm (num) {\n    return this.egcd(num).a.umod(num);\n  };\n\n  BN.prototype.isEven = function isEven () {\n    return (this.words[0] & 1) === 0;\n  };\n\n  BN.prototype.isOdd = function isOdd () {\n    return (this.words[0] & 1) === 1;\n  };\n\n  // And first word and num\n  BN.prototype.andln = function andln (num) {\n    return this.words[0] & num;\n  };\n\n  // Increment at the bit position in-line\n  BN.prototype.bincn = function bincn (bit) {\n    assert(typeof bit === 'number');\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) {\n      this._expand(s + 1);\n      this.words[s] |= q;\n      return this;\n    }\n\n    // Add bit and propagate, if needed\n    var carry = q;\n    for (var i = s; carry !== 0 && i < this.length; i++) {\n      var w = this.words[i] | 0;\n      w += carry;\n      carry = w >>> 26;\n      w &= 0x3ffffff;\n      this.words[i] = w;\n    }\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n    return this;\n  };\n\n  BN.prototype.isZero = function isZero () {\n    return this.length === 1 && this.words[0] === 0;\n  };\n\n  BN.prototype.cmpn = function cmpn (num) {\n    var negative = num < 0;\n\n    if (this.negative !== 0 && !negative) return -1;\n    if (this.negative === 0 && negative) return 1;\n\n    this._strip();\n\n    var res;\n    if (this.length > 1) {\n      res = 1;\n    } else {\n      if (negative) {\n        num = -num;\n      }\n\n      assert(num <= 0x3ffffff, 'Number is too big');\n\n      var w = this.words[0] | 0;\n      res = w === num ? 0 : w < num ? -1 : 1;\n    }\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Compare two numbers and return:\n  // 1 - if `this` > `num`\n  // 0 - if `this` == `num`\n  // -1 - if `this` < `num`\n  BN.prototype.cmp = function cmp (num) {\n    if (this.negative !== 0 && num.negative === 0) return -1;\n    if (this.negative === 0 && num.negative !== 0) return 1;\n\n    var res = this.ucmp(num);\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Unsigned comparison\n  BN.prototype.ucmp = function ucmp (num) {\n    // At this point both numbers have the same sign\n    if (this.length > num.length) return 1;\n    if (this.length < num.length) return -1;\n\n    var res = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var a = this.words[i] | 0;\n      var b = num.words[i] | 0;\n\n      if (a === b) continue;\n      if (a < b) {\n        res = -1;\n      } else if (a > b) {\n        res = 1;\n      }\n      break;\n    }\n    return res;\n  };\n\n  BN.prototype.gtn = function gtn (num) {\n    return this.cmpn(num) === 1;\n  };\n\n  BN.prototype.gt = function gt (num) {\n    return this.cmp(num) === 1;\n  };\n\n  BN.prototype.gten = function gten (num) {\n    return this.cmpn(num) >= 0;\n  };\n\n  BN.prototype.gte = function gte (num) {\n    return this.cmp(num) >= 0;\n  };\n\n  BN.prototype.ltn = function ltn (num) {\n    return this.cmpn(num) === -1;\n  };\n\n  BN.prototype.lt = function lt (num) {\n    return this.cmp(num) === -1;\n  };\n\n  BN.prototype.lten = function lten (num) {\n    return this.cmpn(num) <= 0;\n  };\n\n  BN.prototype.lte = function lte (num) {\n    return this.cmp(num) <= 0;\n  };\n\n  BN.prototype.eqn = function eqn (num) {\n    return this.cmpn(num) === 0;\n  };\n\n  BN.prototype.eq = function eq (num) {\n    return this.cmp(num) === 0;\n  };\n\n  //\n  // A reduce context, could be using montgomery or something better, depending\n  // on the `m` itself.\n  //\n  BN.red = function red (num) {\n    return new Red(num);\n  };\n\n  BN.prototype.toRed = function toRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    assert(this.negative === 0, 'red works only with positives');\n    return ctx.convertTo(this)._forceRed(ctx);\n  };\n\n  BN.prototype.fromRed = function fromRed () {\n    assert(this.red, 'fromRed works only with numbers in reduction context');\n    return this.red.convertFrom(this);\n  };\n\n  BN.prototype._forceRed = function _forceRed (ctx) {\n    this.red = ctx;\n    return this;\n  };\n\n  BN.prototype.forceRed = function forceRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    return this._forceRed(ctx);\n  };\n\n  BN.prototype.redAdd = function redAdd (num) {\n    assert(this.red, 'redAdd works only with red numbers');\n    return this.red.add(this, num);\n  };\n\n  BN.prototype.redIAdd = function redIAdd (num) {\n    assert(this.red, 'redIAdd works only with red numbers');\n    return this.red.iadd(this, num);\n  };\n\n  BN.prototype.redSub = function redSub (num) {\n    assert(this.red, 'redSub works only with red numbers');\n    return this.red.sub(this, num);\n  };\n\n  BN.prototype.redISub = function redISub (num) {\n    assert(this.red, 'redISub works only with red numbers');\n    return this.red.isub(this, num);\n  };\n\n  BN.prototype.redShl = function redShl (num) {\n    assert(this.red, 'redShl works only with red numbers');\n    return this.red.shl(this, num);\n  };\n\n  BN.prototype.redMul = function redMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.mul(this, num);\n  };\n\n  BN.prototype.redIMul = function redIMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.imul(this, num);\n  };\n\n  BN.prototype.redSqr = function redSqr () {\n    assert(this.red, 'redSqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqr(this);\n  };\n\n  BN.prototype.redISqr = function redISqr () {\n    assert(this.red, 'redISqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.isqr(this);\n  };\n\n  // Square root over p\n  BN.prototype.redSqrt = function redSqrt () {\n    assert(this.red, 'redSqrt works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqrt(this);\n  };\n\n  BN.prototype.redInvm = function redInvm () {\n    assert(this.red, 'redInvm works only with red numbers');\n    this.red._verify1(this);\n    return this.red.invm(this);\n  };\n\n  // Return negative clone of `this` % `red modulo`\n  BN.prototype.redNeg = function redNeg () {\n    assert(this.red, 'redNeg works only with red numbers');\n    this.red._verify1(this);\n    return this.red.neg(this);\n  };\n\n  BN.prototype.redPow = function redPow (num) {\n    assert(this.red && !num.red, 'redPow(normalNum)');\n    this.red._verify1(this);\n    return this.red.pow(this, num);\n  };\n\n  // Prime numbers with efficient reduction\n  var primes = {\n    k256: null,\n    p224: null,\n    p192: null,\n    p25519: null\n  };\n\n  // Pseudo-Mersenne prime\n  function MPrime (name, p) {\n    // P = 2 ^ N - K\n    this.name = name;\n    this.p = new BN(p, 16);\n    this.n = this.p.bitLength();\n    this.k = new BN(1).iushln(this.n).isub(this.p);\n\n    this.tmp = this._tmp();\n  }\n\n  MPrime.prototype._tmp = function _tmp () {\n    var tmp = new BN(null);\n    tmp.words = new Array(Math.ceil(this.n / 13));\n    return tmp;\n  };\n\n  MPrime.prototype.ireduce = function ireduce (num) {\n    // Assumes that `num` is less than `P^2`\n    // num = HI * (2 ^ N - K) + HI * K + LO = HI * K + LO (mod P)\n    var r = num;\n    var rlen;\n\n    do {\n      this.split(r, this.tmp);\n      r = this.imulK(r);\n      r = r.iadd(this.tmp);\n      rlen = r.bitLength();\n    } while (rlen > this.n);\n\n    var cmp = rlen < this.n ? -1 : r.ucmp(this.p);\n    if (cmp === 0) {\n      r.words[0] = 0;\n      r.length = 1;\n    } else if (cmp > 0) {\n      r.isub(this.p);\n    } else {\n      if (r.strip !== undefined) {\n        // r is a BN v4 instance\n        r.strip();\n      } else {\n        // r is a BN v5 instance\n        r._strip();\n      }\n    }\n\n    return r;\n  };\n\n  MPrime.prototype.split = function split (input, out) {\n    input.iushrn(this.n, 0, out);\n  };\n\n  MPrime.prototype.imulK = function imulK (num) {\n    return num.imul(this.k);\n  };\n\n  function K256 () {\n    MPrime.call(\n      this,\n      'k256',\n      'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f');\n  }\n  inherits(K256, MPrime);\n\n  K256.prototype.split = function split (input, output) {\n    // 256 = 9 * 26 + 22\n    var mask = 0x3fffff;\n\n    var outLen = Math.min(input.length, 9);\n    for (var i = 0; i < outLen; i++) {\n      output.words[i] = input.words[i];\n    }\n    output.length = outLen;\n\n    if (input.length <= 9) {\n      input.words[0] = 0;\n      input.length = 1;\n      return;\n    }\n\n    // Shift by 9 limbs\n    var prev = input.words[9];\n    output.words[output.length++] = prev & mask;\n\n    for (i = 10; i < input.length; i++) {\n      var next = input.words[i] | 0;\n      input.words[i - 10] = ((next & mask) << 4) | (prev >>> 22);\n      prev = next;\n    }\n    prev >>>= 22;\n    input.words[i - 10] = prev;\n    if (prev === 0 && input.length > 10) {\n      input.length -= 10;\n    } else {\n      input.length -= 9;\n    }\n  };\n\n  K256.prototype.imulK = function imulK (num) {\n    // K = 0x1000003d1 = [ 0x40, 0x3d1 ]\n    num.words[num.length] = 0;\n    num.words[num.length + 1] = 0;\n    num.length += 2;\n\n    // bounded at: 0x40 * 0x3ffffff + 0x3d0 = 0x100000390\n    var lo = 0;\n    for (var i = 0; i < num.length; i++) {\n      var w = num.words[i] | 0;\n      lo += w * 0x3d1;\n      num.words[i] = lo & 0x3ffffff;\n      lo = w * 0x40 + ((lo / 0x4000000) | 0);\n    }\n\n    // Fast length reduction\n    if (num.words[num.length - 1] === 0) {\n      num.length--;\n      if (num.words[num.length - 1] === 0) {\n        num.length--;\n      }\n    }\n    return num;\n  };\n\n  function P224 () {\n    MPrime.call(\n      this,\n      'p224',\n      'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001');\n  }\n  inherits(P224, MPrime);\n\n  function P192 () {\n    MPrime.call(\n      this,\n      'p192',\n      'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff');\n  }\n  inherits(P192, MPrime);\n\n  function P25519 () {\n    // 2 ^ 255 - 19\n    MPrime.call(\n      this,\n      '25519',\n      '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed');\n  }\n  inherits(P25519, MPrime);\n\n  P25519.prototype.imulK = function imulK (num) {\n    // K = 0x13\n    var carry = 0;\n    for (var i = 0; i < num.length; i++) {\n      var hi = (num.words[i] | 0) * 0x13 + carry;\n      var lo = hi & 0x3ffffff;\n      hi >>>= 26;\n\n      num.words[i] = lo;\n      carry = hi;\n    }\n    if (carry !== 0) {\n      num.words[num.length++] = carry;\n    }\n    return num;\n  };\n\n  // Exported mostly for testing purposes, use plain name instead\n  BN._prime = function prime (name) {\n    // Cached version of prime\n    if (primes[name]) return primes[name];\n\n    var prime;\n    if (name === 'k256') {\n      prime = new K256();\n    } else if (name === 'p224') {\n      prime = new P224();\n    } else if (name === 'p192') {\n      prime = new P192();\n    } else if (name === 'p25519') {\n      prime = new P25519();\n    } else {\n      throw new Error('Unknown prime ' + name);\n    }\n    primes[name] = prime;\n\n    return prime;\n  };\n\n  //\n  // Base reduction engine\n  //\n  function Red (m) {\n    if (typeof m === 'string') {\n      var prime = BN._prime(m);\n      this.m = prime.p;\n      this.prime = prime;\n    } else {\n      assert(m.gtn(1), 'modulus must be greater than 1');\n      this.m = m;\n      this.prime = null;\n    }\n  }\n\n  Red.prototype._verify1 = function _verify1 (a) {\n    assert(a.negative === 0, 'red works only with positives');\n    assert(a.red, 'red works only with red numbers');\n  };\n\n  Red.prototype._verify2 = function _verify2 (a, b) {\n    assert((a.negative | b.negative) === 0, 'red works only with positives');\n    assert(a.red && a.red === b.red,\n      'red works only with red numbers');\n  };\n\n  Red.prototype.imod = function imod (a) {\n    if (this.prime) return this.prime.ireduce(a)._forceRed(this);\n\n    move(a, a.umod(this.m)._forceRed(this));\n    return a;\n  };\n\n  Red.prototype.neg = function neg (a) {\n    if (a.isZero()) {\n      return a.clone();\n    }\n\n    return this.m.sub(a)._forceRed(this);\n  };\n\n  Red.prototype.add = function add (a, b) {\n    this._verify2(a, b);\n\n    var res = a.add(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.iadd = function iadd (a, b) {\n    this._verify2(a, b);\n\n    var res = a.iadd(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.sub = function sub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.sub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.isub = function isub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.isub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.shl = function shl (a, num) {\n    this._verify1(a);\n    return this.imod(a.ushln(num));\n  };\n\n  Red.prototype.imul = function imul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.imul(b));\n  };\n\n  Red.prototype.mul = function mul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.mul(b));\n  };\n\n  Red.prototype.isqr = function isqr (a) {\n    return this.imul(a, a.clone());\n  };\n\n  Red.prototype.sqr = function sqr (a) {\n    return this.mul(a, a);\n  };\n\n  Red.prototype.sqrt = function sqrt (a) {\n    if (a.isZero()) return a.clone();\n\n    var mod3 = this.m.andln(3);\n    assert(mod3 % 2 === 1);\n\n    // Fast case\n    if (mod3 === 3) {\n      var pow = this.m.add(new BN(1)).iushrn(2);\n      return this.pow(a, pow);\n    }\n\n    // Tonelli-Shanks algorithm (Totally unoptimized and slow)\n    //\n    // Find Q and S, that Q * 2 ^ S = (P - 1)\n    var q = this.m.subn(1);\n    var s = 0;\n    while (!q.isZero() && q.andln(1) === 0) {\n      s++;\n      q.iushrn(1);\n    }\n    assert(!q.isZero());\n\n    var one = new BN(1).toRed(this);\n    var nOne = one.redNeg();\n\n    // Find quadratic non-residue\n    // NOTE: Max is such because of generalized Riemann hypothesis.\n    var lpow = this.m.subn(1).iushrn(1);\n    var z = this.m.bitLength();\n    z = new BN(2 * z * z).toRed(this);\n\n    while (this.pow(z, lpow).cmp(nOne) !== 0) {\n      z.redIAdd(nOne);\n    }\n\n    var c = this.pow(z, q);\n    var r = this.pow(a, q.addn(1).iushrn(1));\n    var t = this.pow(a, q);\n    var m = s;\n    while (t.cmp(one) !== 0) {\n      var tmp = t;\n      for (var i = 0; tmp.cmp(one) !== 0; i++) {\n        tmp = tmp.redSqr();\n      }\n      assert(i < m);\n      var b = this.pow(c, new BN(1).iushln(m - i - 1));\n\n      r = r.redMul(b);\n      c = b.redSqr();\n      t = t.redMul(c);\n      m = i;\n    }\n\n    return r;\n  };\n\n  Red.prototype.invm = function invm (a) {\n    var inv = a._invmp(this.m);\n    if (inv.negative !== 0) {\n      inv.negative = 0;\n      return this.imod(inv).redNeg();\n    } else {\n      return this.imod(inv);\n    }\n  };\n\n  Red.prototype.pow = function pow (a, num) {\n    if (num.isZero()) return new BN(1).toRed(this);\n    if (num.cmpn(1) === 0) return a.clone();\n\n    var windowSize = 4;\n    var wnd = new Array(1 << windowSize);\n    wnd[0] = new BN(1).toRed(this);\n    wnd[1] = a;\n    for (var i = 2; i < wnd.length; i++) {\n      wnd[i] = this.mul(wnd[i - 1], a);\n    }\n\n    var res = wnd[0];\n    var current = 0;\n    var currentLen = 0;\n    var start = num.bitLength() % 26;\n    if (start === 0) {\n      start = 26;\n    }\n\n    for (i = num.length - 1; i >= 0; i--) {\n      var word = num.words[i];\n      for (var j = start - 1; j >= 0; j--) {\n        var bit = (word >> j) & 1;\n        if (res !== wnd[0]) {\n          res = this.sqr(res);\n        }\n\n        if (bit === 0 && current === 0) {\n          currentLen = 0;\n          continue;\n        }\n\n        current <<= 1;\n        current |= bit;\n        currentLen++;\n        if (currentLen !== windowSize && (i !== 0 || j !== 0)) continue;\n\n        res = this.mul(res, wnd[current]);\n        currentLen = 0;\n        current = 0;\n      }\n      start = 26;\n    }\n\n    return res;\n  };\n\n  Red.prototype.convertTo = function convertTo (num) {\n    var r = num.umod(this.m);\n\n    return r === num ? r.clone() : r;\n  };\n\n  Red.prototype.convertFrom = function convertFrom (num) {\n    var res = num.clone();\n    res.red = null;\n    return res;\n  };\n\n  //\n  // Montgomery method engine\n  //\n\n  BN.mont = function mont (num) {\n    return new Mont(num);\n  };\n\n  function Mont (m) {\n    Red.call(this, m);\n\n    this.shift = this.m.bitLength();\n    if (this.shift % 26 !== 0) {\n      this.shift += 26 - (this.shift % 26);\n    }\n\n    this.r = new BN(1).iushln(this.shift);\n    this.r2 = this.imod(this.r.sqr());\n    this.rinv = this.r._invmp(this.m);\n\n    this.minv = this.rinv.mul(this.r).isubn(1).div(this.m);\n    this.minv = this.minv.umod(this.r);\n    this.minv = this.r.sub(this.minv);\n  }\n  inherits(Mont, Red);\n\n  Mont.prototype.convertTo = function convertTo (num) {\n    return this.imod(num.ushln(this.shift));\n  };\n\n  Mont.prototype.convertFrom = function convertFrom (num) {\n    var r = this.imod(num.mul(this.rinv));\n    r.red = null;\n    return r;\n  };\n\n  Mont.prototype.imul = function imul (a, b) {\n    if (a.isZero() || b.isZero()) {\n      a.words[0] = 0;\n      a.length = 1;\n      return a;\n    }\n\n    var t = a.imul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.mul = function mul (a, b) {\n    if (a.isZero() || b.isZero()) return new BN(0)._forceRed(this);\n\n    var t = a.mul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.invm = function invm (a) {\n    // (AR)^-1 * R^2 = (A^-1 * R^-1) * R^2 = A^-1 * R\n    var res = this.imod(a._invmp(this.m).mul(this.r2));\n    return res._forceRed(this);\n  };\n})(typeof module === 'undefined' || module, this);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.baToJSON = exports.addHexPrefix = exports.toUnsigned = exports.fromSigned = exports.bufferToHex = exports.bufferToInt = exports.toBuffer = exports.unpadHexString = exports.unpadArray = exports.unpadBuffer = exports.setLengthRight = exports.setLengthLeft = exports.zeros = void 0;\nvar ethjsUtil = require(\"ethjs-util\");\nvar BN = require(\"bn.js\");\nvar helpers_1 = require(\"./helpers\");\n/**\n * Returns a buffer filled with 0s.\n * @param bytes the number of bytes the buffer should be\n */\nexports.zeros = function (bytes) {\n    return Buffer.allocUnsafe(bytes).fill(0);\n};\n/**\n * Left Pads a `Buffer` with leading zeros till it has `length` bytes.\n * Or it truncates the beginning if it exceeds.\n * @param msg the value to pad (Buffer)\n * @param length the number of bytes the output should be\n * @return (Buffer)\n */\nexports.setLengthLeft = function (msg, length) {\n    helpers_1.assertIsBuffer(msg);\n    return setLength(msg, length, false);\n};\n/**\n * Right Pads a `Buffer` with trailing zeros till it has `length` bytes.\n * it truncates the end if it exceeds.\n * @param msg the value to pad (Buffer)\n * @param length the number of bytes the output should be\n * @return (Buffer)\n */\nexports.setLengthRight = function (msg, length) {\n    helpers_1.assertIsBuffer(msg);\n    return setLength(msg, length, true);\n};\n/**\n * Pads a `Buffer` with zeros till it has `length` bytes.\n * Truncates the beginning or end of input if its length exceeds `length`.\n * @param msg the value to pad (Buffer)\n * @param length the number of bytes the output should be\n * @param right whether to start padding form the left or right\n * @return (Buffer)\n */\nvar setLength = function (msg, length, right) {\n    var buf = exports.zeros(length);\n    if (right) {\n        if (msg.length < length) {\n            msg.copy(buf);\n            return buf;\n        }\n        return msg.slice(0, length);\n    }\n    else {\n        if (msg.length < length) {\n            msg.copy(buf, length - msg.length);\n            return buf;\n        }\n        return msg.slice(-length);\n    }\n};\n/**\n * Trims leading zeros from a `Buffer`.\n * @param a (Buffer)\n * @return (Buffer)\n */\nexports.unpadBuffer = function (a) {\n    helpers_1.assertIsBuffer(a);\n    return stripZeros(a);\n};\n/**\n * Trims leading zeros from an `Array` (of numbers).\n * @param a (number[])\n * @return (number[])\n */\nexports.unpadArray = function (a) {\n    helpers_1.assertIsArray(a);\n    return stripZeros(a);\n};\n/**\n * Trims leading zeros from a hex-prefixed `String`.\n * @param a (String)\n * @return (String)\n */\nexports.unpadHexString = function (a) {\n    helpers_1.assertIsHexString(a);\n    a = ethjsUtil.stripHexPrefix(a);\n    return stripZeros(a);\n};\n/**\n * Trims leading zeros from a `Buffer`, `String` or `Number[]`.\n * @param a (Buffer|Array|String)\n * @return (Buffer|Array|String)\n */\nvar stripZeros = function (a) {\n    var first = a[0];\n    while (a.length > 0 && first.toString() === '0') {\n        a = a.slice(1);\n        first = a[0];\n    }\n    return a;\n};\n/**\n * Attempts to turn a value into a `Buffer`. As input it supports `Buffer`, `String`, `Number`, null/undefined, `BN` and other objects with a `toArray()` method.\n * @param v the value\n */\nexports.toBuffer = function (v) {\n    if (!Buffer.isBuffer(v)) {\n        if (Array.isArray(v) || v instanceof Uint8Array) {\n            v = Buffer.from(v);\n        }\n        else if (typeof v === 'string') {\n            if (ethjsUtil.isHexString(v)) {\n                v = Buffer.from(ethjsUtil.padToEven(ethjsUtil.stripHexPrefix(v)), 'hex');\n            }\n            else {\n                throw new Error(\"Cannot convert string to buffer. toBuffer only supports 0x-prefixed hex strings and this string was given: \" + v);\n            }\n        }\n        else if (typeof v === 'number') {\n            v = ethjsUtil.intToBuffer(v);\n        }\n        else if (v === null || v === undefined) {\n            v = Buffer.allocUnsafe(0);\n        }\n        else if (BN.isBN(v)) {\n            v = v.toArrayLike(Buffer);\n        }\n        else if (v.toArray) {\n            // converts a BN to a Buffer\n            v = Buffer.from(v.toArray());\n        }\n        else {\n            throw new Error('invalid type');\n        }\n    }\n    return v;\n};\n/**\n * Converts a `Buffer` to a `Number`.\n * @param buf `Buffer` object to convert\n * @throws If the input number exceeds 53 bits.\n */\nexports.bufferToInt = function (buf) {\n    return new BN(exports.toBuffer(buf)).toNumber();\n};\n/**\n * Converts a `Buffer` into a `0x`-prefixed hex `String`.\n * @param buf `Buffer` object to convert\n */\nexports.bufferToHex = function (buf) {\n    buf = exports.toBuffer(buf);\n    return '0x' + buf.toString('hex');\n};\n/**\n * Interprets a `Buffer` as a signed integer and returns a `BN`. Assumes 256-bit numbers.\n * @param num Signed integer value\n */\nexports.fromSigned = function (num) {\n    return new BN(num).fromTwos(256);\n};\n/**\n * Converts a `BN` to an unsigned integer and returns it as a `Buffer`. Assumes 256-bit numbers.\n * @param num\n */\nexports.toUnsigned = function (num) {\n    return Buffer.from(num.toTwos(256).toArray());\n};\n/**\n * Adds \"0x\" to a given `String` if it does not already start with \"0x\".\n */\nexports.addHexPrefix = function (str) {\n    if (typeof str !== 'string') {\n        return str;\n    }\n    return ethjsUtil.isHexPrefixed(str) ? str : '0x' + str;\n};\n/**\n * Converts a `Buffer` or `Array` to JSON.\n * @param ba (Buffer|Array)\n * @return (Array|String|null)\n */\nexports.baToJSON = function (ba) {\n    if (Buffer.isBuffer(ba)) {\n        return \"0x\" + ba.toString('hex');\n    }\n    else if (ba instanceof Array) {\n        var array = [];\n        for (var i = 0; i < ba.length; i++) {\n            array.push(exports.baToJSON(ba[i]));\n        }\n        return array;\n    }\n};\n//# sourceMappingURL=bytes.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.assertIsString = exports.assertIsArray = exports.assertIsBuffer = exports.assertIsHexString = void 0;\nvar ethjsUtil = require(\"ethjs-util\");\n/**\n * Throws if a string is not hex prefixed\n * @param {string} input string to check hex prefix of\n */\nexports.assertIsHexString = function (input) {\n    if (!ethjsUtil.isHexString(input)) {\n        var msg = \"This method only supports 0x-prefixed hex strings but input was: \" + input;\n        throw new Error(msg);\n    }\n};\n/**\n * Throws if input is not a buffer\n * @param {Buffer} input value to check\n */\nexports.assertIsBuffer = function (input) {\n    if (!Buffer.isBuffer(input)) {\n        var msg = \"This method only supports Buffer but input was: \" + input;\n        throw new Error(msg);\n    }\n};\n/**\n * Throws if input is not an array\n * @param {number[]} input value to check\n */\nexports.assertIsArray = function (input) {\n    if (!Array.isArray(input)) {\n        var msg = \"This method only supports number arrays but input was: \" + input;\n        throw new Error(msg);\n    }\n};\n/**\n * Throws if input is not a string\n * @param {string} input value to check\n */\nexports.assertIsString = function (input) {\n    if (typeof input !== 'string') {\n        var msg = \"This method only supports strings but input was: \" + input;\n        throw new Error(msg);\n    }\n};\n//# sourceMappingURL=helpers.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.importPublic = exports.privateToPublic = exports.privateToAddress = exports.publicToAddress = exports.pubToAddress = exports.isValidPublic = exports.isValidPrivate = exports.generateAddress2 = exports.generateAddress = exports.isValidChecksumAddress = exports.toChecksumAddress = exports.isZeroAddress = exports.isValidAddress = exports.zeroAddress = void 0;\nvar ethjsUtil = require(\"ethjs-util\");\nvar _a = require('ethereum-cryptography/secp256k1'), privateKeyVerify = _a.privateKeyVerify, publicKeyCreate = _a.publicKeyCreate, publicKeyVerify = _a.publicKeyVerify, publicKeyConvert = _a.publicKeyConvert;\nvar assert = require(\"assert\");\nvar BN = require(\"bn.js\");\nvar bytes_1 = require(\"./bytes\");\nvar hash_1 = require(\"./hash\");\nvar helpers_1 = require(\"./helpers\");\n/**\n * Returns a zero address.\n */\nexports.zeroAddress = function () {\n    var addressLength = 20;\n    var addr = bytes_1.zeros(addressLength);\n    return bytes_1.bufferToHex(addr);\n};\n/**\n * Checks if the address is a valid. Accepts checksummed addresses too.\n */\nexports.isValidAddress = function (hexAddress) {\n    helpers_1.assertIsHexString(hexAddress);\n    return /^0x[0-9a-fA-F]{40}$/.test(hexAddress);\n};\n/**\n * Checks if a given address is a zero address.\n */\nexports.isZeroAddress = function (hexAddress) {\n    helpers_1.assertIsHexString(hexAddress);\n    var zeroAddr = exports.zeroAddress();\n    return zeroAddr === hexAddress;\n};\n/**\n * Returns a checksummed address.\n *\n * If a eip1191ChainId is provided, the chainId will be included in the checksum calculation. This\n * has the effect of checksummed addresses for one chain having invalid checksums for others.\n * For more details, consult EIP-1191.\n *\n * WARNING: Checksums with and without the chainId will differ. As of 2019-06-26, the most commonly\n * used variation in Ethereum was without the chainId. This may change in the future.\n */\nexports.toChecksumAddress = function (hexAddress, eip1191ChainId) {\n    helpers_1.assertIsHexString(hexAddress);\n    var address = ethjsUtil.stripHexPrefix(hexAddress).toLowerCase();\n    var prefix = eip1191ChainId !== undefined ? eip1191ChainId.toString() + '0x' : '';\n    var hash = hash_1.keccakFromString(prefix + address).toString('hex');\n    var ret = '0x';\n    for (var i = 0; i < address.length; i++) {\n        if (parseInt(hash[i], 16) >= 8) {\n            ret += address[i].toUpperCase();\n        }\n        else {\n            ret += address[i];\n        }\n    }\n    return ret;\n};\n/**\n * Checks if the address is a valid checksummed address.\n *\n * See toChecksumAddress' documentation for details about the eip1191ChainId parameter.\n */\nexports.isValidChecksumAddress = function (hexAddress, eip1191ChainId) {\n    return exports.isValidAddress(hexAddress) && exports.toChecksumAddress(hexAddress, eip1191ChainId) === hexAddress;\n};\n/**\n * Generates an address of a newly created contract.\n * @param from The address which is creating this new address\n * @param nonce The nonce of the from account\n */\nexports.generateAddress = function (from, nonce) {\n    helpers_1.assertIsBuffer(from);\n    helpers_1.assertIsBuffer(nonce);\n    var nonceBN = new BN(nonce);\n    if (nonceBN.isZero()) {\n        // in RLP we want to encode null in the case of zero nonce\n        // read the RLP documentation for an answer if you dare\n        return hash_1.rlphash([from, null]).slice(-20);\n    }\n    // Only take the lower 160bits of the hash\n    return hash_1.rlphash([from, Buffer.from(nonceBN.toArray())]).slice(-20);\n};\n/**\n * Generates an address for a contract created using CREATE2.\n * @param from The address which is creating this new address\n * @param salt A salt\n * @param initCode The init code of the contract being created\n */\nexports.generateAddress2 = function (from, salt, initCode) {\n    helpers_1.assertIsBuffer(from);\n    helpers_1.assertIsBuffer(salt);\n    helpers_1.assertIsBuffer(initCode);\n    assert(from.length === 20);\n    assert(salt.length === 32);\n    var address = hash_1.keccak256(Buffer.concat([Buffer.from('ff', 'hex'), from, salt, hash_1.keccak256(initCode)]));\n    return address.slice(-20);\n};\n/**\n * Checks if the private key satisfies the rules of the curve secp256k1.\n */\nexports.isValidPrivate = function (privateKey) {\n    return privateKeyVerify(privateKey);\n};\n/**\n * Checks if the public key satisfies the rules of the curve secp256k1\n * and the requirements of Ethereum.\n * @param publicKey The two points of an uncompressed key, unless sanitize is enabled\n * @param sanitize Accept public keys in other formats\n */\nexports.isValidPublic = function (publicKey, sanitize) {\n    if (sanitize === void 0) { sanitize = false; }\n    helpers_1.assertIsBuffer(publicKey);\n    if (publicKey.length === 64) {\n        // Convert to SEC1 for secp256k1\n        return publicKeyVerify(Buffer.concat([Buffer.from([4]), publicKey]));\n    }\n    if (!sanitize) {\n        return false;\n    }\n    return publicKeyVerify(publicKey);\n};\n/**\n * Returns the ethereum address of a given public key.\n * Accepts \"Ethereum public keys\" and SEC1 encoded keys.\n * @param pubKey The two points of an uncompressed key, unless sanitize is enabled\n * @param sanitize Accept public keys in other formats\n */\nexports.pubToAddress = function (pubKey, sanitize) {\n    if (sanitize === void 0) { sanitize = false; }\n    helpers_1.assertIsBuffer(pubKey);\n    if (sanitize && pubKey.length !== 64) {\n        pubKey = Buffer.from(publicKeyConvert(pubKey, false).slice(1));\n    }\n    assert(pubKey.length === 64);\n    // Only take the lower 160bits of the hash\n    return hash_1.keccak(pubKey).slice(-20);\n};\nexports.publicToAddress = exports.pubToAddress;\n/**\n * Returns the ethereum address of a given private key.\n * @param privateKey A private key must be 256 bits wide\n */\nexports.privateToAddress = function (privateKey) {\n    return exports.publicToAddress(exports.privateToPublic(privateKey));\n};\n/**\n * Returns the ethereum public key of a given private key.\n * @param privateKey A private key must be 256 bits wide\n */\nexports.privateToPublic = function (privateKey) {\n    helpers_1.assertIsBuffer(privateKey);\n    // skip the type flag and use the X, Y points\n    return Buffer.from(publicKeyCreate(privateKey, false)).slice(1);\n};\n/**\n * Converts a public key to the Ethereum format.\n */\nexports.importPublic = function (publicKey) {\n    helpers_1.assertIsBuffer(publicKey);\n    if (publicKey.length !== 64) {\n        publicKey = Buffer.from(publicKeyConvert(publicKey, false).slice(1));\n    }\n    return publicKey;\n};\n//# sourceMappingURL=account.js.map","\"use strict\";\n/**\n * Re-exports commonly used modules:\n * * Exports [`BN`](https://github.com/indutny/bn.js), [`rlp`](https://github.com/ethereumjs/rlp).\n * @packageDocumentation\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.rlp = exports.BN = void 0;\n// TODO: This can be replaced with a normal ESM import once\n// the new major version of the typescript config package\n// is released and adopted here.\nvar BN = require(\"bn.js\");\nexports.BN = BN;\nvar rlp = require(\"rlp\");\nexports.rlp = rlp;\n//# sourceMappingURL=externals.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.hashPersonalMessage = exports.isValidSignature = exports.fromRpcSig = exports.toRpcSig = exports.ecrecover = exports.ecsign = void 0;\nvar _a = require('ethereum-cryptography/secp256k1'), ecdsaSign = _a.ecdsaSign, ecdsaRecover = _a.ecdsaRecover, publicKeyConvert = _a.publicKeyConvert;\nvar BN = require(\"bn.js\");\nvar bytes_1 = require(\"./bytes\");\nvar hash_1 = require(\"./hash\");\nvar helpers_1 = require(\"./helpers\");\n/**\n * Returns the ECDSA signature of a message hash.\n */\nexports.ecsign = function (msgHash, privateKey, chainId) {\n    var sig = ecdsaSign(msgHash, privateKey);\n    var recovery = sig.recid;\n    var ret = {\n        r: Buffer.from(sig.signature.slice(0, 32)),\n        s: Buffer.from(sig.signature.slice(32, 64)),\n        v: chainId ? recovery + (chainId * 2 + 35) : recovery + 27,\n    };\n    return ret;\n};\n/**\n * ECDSA public key recovery from signature.\n * @returns Recovered public key\n */\nexports.ecrecover = function (msgHash, v, r, s, chainId) {\n    var signature = Buffer.concat([bytes_1.setLengthLeft(r, 32), bytes_1.setLengthLeft(s, 32)], 64);\n    var recovery = calculateSigRecovery(v, chainId);\n    if (!isValidSigRecovery(recovery)) {\n        throw new Error('Invalid signature v value');\n    }\n    var senderPubKey = ecdsaRecover(signature, recovery, msgHash);\n    return Buffer.from(publicKeyConvert(senderPubKey, false).slice(1));\n};\n/**\n * Convert signature parameters into the format of `eth_sign` RPC method.\n * @returns Signature\n */\nexports.toRpcSig = function (v, r, s, chainId) {\n    var recovery = calculateSigRecovery(v, chainId);\n    if (!isValidSigRecovery(recovery)) {\n        throw new Error('Invalid signature v value');\n    }\n    // geth (and the RPC eth_sign method) uses the 65 byte format used by Bitcoin\n    return bytes_1.bufferToHex(Buffer.concat([bytes_1.setLengthLeft(r, 32), bytes_1.setLengthLeft(s, 32), bytes_1.toBuffer(v)]));\n};\n/**\n * Convert signature format of the `eth_sign` RPC method to signature parameters\n * NOTE: all because of a bug in geth: https://github.com/ethereum/go-ethereum/issues/2053\n */\nexports.fromRpcSig = function (sig) {\n    var buf = bytes_1.toBuffer(sig);\n    // NOTE: with potential introduction of chainId this might need to be updated\n    if (buf.length !== 65) {\n        throw new Error('Invalid signature length');\n    }\n    var v = buf[64];\n    // support both versions of `eth_sign` responses\n    if (v < 27) {\n        v += 27;\n    }\n    return {\n        v: v,\n        r: buf.slice(0, 32),\n        s: buf.slice(32, 64),\n    };\n};\n/**\n * Validate a ECDSA signature.\n * @param homesteadOrLater Indicates whether this is being used on either the homestead hardfork or a later one\n */\nexports.isValidSignature = function (v, r, s, homesteadOrLater, chainId) {\n    if (homesteadOrLater === void 0) { homesteadOrLater = true; }\n    var SECP256K1_N_DIV_2 = new BN('7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0', 16);\n    var SECP256K1_N = new BN('fffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd0364141', 16);\n    if (r.length !== 32 || s.length !== 32) {\n        return false;\n    }\n    if (!isValidSigRecovery(calculateSigRecovery(v, chainId))) {\n        return false;\n    }\n    var rBN = new BN(r);\n    var sBN = new BN(s);\n    if (rBN.isZero() || rBN.gt(SECP256K1_N) || sBN.isZero() || sBN.gt(SECP256K1_N)) {\n        return false;\n    }\n    if (homesteadOrLater && sBN.cmp(SECP256K1_N_DIV_2) === 1) {\n        return false;\n    }\n    return true;\n};\n/**\n * Returns the keccak-256 hash of `message`, prefixed with the header used by the `eth_sign` RPC call.\n * The output of this function can be fed into `ecsign` to produce the same signature as the `eth_sign`\n * call for a given `message`, or fed to `ecrecover` along with a signature to recover the public key\n * used to produce the signature.\n */\nexports.hashPersonalMessage = function (message) {\n    helpers_1.assertIsBuffer(message);\n    var prefix = Buffer.from(\"\\u0019Ethereum Signed Message:\\n\" + message.length.toString(), 'utf-8');\n    return hash_1.keccak(Buffer.concat([prefix, message]));\n};\nfunction calculateSigRecovery(v, chainId) {\n    return chainId ? v - (2 * chainId + 35) : v - 27;\n}\nfunction isValidSigRecovery(recovery) {\n    return recovery === 0 || recovery === 1;\n}\n//# sourceMappingURL=signature.js.map","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !exports.hasOwnProperty(p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/// <reference path=\"./@types/ethjs-util/index.ts\"/>\n/**\n * Constants\n */\n__exportStar(require(\"./constants\"), exports);\n/**\n * Public-key cryptography (secp256k1) and addresses\n */\n__exportStar(require(\"./account\"), exports);\n/**\n * Address type\n */\n__exportStar(require(\"./address\"), exports);\n/**\n * Hash functions\n */\n__exportStar(require(\"./hash\"), exports);\n/**\n * ECDSA signature\n */\n__exportStar(require(\"./signature\"), exports);\n/**\n * Utilities for manipulating Buffers, byte arrays, etc.\n */\n__exportStar(require(\"./bytes\"), exports);\n/**\n * Function for definining properties on an object\n */\n__exportStar(require(\"./object\"), exports);\n/**\n * External exports (BN, rlp, secp256k1)\n */\n__exportStar(require(\"./externals\"), exports);\n/**\n * Export ethjs-util methods\n */\n__exportStar(require(\"ethjs-util\"), exports);\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Address = void 0;\nvar assert = require('assert');\nvar BN = require(\"bn.js\");\nvar bytes_1 = require(\"./bytes\");\nvar account_1 = require(\"./account\");\nvar Address = /** @class */ (function () {\n    function Address(buf) {\n        assert(buf.length === 20, 'Invalid address length');\n        this.buf = buf;\n    }\n    /**\n     * Returns the zero address.\n     */\n    Address.zero = function () {\n        return new Address(bytes_1.zeros(20));\n    };\n    /**\n     * Returns an Address object from a hex-encoded string.\n     * @param str - Hex-encoded address\n     */\n    Address.fromString = function (str) {\n        assert(account_1.isValidAddress(str), 'Invalid address');\n        return new Address(bytes_1.toBuffer(str));\n    };\n    /**\n     * Returns an address for a given public key.\n     * @param pubKey The two points of an uncompressed key\n     */\n    Address.fromPublicKey = function (pubKey) {\n        assert(Buffer.isBuffer(pubKey), 'Public key should be Buffer');\n        var buf = account_1.pubToAddress(pubKey);\n        return new Address(buf);\n    };\n    /**\n     * Returns an address for a given private key.\n     * @param privateKey A private key must be 256 bits wide\n     */\n    Address.fromPrivateKey = function (privateKey) {\n        assert(Buffer.isBuffer(privateKey), 'Private key should be Buffer');\n        var buf = account_1.privateToAddress(privateKey);\n        return new Address(buf);\n    };\n    /**\n     * Generates an address for a newly created contract.\n     * @param from The address which is creating this new address\n     * @param nonce The nonce of the from account\n     */\n    Address.generate = function (from, nonce) {\n        assert(BN.isBN(nonce));\n        return new Address(account_1.generateAddress(from.buf, nonce.toArrayLike(Buffer)));\n    };\n    /**\n     * Generates an address for a contract created using CREATE2.\n     * @param from The address which is creating this new address\n     * @param salt A salt\n     * @param initCode The init code of the contract being created\n     */\n    Address.generate2 = function (from, salt, initCode) {\n        assert(Buffer.isBuffer(salt));\n        assert(Buffer.isBuffer(initCode));\n        return new Address(account_1.generateAddress2(from.buf, salt, initCode));\n    };\n    /**\n     * Is address zero.\n     */\n    Address.prototype.isZero = function () {\n        return this.buf.equals(Address.zero().buf);\n    };\n    /**\n     * Returns hex encoding of address.\n     */\n    Address.prototype.toString = function () {\n        return '0x' + this.buf.toString('hex');\n    };\n    return Address;\n}());\nexports.Address = Address;\n//# sourceMappingURL=address.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.KECCAK256_RLP = exports.KECCAK256_RLP_S = exports.KECCAK256_RLP_ARRAY = exports.KECCAK256_RLP_ARRAY_S = exports.KECCAK256_NULL = exports.KECCAK256_NULL_S = exports.TWO_POW256 = exports.MAX_INTEGER = void 0;\nvar Buffer = require('buffer').Buffer;\nvar BN = require(\"bn.js\");\n/**\n * The max integer that this VM can handle\n */\nexports.MAX_INTEGER = new BN('ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff', 16);\n/**\n * 2^256\n */\nexports.TWO_POW256 = new BN('10000000000000000000000000000000000000000000000000000000000000000', 16);\n/**\n * Keccak-256 hash of null\n */\nexports.KECCAK256_NULL_S = 'c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470';\n/**\n * Keccak-256 hash of null\n */\nexports.KECCAK256_NULL = Buffer.from(exports.KECCAK256_NULL_S, 'hex');\n/**\n * Keccak-256 of an RLP of an empty array\n */\nexports.KECCAK256_RLP_ARRAY_S = '1dcc4de8dec75d7aab85b567b6ccd41ad312451b948a7413f0a142fd40d49347';\n/**\n * Keccak-256 of an RLP of an empty array\n */\nexports.KECCAK256_RLP_ARRAY = Buffer.from(exports.KECCAK256_RLP_ARRAY_S, 'hex');\n/**\n * Keccak-256 hash of the RLP of null\n */\nexports.KECCAK256_RLP_S = '56e81f171bcc55a6ff8345e692c0f86e5b48e01b996cadc001622fb5e363b421';\n/**\n * Keccak-256 hash of the RLP of null\n */\nexports.KECCAK256_RLP = Buffer.from(exports.KECCAK256_RLP_S, 'hex');\n//# sourceMappingURL=constants.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.rlphash = exports.ripemd160FromArray = exports.ripemd160FromString = exports.ripemd160 = exports.sha256FromArray = exports.sha256FromString = exports.sha256 = exports.keccakFromArray = exports.keccakFromHexString = exports.keccakFromString = exports.keccak256 = exports.keccak = void 0;\nvar _a = require('ethereum-cryptography/keccak'), keccak224 = _a.keccak224, keccak384 = _a.keccak384, k256 = _a.keccak256, keccak512 = _a.keccak512;\nvar createHash = require('create-hash');\nvar rlp = require(\"rlp\");\nvar bytes_1 = require(\"./bytes\");\nvar helpers_1 = require(\"./helpers\");\n/**\n * Creates Keccak hash of a Buffer input\n * @param a The input data (Buffer)\n * @param bits (number = 256) The Keccak width\n */\nexports.keccak = function (a, bits) {\n    if (bits === void 0) { bits = 256; }\n    helpers_1.assertIsBuffer(a);\n    switch (bits) {\n        case 224: {\n            return keccak224(a);\n        }\n        case 256: {\n            return k256(a);\n        }\n        case 384: {\n            return keccak384(a);\n        }\n        case 512: {\n            return keccak512(a);\n        }\n        default: {\n            throw new Error(\"Invald algorithm: keccak\" + bits);\n        }\n    }\n};\n/**\n * Creates Keccak-256 hash of the input, alias for keccak(a, 256).\n * @param a The input data (Buffer)\n */\nexports.keccak256 = function (a) {\n    return exports.keccak(a);\n};\n/**\n * Creates Keccak hash of a utf-8 string input\n * @param a The input data (String)\n * @param bits (number = 256) The Keccak width\n */\nexports.keccakFromString = function (a, bits) {\n    if (bits === void 0) { bits = 256; }\n    helpers_1.assertIsString(a);\n    var buf = Buffer.from(a, 'utf8');\n    return exports.keccak(buf, bits);\n};\n/**\n * Creates Keccak hash of an 0x-prefixed string input\n * @param a The input data (String)\n * @param bits (number = 256) The Keccak width\n */\nexports.keccakFromHexString = function (a, bits) {\n    if (bits === void 0) { bits = 256; }\n    helpers_1.assertIsHexString(a);\n    return exports.keccak(bytes_1.toBuffer(a), bits);\n};\n/**\n * Creates Keccak hash of a number array input\n * @param a The input data (number[])\n * @param bits (number = 256) The Keccak width\n */\nexports.keccakFromArray = function (a, bits) {\n    if (bits === void 0) { bits = 256; }\n    helpers_1.assertIsArray(a);\n    return exports.keccak(bytes_1.toBuffer(a), bits);\n};\n/**\n * Creates SHA256 hash of a Buffer input.\n * @param a The input data (Buffer)\n */\nexports.sha256 = function (a) {\n    helpers_1.assertIsBuffer(a);\n    return _sha256(a);\n};\n/**\n * Creates SHA256 hash of a string input.\n * @param a The input data (string)\n */\nexports.sha256FromString = function (a) {\n    helpers_1.assertIsString(a);\n    return _sha256(a);\n};\n/**\n * Creates SHA256 hash of a number[] input.\n * @param a The input data (number[])\n */\nexports.sha256FromArray = function (a) {\n    helpers_1.assertIsArray(a);\n    return _sha256(a);\n};\n/**\n * Creates SHA256 hash of an input.\n * @param  a The input data (Buffer|Array|String)\n */\nvar _sha256 = function (a) {\n    a = bytes_1.toBuffer(a);\n    return createHash('sha256')\n        .update(a)\n        .digest();\n};\n/**\n * Creates RIPEMD160 hash of a Buffer input.\n * @param a The input data (Buffer)\n * @param padded Whether it should be padded to 256 bits or not\n */\nexports.ripemd160 = function (a, padded) {\n    helpers_1.assertIsBuffer(a);\n    return _ripemd160(a, padded);\n};\n/**\n * Creates RIPEMD160 hash of a string input.\n * @param a The input data (String)\n * @param padded Whether it should be padded to 256 bits or not\n */\nexports.ripemd160FromString = function (a, padded) {\n    helpers_1.assertIsString(a);\n    return _ripemd160(a, padded);\n};\n/**\n * Creates RIPEMD160 hash of a number[] input.\n * @param a The input data (number[])\n * @param padded Whether it should be padded to 256 bits or not\n */\nexports.ripemd160FromArray = function (a, padded) {\n    helpers_1.assertIsArray(a);\n    return _ripemd160(a, padded);\n};\n/**\n * Creates RIPEMD160 hash of the input.\n * @param a The input data (Buffer|Array|String|Number)\n * @param padded Whether it should be padded to 256 bits or not\n */\nvar _ripemd160 = function (a, padded) {\n    a = bytes_1.toBuffer(a);\n    var hash = createHash('rmd160')\n        .update(a)\n        .digest();\n    if (padded === true) {\n        return bytes_1.setLengthLeft(hash, 32);\n    }\n    else {\n        return hash;\n    }\n};\n/**\n * Creates SHA-3 hash of the RLP encoded version of the input.\n * @param a The input data\n */\nexports.rlphash = function (a) {\n    return exports.keccak(rlp.encode(a));\n};\n//# sourceMappingURL=hash.js.map"],"sourceRoot":""}